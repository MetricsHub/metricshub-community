<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.sentrysoftware.hardware.matrix</groupId>
		<artifactId>matrix</artifactId>
		<version>3.0.00-SNAPSHOT</version>
	</parent>
	<artifactId>hws-debian</artifactId>
	<packaging>pom</packaging>

	<name>Hardware Sentry for Debian</name>
	<description>Hardware Sentry Package for Debian/Ubuntu (.deb)</description>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>hws-agent</artifactId>
			<version>${project.version}</version>
			<classifier>dist</classifier>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>hws-doc</artifactId>
			<version>${project.version}</version>
			<classifier>site</classifier>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<!-- Unpack hws-agent and documentation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-hws-agent</id>
						<phase>process-resources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/jpackage/hws</outputDirectory>
							<includeArtifactIds>hws-agent</includeArtifactIds>
						</configuration>
					</execution>
					<execution>
						<id>unpack-hws-doc</id>
						<phase>process-resources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/jpackage/hws/site</outputDirectory>
							<includeArtifactIds>hws-doc</includeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Download OpenTelemetry Collector Contrib binary -->
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>download-otelcol-contrib-linux-amd64</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>${otelColContribBaseUrl}/otelcol-contrib_${otelVersion}_linux_amd64.tar.gz</url>
							<unpack>true</unpack>
							<outputDirectory>${project.build.directory}/jpackage/hws/otel</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- JPackage resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Run jpackage command to generate Hardware Sentry .deb and app-image -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>package-debian</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${env.JPACKAGE_HOME}/bin/jpackage</executable>
							<arguments>
								<argument>--add-launcher</argument>
								<argument>hws-encrypt=hws-encrypt.properties</argument>
								<argument>--add-launcher</argument>
								<argument>agent=hws-agent.properties</argument>
								<argument>--license-file</argument>
								<argument>hws/LICENSE</argument>
								<argument>@jpackage.txt</argument>
							</arguments>
							<workingDirectory>${project.build.directory}/jpackage</workingDirectory>
						</configuration>
					</execution>
					<execution>
						<id>package-app-image</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${env.JPACKAGE_HOME}/bin/jpackage</executable>
							<arguments>
								<argument>--add-launcher</argument>
								<argument>hws-encrypt=hws-encrypt.properties</argument>
								<argument>--add-launcher</argument>
								<argument>agent=hws-agent.properties</argument>
								<argument>@jpackage.txt</argument>
								<argument>--type</argument>
								<argument>app-image</argument>
							</arguments>
							<workingDirectory>${project.build.directory}/jpackage</workingDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Rename the package (JPackage doesn't accept version with snapshot)-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>rename-package</id>
						<phase>package</phase>
						<configuration>
							<target>
								<move file="${project.build.directory}/hws_${project.version.noSnapshot}_amd64.deb" tofile="${project.build.directory}/${project.artifactId}-${project.version}-amd64.deb"/>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- assembly for the docker classifier -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>docker-package</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/docker.xml</descriptor>
							</descriptors>
							<appendAssemblyId>true</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Attach artifacts -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>attach-artifact-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>${project.build.directory}/${project.artifactId}-${project.version}-amd64.deb</file>
									<type>deb</type>
									<artifactId>${project.artifactId}</artifactId>
									<classifier>amd64</classifier>
								</artifact>
								<artifact>
									<file>${project.build.directory}/${project.artifactId}-${project.version}-docker.tar.gz</file>
									<type>tar.gz</type>
									<artifactId>${project.artifactId}</artifactId>
									<classifier>docker</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>