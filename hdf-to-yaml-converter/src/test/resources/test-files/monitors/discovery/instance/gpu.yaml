- name: test1
  input: |
    GPU.Discovery.InstanceTable=%GPU.Discovery.Source(1)%
    GPU.Discovery.Instance.Vendor="NVIDIA"
    GPU.Discovery.Instance.DeviceID=InstanceTable.Column(2)
    GPU.Discovery.Instance.DisplayID=InstanceTable.Column(2)
    GPU.Discovery.Instance.Model=InstanceTable.Column(14)
    GPU.Discovery.Instance.SerialNumber=InstanceTable.Column(15)
    GPU.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(16)
    GPU.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(18)
    GPU.Discovery.Instance.DriverVersion=InstanceTable.Column(17)
    GPU.Discovery.Instance.FirmwareVersion=InstanceTable.Column(19)
    GPU.Discovery.Instance.Size=InstanceTable.Column(20)
    Gpu.Discovery.Instance.UsedTimePercentWarningThreshold="1"
    Gpu.Discovery.Instance.UsedTimePercentAlarmThreshold="2"
    Gpu.Discovery.Instance.MemoryUtilizationWarningThreshold="3"
    Gpu.Discovery.Instance.MemoryUtilizationAlarmThreshold="4"
  expected:
    monitors:
      gpu:
        discovery:
          mapping:
            source: $monitors.gpu.discovery.sources.source(1)$
            attributes:
              vendor: NVIDIA
              id: $column(2)
              __display_id: $column(2)
              model: $column(14)
              serial_number: $column(15)
              info: join($column(16), $column(18), " ")
              driver_version: $column(17)
              firmware_version: $column(19)
              hw.parent.type: enclosure
              name: sprintf("%s (%s %s - %s)", $column(2), "NVIDIA", $column(14), $column(20))
            metrics:
              hw.gpu.memory.limit: mebiByte2Byte($column(20))
              hw.gpu.utilization.limit{limit_type="degraded"}: percent2Ratio("1")
              hw.gpu.utilization.limit{limit_type="critical"}: percent2Ratio("2")
              hw.gpu.memory.utilization.limit{limit_type="degraded"}: percent2Ratio("3")
              hw.gpu.memory.utilization.limit{limit_type="critical"}: percent2Ratio("4")