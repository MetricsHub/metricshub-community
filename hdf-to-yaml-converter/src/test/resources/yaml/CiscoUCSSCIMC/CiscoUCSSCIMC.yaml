---
connector:
  displayName: Cisco UCS S-Series CIMC (SNMP)
  platforms: Cisco UCS
  reliesOn: Cisco S-Series CIMC
  information: This connector provides hardware monitoring for the Cisco S-Series Servers with CIMC cards via SNMP.
  detection:
    connectionTypes:
    - remote
    appliesTo:
    - OOB
    supersedes:
    - CiscoUCSCIMC
    criteria:
      # DETECTION
      # Does a get_next to see if there that there is come CPU information
      # We are sure to have a cisco
    - type: snmpGetNext
      oid: 1.3.6.1.4.1.9.9.719.1.41.9
    # Now make sure it's a S series
    - type: snmpGet
      oid: 1.3.6.1.2.1.1.1.0
      expectedResult: UCS S
monitors:
  enclosure:
    discovery:
      sources:
        source(1):
          # ##################################### ENCLOSURE #####################################//
          # Vendor/Model in one field, no spaces.
          # Model;
          type: snmpGet
          oid: 1.3.6.1.2.1.1.1.0
          computes:
            # Get rid of CIMC in the model
            # Model;
          - type: replace
            column: 1
            existingValue: "Cisco Integrated Management Controller(CIMC) ["
            newValue: ""
            # Get rid of Cisco IMC in the model
            # Model;
          - type: replace
            column: 1
            existingValue: "Cisco Integrated Management Controller(Cisco IMC) ["
            newValue: ""
            # Add a Joiner
            # MSHW;Model;
          - type: leftConcat
            column: 1
            value: MSHW;
            # Exclude the second enclosure created in case the output of the getnext is on two lines
            # MSHW;Model
          - type: excludeMatchingLines
            column: 2
            regExp: "^]"
        source(2):
          # Find deviceID
          # DN
          type: snmpGet
          oid: 1.3.6.1.4.1.9.9.719.1.9.35.1.2.1
          computes:
          # '"Enclosure";DN'
          - type: leftConcat
            column: 1
            value: Enclosure;
          - type: awk
            script: $file("embeddedFile-1")$
            separators: ;
            selectColumns: "1,4"
        source(3):
          # Join Old and New
          # MSHW;Model;MSHW;DN_truncated;
          type: tableJoin
          leftTable: $monitors.enclosure.discovery.sources.source(1)$
          rightTable: $monitors.enclosure.discovery.sources.source(2)$
          leftKeyColumn: 1
          rightKeyColumn: 1
          defaultRightLine: ;;;;;
      mapping:
        # The InstanceTable
        # MSHW;Model;MSHW;DN_truncated
        source: $monitors.enclosure.discovery.sources.source(3)$
        attributes:
          id: $column(4)
          __display_id: $column(2)
          model: $column(2)
          vendor: Cisco
          name: "sprintf(\"Enclosure: %s (%s %s)\", $column(2), \"Cisco\", $column(2))"
  blade:
    discovery:
      sources:
        source(1):
          # Source(1) = cucsComputeRackUnitEntry
          # Name;Model;Serial;OperState;Vendor;EnclosurePresence;DN;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.9.35.1
          selectColumns: "3,32,47,42,51,45,2"
          computes:
          # Remove lines where cucsComputeRackUnitPresence = 1(Empty) and 11 (Missing)
          - type: excludeMatchingLines
            column: 6
            valueList: "1,11"
          # '"Blade";Name;Model;Serial;OperState;Vendor;EnclosurePresence;DN;'
          - type: leftConcat
            column: 1
            value: Blade;
          # Name;Model;Serial;OperState;Vendor;EnclosurePresence;DN;name_truncated;
          - type: awk
            script: $file("embeddedFile-1")$
            separators: ;
            selectColumns: "3,4,5,6,7,8,9,10"
          - type: leftConcat
            column: 5
            value: "Vendor: "
      mapping:
        # The InstanceTable
        # Name;Model;Serial;OperState;Vendor;EnclosurePresence;DN;name_truncated
        source: $monitors.blade.discovery.sources.source(1)$
        attributes:
          id: $column(7)
          __display_id: $column(1)
          model: $column(2)
          serial_number: $column(3)
          info: $column(5)
          hw.parent.type: enclosure
          hw.parent.id: $column(8)
          name: "sprintf(\"%s (%s)\", $column(1), $column(2))"
    collect:
      # Collect type is MultiInstance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = cucsEquipmentEnclosureEntry
          # DN;OperState;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.9.35.1
          selectColumns: "2,42"
          computes:
            # Duplicate the StatusCode column
            # DN;OperState;OperState;
          - type: duplicateColumn
            column: 2
            # Translate 1st StatusCode into PATROLSTatus
            # DN;PATROLStatus;OperState;
          - type: translate
            column: 2
            translationTable: bladeStatusTranslationTable
            # Translate second STatusCode into a more readable string
            # DN;PATROLStatus;StatusInformation;
          - type: translate
            column: 3
            translationTable: bladeStatusInformationTranslationTable
        source(2):
          # Join the Discovery to the Collect
          # Name;Model;Serial;OperState;Vendor;EnclosurePresence;DN;name_truncated;DN;PATROLStatus;StatusInformation;
          type: tableJoin
          leftTable: $monitors.blade.discovery.sources.source(1)$
          rightTable: $monitors.blade.collect.sources.source(1)$
          leftKeyColumn: 7
          rightKeyColumn: 1
          defaultRightLine: ;;;;;;
      mapping:
        # ValueTable = Source(1)
        source: $monitors.blade.collect.sources.source(2)$
        deviceId: $column(7)
        metrics:
          hw.status{hw.type="blade"}: $column(10)
        legacyTextParameters:
          StatusInformation: $column(11)
  fan:
    discovery:
      sources:
        source(1):
          # Source(1) = cucsEquipmentFanEntry
          # FanPresence;DN;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.15.12.1
          selectColumns: "13,2"
          computes:
          # Remove lines where cucsEquipmentFanPresence = 1(Empty) and 11 (Missing)
          - type: excludeMatchingLines
            column: 1
            valueList: "1,11"
          # '"Fan";FanPresence;DN;'
          - type: leftConcat
            column: 1
            value: Fan;
          # '"Fan";FanPresence;DN;DN'
          - type: duplicateColumn
            column: 3
          # FanPresence;DN;DN_truncated
          - type: awk
            script: $file("embeddedFile-1")$
            separators: ;
            selectColumns: "3,4,6"
      mapping:
        # InstanceTable = Source(1)
        source: $monitors.fan.discovery.sources.source(1)$
        attributes:
          id: $column(2)
          __display_id: $column(3)
          hw.parent.type: enclosure
          name: $column(3)
    collect:
      # Collect type is MultiInstance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = cucsEquipmentFanEntry
          # DN;OperState;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.15.12.1
          selectColumns: "2,9"
          computes:
            # Duplicate the StatusCode column
            # DN;OperState;OperState;
          - type: duplicateColumn
            column: 2
            # Translate 1st StatusCode into PATROLStatus
            # DN;PATROLStatus;OperState;
          - type: translate
            column: 2
            translationTable: statusTranslationTable
            # Translate second STatusCode into a more readable string
            # DN;PATROLStatus;StatusInformation;
          - type: translate
            column: 3
            translationTable: statusInformationTranslationTable
      mapping:
        # ValueTable = Source(1)
        source: $monitors.fan.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="fan"}: $column(2)
        legacyTextParameters:
          StatusInformation: $column(3)
  power_supply:
    discovery:
      sources:
        source(1):
          # Source(1) = cucsEquipmentPowerSupplyEntry
          # DN;Name;Model;Serial;Revision;PsuPresence;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.15.56.1
          selectColumns: "2,3,6,13,12,11"
          computes:
          # Remove lines where cucsEquipmentPsuPresence = 1(Empty) and 11 (Missing)
          - type: excludeMatchingLines
            column: 5
            valueList: "1,11"
            # Add Identifiers
            # DN;Name;Model;Serial;Revision;
          - type: leftConcat
            column: 3
            value: "Model Number: "
          - type: leftConcat
            column: 4
            value: "Serial Number: "
          - type: leftConcat
            column: 5
            value: "Revision: "
      mapping:
        # InstanceTable = Source(1)
        source: $monitors.power_supply.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          __display_id: $column(2)
          info: "join(\" \", $column(3), $column(4), $column(5))"
          hw.parent.type: enclosure
          name: $column(2)
    collect:
      # Collect type is MultiInstance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = cucsEquipmentPowerSupplyEntry
          # DN;OperState;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.15.56.1
          selectColumns: "2,7"
          computes:
            # Duplicate the StatusCode column
            # DN;OperState;OperState;
          - type: duplicateColumn
            column: 2
            # Translate 1st StatusCode into PATROLStatus
            # DN;PATROLStatus;OperState;
          - type: translate
            column: 2
            translationTable: statusTranslationTable
            # Translate second STatusCode into a more readable string
            # DN;PATROLStatus;StatusInformation;
          - type: translate
            column: 3
            translationTable: statusInformationTranslationTable
      mapping:
        # ValueTable = Source(1)
        source: $monitors.power_supply.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="power_supply"}: $column(2)
        legacyTextParameters:
          StatusInformation: $column(3)
  cpu:
    discovery:
      sources:
        source(1):
          # Source(1) = cucsProcessorUnitTable
          # Name;Model;Speed;Vendor;CPUPresence;DN;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.41.9.1
          selectColumns: "3,8,17,21,13,2"
          computes:
          # Remove lines where cucsProcessorUnitPresence = 1(Empty) and 11 (Missing)
          - type: excludeMatchingLines
            column: 5
            valueList: "1,11"
          # '"CPU";Name;Model;Speed;Vendor;CPUPresence;DN;'
          - type: leftConcat
            column: 1
            value: CPU;
          # Name;Model;Speed;Vendor;CPUPresence;DN;DN_truncated
          - type: awk
            script: $file("embeddedFile-1")$
            separators: ;
            selectColumns: "3,4,5,6,7,8,9"
      mapping:
        # InstanceTable = Source(1)
        source: $monitors.cpu.discovery.sources.source(1)$
        attributes:
          id: $column(6)
          __display_id: $column(1)
          vendor: $column(4)
          model: $column(2)
          hw.parent.type: blade
          hw.parent.id: $column(7)
          name: "sprintf(\"%s (%s - %s - %s)\", $column(1), $column(4), $column(2), megaHertz2HumanFormat($column(3)))"
        metrics:
          hw.cpu.speed.limit{limit_type="max"}: megaHertz2Hertz($column(3))
    collect:
      # Collect type is MultiInstance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = cucsProcessorUnitTable
          # DN;OperState;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.41.9.1
          selectColumns: "2,9"
          computes:
            # Duplicate the StatusCode column
            # DN;OperState;OperState;
          - type: duplicateColumn
            column: 2
            # Translate 1st StatusCode into PATROLSTatus
            # DN;PATROLStatus;OperState;
          - type: translate
            column: 2
            translationTable: statusTranslationTable
            # Translate second STatusCode into a more readable string
            # DN;PATROLStatus;StatusInformation;
          - type: translate
            column: 3
            translationTable: statusInformationTranslationTable
      mapping:
        # ValueTable = Source(1)
        source: $monitors.cpu.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="cpu"}: $column(2)
        legacyTextParameters:
          StatusInformation: $column(3)
  memory:
    discovery:
      sources:
        source(1):
          # Source(1) = cucsMemoryUnitEntry
          # Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.30.11.1
          selectColumns: "3,11,17,6,19,21,12,23,24,2"
          computes:
            # Exclude  "Missing" memory modules
            # Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;
          - type: excludeMatchingLines
            column: 3
            valueList: "1,11"
          # '"Memory";Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;'
          - type: leftConcat
            column: 1
            value: Memory;
          # Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;DN_truncated
          - type: awk
            script: $file("embeddedFile-1")$
            separators: ;
            selectColumns: "3,4,5,6,7,8,9,10,11,12,13"
            # Add Identifiers
            # Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;DN_truncated
          - type: leftConcat
            column: 6
            value: "Speed: "
            # Translate Type into a more readable string
            # Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;DN_truncated
          - type: translate
            column: 8
            translationTable: memoryTranslationTable
          - type: leftConcat
            column: 2
            value: "Location: "
      mapping:
        # InstanceTable = Source(1)
        # Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;DN_truncated
        source: $monitors.memory.discovery.sources.source(1)$
        attributes:
          id: $column(10)
          __display_id: $column(1)
          serial_number: $column(5)
          model: $column(7)
          type: $column(8)
          vendor: $column(9)
          info: "join(\" \", $column(2), $column(6))"
          hw.parent.type: blade
          hw.parent.id: $column(11)
          name: "sprintf(\"%s (%s - %s - %s MB)\", $column(1), $column(9), $column(8), $column(4))"
        metrics:
          hw.memory.limit: mebiByte2Byte($column(4))
    collect:
      # Collect type is MultiInstance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = cucsMemoryUnitEntry
          # DN;OperState;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.30.11.1
          selectColumns: "2,13"
          computes:
            # Duplicate the StatusCode column
            # DN;OperState;OperState;
          - type: duplicateColumn
            column: 2
            # Translate 1st StatusCode into PATROLSTatus
            # DN;PATROLStatus;OperState;
          - type: translate
            column: 2
            translationTable: statusTranslationTable
            # Translate second STatusCode into a more readable string
            # DN;PATROLStatus;StatusInformation;
          - type: translate
            column: 3
            translationTable: statusInformationTranslationTable
      mapping:
        # ValueTable = Source(1)
        source: $monitors.memory.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="memory"}: $column(2)
        legacyTextParameters:
          StatusInformation: $column(3)
  battery:
    discovery:
      sources:
        source(1):
          # Source(1) = cucsStorageRaidBatteryEntry
          # Name;Model;Vendor;RaidBatteryPresence;DN;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.45.11.1
          selectColumns: "3,7,14,10,2"
          computes:
          # Remove lines where cucsStorageRaidBatteryPresence = 1(Empty) and 11 (Missing)
          - type: excludeMatchingLines
            column: 4
            valueList: "1,11"
          # '"Battery";Name;Model;Vendor;RaidBatteryPresence;DN;'
          - type: leftConcat
            column: 1
            value: Battery;
          # '"Battery";Name;Model;Vendor;RaidBatteryPresence;DN;DN_truncated'
          - type: awk
            script: $file("embeddedFile-1")$
            separators: ;
            selectColumns: "3,4,5,6,7,8"
      mapping:
        # InstanceTable = Source(1)
        # DN;Model;Vendor;
        # Name;Model;Vendor;RaidBatteryPresence;DN;DN_truncated
        source: $monitors.battery.discovery.sources.source(1)$
        attributes:
          id: $column(5)
          __display_id: $column(1)
          vendor: $column(3)
          model: $column(2)
          hw.parent.type: blade
          hw.parent.id: $column(6)
          name: "sprintf(\"%s (%s %s)\", $column(1), $column(3), $column(2))"
    collect:
      # Collect type is MultiInstance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = cucsProcessorUnitTable
          # DN;OperState;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.45.11.1
          selectColumns: "2,9"
          computes:
            # Duplicate the StatusCode column
            # DN;OperState;OperState;
          - type: duplicateColumn
            column: 2
            # Translate 1st StatusCode into PATROLSTatus
            # DN;PATROLStatus;OperState;
          - type: translate
            column: 2
            translationTable: statusTranslationTable
            # Translate second STatusCode into a more readable string
            # DN;PATROLStatus;StatusInformation;
          - type: translate
            column: 3
            translationTable: statusInformationTranslationTable
      mapping:
        # ValueTable = Source(1)
        source: $monitors.battery.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="battery"}: $column(2)
        legacyTextParameters:
          StatusInformation: $column(3)
  disk_controller:
    discovery:
      sources:
        source(1):
          # Source(1) = cucsProcessorUnitTable
          # Name;Model;SerialNumber;Vendor;Revision;DiskControllerPresence;DN;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.45.1.1
          selectColumns: "3,5,14,18,13,12,2"
          computes:
          # Remove lines where cucsStorageControllerPresence = 1(Empty) and 11 (Missing)
          - type: excludeMatchingLines
            column: 6
            valueList: "1,11"
          # '"DiskController";Name;Model;SerialNumber;Vendor;Revision;DiskControllerPresence;DN;'
          - type: leftConcat
            column: 1
            value: DiskController;
          # Name;Model;SerialNumber;Vendor;Revision;DiskControllerPresence;DN;DN_truncated
          - type: awk
            script: $file("embeddedFile-1")$
            separators: ;
            selectColumns: "3,4,5,6,7,8,9,10"
      mapping:
        # InstanceTable = Source(1)
        # Name;Model;SerialNumber;Vendor;Revision;DiskControllerPresence;DN;DN_truncated
        source: $monitors.disk_controller.discovery.sources.source(1)$
        attributes:
          id: $column(7)
          __display_id: $column(1)
          vendor: $column(4)
          model: $column(2)
          serial_number: $column(3)
          firmware_version: $column(5)
          hw.parent.type: blade
          hw.parent.id: $column(8)
          name: "sprintf(\"Disk Controller: %s (%s %s)\", $column(1), $column(4), $column(2))"
    collect:
      # Collect type is MultiInstance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = cucsProcessorUnitTable
          # DN;OperState;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.45.1.1
          selectColumns: "2,6"
          computes:
            # Duplicate the StatusCode column
            # DN;OperState;OperState;
          - type: duplicateColumn
            column: 2
            # Translate 1st StatusCode into PATROLSTatus
            # DN;PATROLStatus;OperState;
          - type: translate
            column: 2
            translationTable: statusTranslationTable
            # Translate second STatusCode into a more readable string
            # DN;PATROLStatus;StatusInformation;
          - type: translate
            column: 3
            translationTable: statusInformationTranslationTable
      mapping:
        # ValueTable = Source(1)
        source: $monitors.disk_controller.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="disk_controller"}: $column(2)
        legacyTextParameters:
          StatusInformation: $column(3)
  physical_disk:
    discovery:
      sources:
        source(1):
          # Source(1) = cucsEquipmentPhysicalDiskEntry
          # Name;SerialNumber;Size;Vendor;DiskPresence;Model;DN;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.45.4.1
          selectColumns: "3,12,13,14,10,7,2"
          computes:
          # Remove lines where cucsStorageLocalDiskPresence = 1(Empty) and 11 (Missing)
          - type: excludeMatchingLines
            column: 5
            valueList: "1,11"
            # Convert the size into bytes
            # Name;SerialNumber;Size;Vendor;DiskPresence;Model;DN;
          - type: multiply
            column: 3
            value: 1048576
          # '"PhysicalDisk";Name;SerialNumber;Size;Vendor;DiskPresence;Model;DN;'
          - type: leftConcat
            column: 1
            value: PhysicalDisk;
          # Name;SerialNumber;Size;Vendor;DiskPresence;Model;DN;DN_truncated
          - type: awk
            script: $file("embeddedFile-1")$
            separators: ;
            selectColumns: "3,4,5,6,7,8,9,10"
      mapping:
        # InstanceTable = Source(1)
        # Name;SerialNumber;Size;Vendor;DiskPresence;Model;DN;DN_truncated
        source: $monitors.physical_disk.discovery.sources.source(1)$
        attributes:
          id: $column(7)
          __display_id: $column(1)
          vendor: $column(4)
          model: $column(6)
          serial_number: $column(2)
          hw.parent.type: disk_controller
          hw.parent.id: $column(8)
          name: "sprintf(\"%s (%s - %s)\", $column(1), $column(4), bytes2HumanFormatBase10($column(3)))"
        metrics:
          hw.physical_disk.size: $column(3)
    collect:
      # Collect type is MultiInstance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = cucsEquipmentPhysicalDiskEntry
          # DN;OperState;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.45.4.1
          selectColumns: "2,9"
          computes:
            # Duplicate the StatusCode column
            # DN;OperState;OperState;
          - type: duplicateColumn
            column: 2
            # Translate 1st StatusCode into PATROLStatus
            # DN;PATROLStatus;OperState;
          - type: translate
            column: 2
            translationTable: statusTranslationTable
            # Translate second STatusCode into a more readable string
            # DN;PATROLStatus;StatusInformation;
          - type: translate
            column: 3
            translationTable: statusInformationTranslationTable
      mapping:
        # ValueTable = Source(1)
        source: $monitors.physical_disk.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="physical_disk"}: $column(2)
        legacyTextParameters:
          StatusInformation: $column(3)
  other_device:
    discovery:
      sources:
        source(1):
          # Source(1) = cucsEquipmentOtherDeviceEntry
          # Name;FlexFlashControllerPresence;DN;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.45.35.1
          selectColumns: "3,17,2"
          computes:
          # Remove lines where cucsStorageControllerPresence = 1(Empty) and 11 (Missing)
          - type: excludeMatchingLines
            column: 2
            valueList: "1,11"
      mapping:
        # InstanceTable = Source(1)
        # Name;FlexFlashControllerPresence;DN;
        source: $monitors.other_device.discovery.sources.source(1)$
        attributes:
          id: $column(3)
          __display_id: $column(1)
          device_type: FlexFlash
          hw.parent.type: enclosure
          name: "sprintf(\"%s: %s\", \"FlexFlash\", $column(1))"
    collect:
      # Collect type is MultiInstance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = cucsEquipmentOtherDeviceEntry
          # DN;OperState;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.719.1.45.35.1
          selectColumns: "2,10"
          computes:
            # Duplicate the StatusCode column
            # DN;OperState;OperState;
          - type: duplicateColumn
            column: 2
            # Translate 1st StatusCode into PATROLSTatus
            # DN;PATROLStatus;OperState;
          - type: translate
            column: 2
            translationTable: statusTranslationTable
            # Translate second STatusCode into a more readable string
            # DN;PATROLStatus;StatusInformation;
          - type: translate
            column: 3
            translationTable: statusInformationTranslationTable
      mapping:
        # ValueTable = Source(1)
        source: $monitors.other_device.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="other_device"}: $column(2)
        legacyTextParameters:
          StatusInformation: $column(3)
translations:
  statusInformationTranslationTable:
    "51": Fabric Conn Problem
    "52": Fabric Unsupported Conn
    "10": Accessibility Problem
    "11": Identity Unestablishable
    "12": BIOS Post Timeout
    "13": Disabled
    "14": Malformed FRU
    Default: Unknown Status
    "0": Unknown
    "1": Operable
    "100": Not Supported
    "2": Inoperable
    "101": Discovery
    "3": Degraded
    "102": Discovery Failed
    "4": Powered Off
    "103": Identify
    "5": Power Problem
    "104": Post Failure
    "6": Removed
    "105": Upgrade Problem
    "7": Voltage Problem
    "106": Peer Comm Problem
    "8": Thermal Problem
    "107": Auto Upgrade
    "9": Performance Problem
    "81": Config
    "108": Link Activate Blocked
    "82": Equipment Problem
    "83": Decommissioning
    "84": Chassis Limit Exceeded
  bladeStatusTranslationTable:
    "29": degraded
    "210": ok
    "211": degraded
    "212": degraded
    "50": failed
    "30": degraded
    "31": degraded
    "10": ok
    "32": degraded
    "11": ok
    "33": failed
    "12": ok
    "34": failed
    "13": ok
    "35": failed
    "14": ok
    "36": ok
    "15": ok
    Default: Unknown Status
    "0": UNKNOWN
    "1": degraded
    "101": ok
    "201": ok
    "202": ok
    "203": ok
    "204": failed
    "60": degraded
    "61": degraded
    "40": ok
    "62": degraded
    "41": ok
    "63": failed
    "20": ok
    "21": ok
  statusTranslationTable:
    "51": degraded
    "52": degraded
    "10": degraded
    "11": degraded
    "12": failed
    "13": degraded
    "14": degraded
    Default: Unknown Status
    "0": UNKNOWN
    "1": ok
    "100": degraded
    "2": failed
    "101": degraded
    "3": degraded
    "102": failed
    "4": failed
    "103": ok
    "5": degraded
    "104": failed
    "6": failed
    "105": degraded
    "7": degraded
    "106": degraded
    "8": degraded
    "107": degraded
    "9": degraded
    "81": degraded
    "108": degraded
    "82": degraded
    "83": degraded
    "84": degraded
  memoryTranslationTable:
    "24": DDR3
    "25": FBD2
    "26": DDR4
    "10": EEPROM
    "11": FEPROM
    "12": EPROM3
    "13": CDRAM
    "14": N3DRAM
    "15": SDRAM
    "16": SGRAM
    "17": RDRAM
    "18": DDR
    "19": DDR2
    Default: Unknown Type
    "0": Undiscovered
    "1": Other
    "2": Unknown
    "3": DRAM
    "4": EDRAM
    "5": VRAM
    "6": SRAM
    "7": RAM
    "8": ROM
    "9": Flash
    "20": DDR2FBDIMM
  bladeStatusInformationTranslationTable:
    "29": Compute Mismatch
    "210": Pending Reboot
    "211": Pending Reassociation
    "212": SVNIC Not Present
    "50": Inaccessible
    "30": Compute Failed
    "31": Degraded
    "10": ok
    "32": Discovery Failed
    "11": Discovery
    "33": Config Failure
    "12": Config
    "34": Unconfig Failed
    "13": Unconfig
    "35": Test Failed
    "14": PowerOff
    "36": Maintenance Failed
    "15": Restart
    Default: Unknown Status
    "0": Indeterminate
    "1": Unassociated
    "101": Decommissioning
    "201": BIOS Restore
    "202": CMOS Reset
    "203": Diagnostics
    "204": Diagnostics Failed
    "60": Thermal Problem
    "61": Power Problem
    "40": Removed
    "62": Voltage Problem
    "41": Disabled
    "63": Inoperable
    "20": Maintenance
    "21": Test
