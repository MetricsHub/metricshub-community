---
extends:
- ../DellCMC-header/DellCMC-header
constants:
  ENCLO_SOURCE_DISCO: "\"${source::monitors.enclosure.discovery.sources.source(11)}\""
  _Command: racadm
  ENCLO_SOURCE_COL: "\"${source::monitors.enclosure.collect.sources.source(10)}\""
connector:
  displayName: Dell MX7000 Chassis
  platforms: Dell MX7000 Chassis
  reliesOn: Dell MX7000 Management Module
  information: "Provides environmental information (temperatures, fans and power supplies) on Dell Blade servers through the Management Module"
  version: 1.0
  detection:
    connectionTypes:
    - remote
    appliesTo:
    - OOB
    criteria:
    # Host should respond to telnet the way described below
    - type: osCommand
      commandLine: getsysinfo
      expectedResult: RAC
monitors:
  enclosure:
    discovery:
      sources:
        source(1):
          # Source(1) = Output of the getsysinfo command through telnet
          # Look for the "System Model=" line
          type: osCommand
          commandLine: _Command getsysinfo -c
          computes:
            # Parse the output of getsysinfo with an AWK script
            # Model;SerialNumber
          - type: awk
            script: "${file::../DellCMC-header/embeddedFile-1}"
            keep: MSHW;
            separators: ;
            selectColumns: "2,3"
        source(2):
          # Source(2) = Output of getsensorinfo, getmodinfo and getpbinfo
          type: osCommand
          commandLine: _Command getsensorinfo
        source(3):
          type: osCommand
          commandLine: _Command getmodinfo
        source(4):
          type: osCommand
          commandLine: _Command getpbinfo
        source(5):
          type: osCommand
          commandLine: _Command raid get vdisks -o
        source(6):
          type: osCommand
          commandLine: _Command raid get pdisks -o
        source(7):
          type: osCommand
          commandLine: _Command raid get tempprobes -o
        source(8):
          type: osCommand
          commandLine: _Command raid get controllers -o
        source(9):
          type: osCommand
          commandLine: _Command raid get batteries -o
        source(10):
          type: osCommand
          commandLine: _Command chassislog view -s critical
        source(11):
          type: tableUnion
          tables:
          - "${source::monitors.enclosure.discovery.sources.source(2)}"
          - "${source::monitors.enclosure.discovery.sources.source(3)}"
          - "${source::monitors.enclosure.discovery.sources.source(4)}"
          - "${source::monitors.enclosure.discovery.sources.source(5)}"
          - "${source::monitors.enclosure.discovery.sources.source(6)}"
          - "${source::monitors.enclosure.discovery.sources.source(7)}"
          - "${source::monitors.enclosure.discovery.sources.source(9)}"
          - "${source::monitors.enclosure.discovery.sources.source(10)}"
    collect:
      type: monoInstance
      sources:
        source(1):
          # Source(2) = Output of getsensorinfo, getmodinfo and getpbinfo
          type: osCommand
          commandLine: _Command getsensorinfo
        source(2):
          type: osCommand
          commandLine: _Command getmodinfo
        source(3):
          type: osCommand
          commandLine: _Command getpbinfo
        source(4):
          type: osCommand
          commandLine: _Command raid get vdisks -o
        source(5):
          type: osCommand
          commandLine: _Command raid get pdisks -o
        source(6):
          type: osCommand
          commandLine: _Command raid get tempprobes -o
        source(7):
          type: osCommand
          commandLine: _Command raid get controllers -o
        source(8):
          type: osCommand
          commandLine: _Command raid get batteries -o
        source(9):
          type: osCommand
          commandLine: _Command chassislog view -s critical
        source(10):
          type: tableUnion
          tables:
          - "${source::monitors.enclosure.collect.sources.source(1)}"
          - "${source::monitors.enclosure.collect.sources.source(2)}"
          - "${source::monitors.enclosure.collect.sources.source(3)}"
          - "${source::monitors.enclosure.collect.sources.source(4)}"
          - "${source::monitors.enclosure.collect.sources.source(5)}"
          - "${source::monitors.enclosure.collect.sources.source(6)}"
          - "${source::monitors.enclosure.collect.sources.source(7)}"
          - "${source::monitors.enclosure.collect.sources.source(8)}"
          - "${source::monitors.enclosure.collect.sources.source(9)}"
  blade:
    discovery:
      sources:
        source(2):
          # Source(2) = Getslotname is not available on this platform, so just set to blank.
          type: static
          value: ""
