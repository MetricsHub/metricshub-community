---
connector:
  displayName: Cisco Ethernet Switch
  platforms: Cisco
  reliesOn: Cisco SNMP Agent (ciscoMgmt)
  version: 1.0
  information: "This connector discovers the enclosure Cisco Ethernet switches as well as the various environment sensors (temperatures, fans, power supplies, etc.). It relies on the SNMP protocol."
  detection:
    connectionTypes:
    - remote
    - local
    appliesTo:
    - Network
    supersedes:
    - GenericSwitchEnclosure
    criteria:
      # Detection Criteria 1
      # Must have A Cisco Enviroment Monitor Present
    - type: snmpGetNext
      oid: 1.3.6.1.4.1.9.9.13.1.1
monitors:
  enclosure:
    discovery:
      sources:
        source(1):
          # Source(1) = \tconnUnitTable SNMP table\nPhysicalDescription;Class;SerialNumber;
          type: snmpTable
          oid: 1.3.6.1.2.1.47.1.1.1.1
          selectColumns: "2,5,11"
          computes:
            # Keep only units of type 4 (switch)
            # PhysicalDescription;Class;SerialNumber;
          - type: keepOnlyMatchingLines
            column: 2
            valueList: 3
      mapping:
        # InstanceTable = Source(1)
        source: "${source::monitors.enclosure.discovery.sources.source(1)}"
        attributes:
          id: CiscoSwitch
          vendor: Cisco
          model: $1
          serial_number: $3
          type: Switch
          name: "${awk::sprintf(\"Switch: (%s %s)\", \"Cisco\", $1)}"
  temperature:
    discovery:
      sources:
        source(1):
          # Source(1) = CiscoEnvMonState SNMP Table
          # Description;State;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.13.1.3.1
          selectColumns: "2,6"
          computes:
            # Keep only temperature sensors
            # Description;State;
          - type: excludeMatchingLines
            column: 2
            valueList: 5
      mapping:
        # InstanceTable = Source(1)
        source: "${source::monitors.temperature.discovery.sources.source(1)}"
        attributes:
          id: $1
          __display_id: $1
          hw.parent.type: enclosure
          name: $1
    collect:
      # Collect type = multi-instance
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          # Source(1) = CiscoEnvMonState SNMP Table
          # Description;Value;State;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.13.1.3.1
          selectColumns: "2,3,6"
          computes:
            # Duplicate the State
            # Description;Value;State;State;
          - type: duplicateColumn
            column: 3
            # Translate the first state status into a PATROLStatus
            # Description;Value;PATROLStatus;State;
          - type: translate
            column: 3
            translationTable: "${translation::SensorStatusTranslationTable}"
            # Translate the second state status into a StatusInformation
            # Description;Value;PATROLStatus;StatusInformation;
          - type: translate
            column: 4
            translationTable: "${translation::SensorStatusInformationTranslationTable}"
      mapping:
        # ValueTable = Source(1)
        source: "${source::monitors.temperature.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.status{hw.type="temperature"}: $3
          hw.temperature: $2
        legacyTextParameters:
          StatusInformation: $4
  voltage:
    discovery:
      sources:
        source(1):
          # Source(1) = CiscoEnvMonState SNMP Table
          # Description;State;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.13.1.2.1
          selectColumns: "2,7"
          computes:
            # Keep only Voltage sensors
            # Description;State;
          - type: excludeMatchingLines
            column: 2
            valueList: 5
            # Remove in mV
            # Description;State;
          - type: replace
            column: 1
            existingValue: ' in mV'
            newValue: ""
      mapping:
        # InstanceTable = Source(1)
        source: "${source::monitors.voltage.discovery.sources.source(1)}"
        attributes:
          id: $1
          __display_id: $1
          hw.parent.type: enclosure
          name: $1
    collect:
      # Collect type = multi-instance
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          # Source(1) = CiscoEnvMonState SNMP Table
          # Description;Value;State;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.13.1.2.1
          selectColumns: "2,3,7"
          computes:
            # Duplicate the State
            # Description;Value;State;State;
          - type: duplicateColumn
            column: 3
            # Translate the first state status into a PATROLStatus
            # Description;Value;PATROLStatus;State;
          - type: translate
            column: 3
            translationTable: "${translation::SensorStatusTranslationTable}"
            # Translate the second state status into a StatusInformation
            # Description;Value;PATROLStatus;StatusInformation;
          - type: translate
            column: 4
            translationTable: "${translation::SensorStatusInformationTranslationTable}"
            # Remove in mV
            # Description;Value;PATROLStatus;StatusInformation;
          - type: replace
            column: 1
            existingValue: ' in mV'
            newValue: ""
      mapping:
        # ValueTable = Source(1)
        source: "${source::monitors.voltage.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.status{hw.type="voltage"}: $3
          hw.voltage: $2
        legacyTextParameters:
          StatusInformation: $4
  fan:
    discovery:
      sources:
        source(1):
          # Source(1) = CiscoEnvMonState SNMP Table
          # Description;State;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.13.1.4.1
          selectColumns: "2,3"
          computes:
            # Keep only Fan sensors
            # Description;State;
          - type: excludeMatchingLines
            column: 2
            valueList: 5
      mapping:
        # InstanceTable = Source(1)
        source: "${source::monitors.fan.discovery.sources.source(1)}"
        attributes:
          id: $1
          __display_id: $1
          hw.parent.type: enclosure
          name: $1
    collect:
      # Collect type = multi-instance
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          # Source(1) = CiscoEnvMonState SNMP Table
          # Description;State;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.13.1.4.1
          selectColumns: "2,3"
          computes:
            # Duplicate the State
            # Description;State;State;
          - type: duplicateColumn
            column: 2
            # Translate the first state status into a PATROLStatus
            # Description;PATROLStatus;State;
          - type: translate
            column: 2
            translationTable: "${translation::SensorStatusTranslationTable}"
            # Translate the second state status into a StatusInformation
            # Description;Value;PATROLStatus;StatusInformation;
          - type: translate
            column: 3
            translationTable: "${translation::SensorStatusInformationTranslationTable}"
      mapping:
        # ValueTable = Source(1)
        source: "${source::monitors.fan.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.status{hw.type="fan"}: $2
        legacyTextParameters:
          StatusInformation: $3
  power_supply:
    discovery:
      sources:
        source(1):
          # Source(1) = CiscoEnvMonState SNMP Table
          # Description;State;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.13.1.5.1
          selectColumns: "2,3"
          computes:
            # Keep only PowerSupply sensors
            # Description;State;
          - type: excludeMatchingLines
            column: 2
            valueList: 5
      mapping:
        # InstanceTable = Source(1)
        source: "${source::monitors.power_supply.discovery.sources.source(1)}"
        attributes:
          id: $1
          __display_id: $1
          hw.parent.type: enclosure
          name: $1
    collect:
      # Collect type = multi-instance
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          # Source(1) = CiscoEnvMonState SNMP Table
          # Description;State;
          type: snmpTable
          oid: 1.3.6.1.4.1.9.9.13.1.5.1
          selectColumns: "2,3"
          computes:
            # Duplicate the State
            # Description;State;State;
          - type: duplicateColumn
            column: 2
            # Translate the first state status into a PATROLStatus
            # Description;PATROLStatus;State;
          - type: translate
            column: 2
            translationTable: "${translation::SensorStatusTranslationTable}"
            # Translate the second state status into a StatusInformation
            # Description;Value;PATROLStatus;StatusInformation;
          - type: translate
            column: 3
            translationTable: "${translation::SensorStatusInformationTranslationTable}"
      mapping:
        # ValueTable = Source(1)
        source: "${source::monitors.power_supply.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.status{hw.type="power_supply"}: $2
        legacyTextParameters:
          StatusInformation: $3
  network:
    discovery:
      mapping:
        # add network card discovery present in mib2.hdf and not in mib2.hhdf
        # PortID;Description;TypeCode;MacAddress;AdminStatus;ID;Name;Alias;
        source: "${source::monitors.network.discovery.sources.source(3)}"
        attributes:
          id: $1
          __display_id: $7
          physical_address: $4
          physical_address_type: MAC
          device_type: $3
          hw.parent.type: enclosure
          name: "${awk::sprintf(\"%s (%s)\", $7, $3)}"
translations:
  SensorStatusTranslationTable:
    "1": ok
    "2": degraded
    "3": failed
    "4": failed
    "5": failed
    "6": failed
    Default: UNKNOWN
  SensorStatusInformationTranslationTable:
    "1": ""
    "2": Warning
    "3": Critical
    "4": Shutdown
    "5": No Longer Present
    "6": Not Functioning
    Default: Unknown Status
