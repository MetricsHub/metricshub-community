---
connector:
  displayName: "KVM, QEMU, Xen and Hypervisors (virsh)"
  platforms: "KVM, QEMU, Xen, Hypervisors"
  reliesOn: libvirt API
  version: 1.0
  information: This connector provides VM monitoring through the virsh command. The host requires the libvirt API installed.
  detection:
    connectionTypes:
    - remote
    appliesTo:
    - Linux
    criteria:
    - type: productRequirements
      kmVersion: 11.3.00
    - type: osCommand
      commandLine: virsh list
      expectedResult: Name
monitors:
  vm:
    discovery:
      sources:
        source(1):
          type: osCommand
          commandLine: "virsh list | awk '{print $1}' | grep -oIE \"[0-9]*\" | while read word; do virsh dominfo ${word} ; done"
          computes:
          - type: awk
            script: EmbeddedFile(1)
      mapping:
        source: $monitors.vm.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          __display_id: $column(1)
          vm.host.name: $column(1)
          info: $column(4)
          hw.parent.type: enclosure
          name: "sprintf(\"%s (%s)\", $column(1), $column(1))"
    collect:
      type: multiInstance
      sources:
        source(1):
          type: osCommand
          commandLine: "virsh list | awk '{print $1}' | grep -oIE \"[0-9]*\" | while read word; do virsh dominfo ${word} ; done"
          computes:
          - type: awk
            script: EmbeddedFile(1)
          - type: translate
            column: 2
            translationTable: stateTranslationTable
      mapping:
        source: $monitors.vm.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.vm.power_state: $column(2)
          hw.vm.power_ratio: computePowerShareRatio($column(3))
embedded:
  EmbeddedFile(1): |
    BEGIN { FS = ": "; vmName = ""; UUID = ""; powerState = ""; powerShare = ""}

    /Name/ {vmName = $2; gsub(/ /,"",vmName)}
    /UUID/ {uuid = $2; gsub(/ /,"",uuid)}
    /State/ {powerState = $2; gsub(/ /,"",powerState)}
    /CPU\(s\)/ {
      powerShare = $2; gsub(/ /,"",powerShare);
      print vmName ";" powerState ";" powerShare ";UUID: " uuid;
      vmName = ""; powerState = ""; powerShare = ""; uuid = "";
    }
translations:
  stateTranslationTable:
    running: "ON"
    paused: SUSPENDED
    default: "OFF"
    suspended: "OFF"
