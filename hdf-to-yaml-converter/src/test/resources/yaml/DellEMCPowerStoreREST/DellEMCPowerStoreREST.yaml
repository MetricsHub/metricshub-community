---
connector:
  displayName: Dell EMC PowerStore (REST)
  platforms: PowerStore REST
  version: 1.0
  information: "This connector provides hardware monitoring through the PowerStore Management REST API. It monitors the Enclosure and Physical Disks as well as the various environment sensors (fans, power supplies, memory, batteries and network cards)."
  detection:
    connectionTypes:
    - remote
    appliesTo:
    - Storage
    criteria:
    # Hardware Sentry v10.2.00+
    - type: productRequirements
      kmVersion: 10.2.00
    - type: http
      url: /api/rest/appliance?select=*
      expectedResult: powerstore
monitors:
  enclosure:
    discovery:
      sources:
        source(1):
          # Discovery
          type: http
          method: GET
          url: /api/rest/hardware?select=*&limit=2000
          header: "${file::embeddedFile-1}"
        source(2):
          type: copy
          from: "${source::monitors.enclosure.discovery.sources.source(1)}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/type;/appliance_id;/model;/serial_number;
          - type: keepOnlyMatchingLines
            column: 3
            valueList: Base_Enclosure
        source(3):
          type: http
          method: GET
          url: /api/rest/appliance?select=*&limit=2000
          header: "${file::embeddedFile-1}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/type;/name;/model;/service_tag;
        source(4):
          # Join information from Base_Enclosure and Appliance
          # Left Table: JSONID;ID;Type;name;model;service_tag;
          # Right Table: JSONID;id;type;appliance_id;model;serial_number;
          # Result: JSONID;ID;Type;name;model;service_tag;JSONID;id;type;appliance_id;model;serial_number;
          type: tableJoin
          leftTable: "${source::monitors.enclosure.discovery.sources.source(3)}"
          rightTable: "${source::monitors.enclosure.discovery.sources.source(2)}"
          leftKeyColumn: 2
          rightKeyColumn: 4
        source(5):
          # Discovery
          type: http
          method: GET
          url: "/api/rest/hardware?select=id,type,appliance_id,serial_number,name&amp;type=eq.Node&limit=2000"
          header: "${file::embeddedFile-1}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/type;/appliance_id;/serial_number;/name;
      mapping:
        # Enclosure Instance Table
        source: "${source::monitors.enclosure.discovery.sources.source(4)}"
        attributes:
          id: $2
          __display_id: $4
          model: $5
          serial_number: $6
          type: Storage
          vendor: Dell EMC
          name: "${awk::sprintf(\"Storage: %s (%s %s)\", $4, \"Dell EMC\", $5)}"
    collect:
      # Collect
      type: multiInstance
      sources:
        source(1):
          type: http
          method: GET
          url: /api/rest/hardware?select=*&limit=2000
          header: "${file::embeddedFile-1}"
        source(2):
          type: copy
          from: "${source::monitors.enclosure.collect.sources.source(1)}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/type;/lifecycle_state;/lifecycle_state;/appliance_id;
          - type: translate
            column: 4
            translationTable: "${translation::StatusTranslationTable}"
          - type: translate
            column: 5
            translationTable: "${translation::StatusInformationTranslationTable}"
        source(3):
          type: copy
          from: "${source::monitors.enclosure.collect.sources.source(2)}"
          computes:
          - type: keepOnlyMatchingLines
            column: 3
            valueList: Base_Enclosure
          - type: replace
            column: 2
            existingValue: $2
            newValue: $6
      mapping:
        # Enclosure Value Table
        source: "${source::monitors.enclosure.collect.sources.source(3)}"
        deviceId: $2
        metrics:
          hw.status{hw.type="enclosure"}: $4
        legacyTextParameters:
          StatusInformation: $5
  disk_controller:
    discovery:
      mapping:
        source: "${source::monitors.enclosure.discovery.sources.source(5)}"
        attributes:
          id: $2
          serial_number: $5
          __display_id: $6
          hw.parent.type: enclosure
          hw.parent.id: $4
          name: "${awk::sprintf(\"Disk Controller: %s\", $6)}"
  memory:
    discovery:
      sources:
        source(1):
          # Discovery
          type: copy
          from: "${source::monitors.enclosure.discovery.sources.source(1)}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/type;/parent_id;/serial_number;/name;
          - type: keepOnlyMatchingLines
            column: 3
            valueList: DIMM
        source(2):
          # Join tables to remove controller name from display name.
          # Left Table: JSON_ID;ID;Type;Parent_ID;serial_number;name;
          # Right Table: JSON_ID;id;type;appliance_id;serial_number;name;
          type: tableJoin
          leftTable: "${source::monitors.memory.discovery.sources.source(1)}"
          rightTable: "${source::monitors.enclosure.discovery.sources.source(5)}"
          leftKeyColumn: 4
          rightKeyColumn: 2
          computes:
          - type: rightConcat
            column: 12
            value: '-'
          - type: replace
            column: 6
            existingValue: $12
            newValue: ""
      mapping:
        # Memory Instance Table
        source: "${source::monitors.memory.discovery.sources.source(2)}"
        attributes:
          id: $2
          __display_id: $6
          serial_number: $5
          hw.parent.type: disk_controller
          hw.parent.id: $4
          name: $6
    collect:
      # Collect
      type: multiInstance
      mapping:
        # Memory Value Table
        # JSON;id;type;lifecycle_state;lifecycle_state;appliance_id;
        source: "${source::monitors.enclosure.collect.sources.source(2)}"
        deviceId: $2
        metrics:
          hw.status{hw.type="memory"}: $4
        legacyTextParameters:
          StatusInformation: $5
  fan:
    discovery:
      sources:
        source(1):
          # Discovery
          type: copy
          from: "${source::monitors.enclosure.discovery.sources.source(1)}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/type;/parent_id;/name;
          - type: keepOnlyMatchingLines
            column: 3
            valueList: fan
        source(2):
          # Join tables to remove controller name from display name.
          # Left Table: JSON_ID;ID;Type;Parent_ID;serial_number;name;
          # Right Table: JSON_ID;id;type;appliance_id;serial_number;name;
          type: tableJoin
          leftTable: "${source::monitors.fan.discovery.sources.source(1)}"
          rightTable: "${source::monitors.enclosure.discovery.sources.source(5)}"
          leftKeyColumn: 4
          rightKeyColumn: 2
          computes:
          - type: rightConcat
            column: 11
            value: '-'
          - type: replace
            column: 5
            existingValue: $11
            newValue: ""
      mapping:
        # Fan Instance Table
        source: "${source::monitors.fan.discovery.sources.source(2)}"
        attributes:
          id: $2
          __display_id: $5
          hw.parent.type: disk_controller
          hw.parent.id: $4
          name: $5
    collect:
      # Collect
      type: multiInstance
      mapping:
        # Fan Value Table
        # JSON;id;type;lifecycle_state;lifecycle_state;appliance_id;
        source: "${source::monitors.enclosure.collect.sources.source(2)}"
        deviceId: $2
        metrics:
          hw.status{hw.type="fan"}: $4
        legacyTextParameters:
          StatusInformation: $5
  physical_disk:
    discovery:
      sources:
        source(1):
          type: copy
          from: "${source::monitors.enclosure.discovery.sources.source(1)}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/type;/parent_id;/serial_number;/name;/extra_details/model_name;/extra_details/drive_type;/extra_details/firmware_version;/extra_details/size;
          - type: keepOnlyMatchingLines
            column: 3
            valueList: "M2_Drive,Drive"
          - type: leftConcat
            column: 2
            value: DiskController;
        source(2):
          # Join tables to remove controller name from display name.
          # Left Table: JSON_ID;ID;Type;Parent_ID;serial_number;name;
          # Right Table: JSON_ID;id;type;appliance_id;serial_number;name;
          type: tableJoin
          leftTable: "${source::monitors.physical_disk.discovery.sources.source(1)}"
          rightTable: "${source::monitors.enclosure.discovery.sources.source(5)}"
          leftKeyColumn: 5
          rightKeyColumn: 2
          computes:
          - type: rightConcat
            column: 17
            value: '-'
          - type: replace
            column: 7
            existingValue: $17
            newValue: ""
        source(3):
          type: http
          method: GET
          executeForEachEntryOf:
            source: "${source::monitors.enclosure.discovery.sources.source(2)}"
            concatMethod: json_array_extended
          url: "/api/rest/hardware?select=id,type,appliance_id,serial_number,name,extra_details&amp;parent_id=eq.$2&limit=2000"
          header: "${file::embeddedFile-1}"
          resultContent: body
          computes:
          - type: json2csv
            entryKey: /Entry/Value
            properties: /id;/type;/appliance_id;/serial_number;/name;/extra_details/model_name;/extra_details/drive_type;/extra_details/firmware_version;/extra_details/size;
          - type: keepOnlyMatchingLines
            column: 3
            valueList: "M2_Drive,Drive"
          - type: leftConcat
            column: 2
            value: Enclosure;
        source(4):
          # Table Union
          # Join disks from DiskController as well as those attached to enclosure.
          type: tableUnion
          tables:
          - "${source::monitors.physical_disk.discovery.sources.source(2)}"
          - "${source::monitors.physical_disk.discovery.sources.source(3)}"
      mapping:
        # PhysicalDisk Instance Table
        source: "${source::monitors.physical_disk.discovery.sources.source(4)}"
        attributes:
          id: $3
          serial_number: $6
          __display_id: $7
          model: $8
          hw.parent.type: $2
          hw.parent.id: $5
          name: "${awk::sprintf(\"%s (%s)\", $7, bytes2HumanFormatBase10($11))}"
        metrics:
          hw.physical_disk.size: $11
    collect:
      # Collect
      type: multiInstance
      mapping:
        # PhysicalDisk Value Table
        # JSON;id;type;lifecycle_state;lifecycle_state;appliance_id;
        source: "${source::monitors.enclosure.collect.sources.source(2)}"
        deviceId: $2
        metrics:
          hw.status{hw.type="physical_disk"}: $4
        legacyTextParameters:
          StatusInformation: $5
  power_supply:
    discovery:
      sources:
        source(1):
          # Discovery
          type: copy
          from: "${source::monitors.enclosure.discovery.sources.source(1)}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/type;/parent_id;/serial_number;/name;
          - type: keepOnlyMatchingLines
            column: 3
            valueList: Power_Supply
        source(2):
          # Join tables to remove controller name from display name.
          # Left Table: JSON_ID;ID;Type;Parent_ID;serial_number;name;
          # Right Table: JSON_ID;id;type;appliance_id;serial_number;name;
          type: tableJoin
          leftTable: "${source::monitors.power_supply.discovery.sources.source(1)}"
          rightTable: "${source::monitors.enclosure.discovery.sources.source(5)}"
          leftKeyColumn: 4
          rightKeyColumn: 2
          computes:
          - type: rightConcat
            column: 12
            value: '-'
          - type: replace
            column: 6
            existingValue: $12
            newValue: ""
          - type: leftConcat
            column: 5
            value: "SerialNumber: "
      mapping:
        # PowerSupply Instance Table
        source: "${source::monitors.power_supply.discovery.sources.source(2)}"
        attributes:
          id: $2
          __display_id: $6
          info: $5
          hw.parent.type: disk_controller
          hw.parent.id: $4
          name: $6
    collect:
      # Collect
      type: multiInstance
      mapping:
        # PowerSupply Value Table
        # JSON;id;type;lifecycle_state;lifecycle_state;appliance_id;
        source: "${source::monitors.enclosure.collect.sources.source(2)}"
        deviceId: $2
        metrics:
          hw.status{hw.type="power_supply"}: $4
        legacyTextParameters:
          StatusInformation: $5
  battery:
    discovery:
      sources:
        source(1):
          type: copy
          from: "${source::monitors.enclosure.discovery.sources.source(1)}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/type;/parent_id;/serial_number;/name;
          - type: keepOnlyMatchingLines
            column: 3
            valueList: battery
        source(2):
          # Join tables to remove controller name from display name.
          # Left Table: JSON_ID;ID;Type;Parent_ID;serial_number;name;
          # Right Table: JSON_ID;id;type;appliance_id;serial_number;name;
          type: tableJoin
          leftTable: "${source::monitors.battery.discovery.sources.source(1)}"
          rightTable: "${source::monitors.enclosure.discovery.sources.source(5)}"
          leftKeyColumn: 4
          rightKeyColumn: 2
          computes:
          - type: rightConcat
            column: 12
            value: '-'
          - type: replace
            column: 6
            existingValue: $12
            newValue: ""
      mapping:
        # Battery Instance Table
        source: "${source::monitors.battery.discovery.sources.source(2)}"
        attributes:
          id: $2
          __display_id: $6
          hw.parent.type: disk_controller
          hw.parent.id: $4
          name: $6
    collect:
      # Collect
      type: multiInstance
      mapping:
        # Battery Value Table
        # JSON;id;type;lifecycle_state;lifecycle_state;appliance_id;
        source: "${source::monitors.enclosure.collect.sources.source(2)}"
        deviceId: $2
        metrics:
          hw.status{hw.type="battery"}: $4
        legacyTextParameters:
          StatusInformation: $5
  network:
    discovery:
      sources:
        source(1):
          # Get SASPorts
          type: http
          method: GET
          url: "/api/rest/sas_port?select=id,node_id,name,sfp_id,is_link_up&limit=2000"
          header: "${file::embeddedFile-1}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/node_id;/name;/null;/is_link_up;
          - type: rightConcat
            column: 6
            value: ;SAS
        source(2):
          # Get EthernetPorts
          type: http
          method: GET
          url: "/api/rest/eth_port?select=id,node_id,name,mac_address,is_link_up&limit=2000"
          header: "${file::embeddedFile-1}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/node_id;/name;/mac_address;/is_link_up;
          - type: rightConcat
            column: 6
            value: ;Ethernet
        source(3):
          # Get FCPorts
          type: http
          method: GET
          url: "/api/rest/fc_port?select=id,node_id,name,wwn,is_link_up&limit=2000"
          header: "${file::embeddedFile-1}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/node_id;/name;/wwn;/is_link_up;
          - type: rightConcat
            column: 6
            value: ;FC
        source(4):
          type: tableUnion
          tables:
          - "${source::monitors.network.discovery.sources.source(1)}"
          - "${source::monitors.network.discovery.sources.source(2)}"
          - "${source::monitors.network.discovery.sources.source(3)}"
          computes:
          # Disable speed for link_down ports
          - type: replace
            column: 6
            existingValue: "FALSE"
            newValue: ""
        source(5):
          # Join tables to remove controller name from display name.
          # Left Table: JSON_ID;ID;node_id;name;wwn;link
          # Right Table: JSON_ID;id;type;appliance_id;serial_number;name;
          type: tableJoin
          leftTable: "${source::monitors.network.discovery.sources.source(4)}"
          rightTable: "${source::monitors.enclosure.discovery.sources.source(5)}"
          leftKeyColumn: 3
          rightKeyColumn: 2
          computes:
          - type: rightConcat
            column: 13
            value: '-'
          - type: replace
            column: 4
            existingValue: $13
            newValue: ""
      mapping:
        # NetworkCard Instance Table
        source: "${source::monitors.network.discovery.sources.source(5)}"
        attributes:
          id: $2
          __display_id: $4
          logical_address: $5
          device_type: $7
          hw.parent.type: disk_controller
          hw.parent.id: $9
          name: "${awk::sprintf(\"%s (%s)\", $4, $7)}"
    collect:
      # Collect
      type: multiInstance
      sources:
        source(1):
          # Get SASPorts
          type: http
          method: GET
          url: "/api/rest/sas_port?select=id,is_link_up,speed&limit=2000"
          header: "${file::embeddedFile-1}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/is_link_up;/is_link_up;/is_link_up;/speed
        source(2):
          # Get EthernetPorts
          type: http
          method: GET
          url: "/api/rest/eth_port?select=id,is_link_up,current_speed&limit=2000"
          header: "${file::embeddedFile-1}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/is_link_up;/is_link_up;/is_link_up;/current_speed
        source(3):
          # Get FCPorts
          type: http
          method: GET
          url: "/api/rest/fc_port?select=id,is_link_up,current_speed&limit=2000"
          header: "${file::embeddedFile-1}"
          computes:
          - type: json2csv
            entryKey: /
            properties: /id;/is_link_up;/is_link_up;/is_link_up;/current_speed
        source(4):
          type: tableUnion
          tables:
          - "${source::monitors.network.collect.sources.source(1)}"
          - "${source::monitors.network.collect.sources.source(2)}"
          - "${source::monitors.network.collect.sources.source(3)}"
          computes:
          - type: translate
            column: 3
            translationTable: "${translation::NetworkStatusTranslationTable}"
          - type: translate
            column: 4
            translationTable: "${translation::NetworkStatusInformationTranslationTable}"
          - type: translate
            column: 5
            translationTable: "${translation::NetworkLinkStatusTranslationTable}"
          - type: translate
            column: 6
            translationTable: "${translation::LinkSpeedTranslationTable}"
      mapping:
        # NetworkCard Value Table
        # JSON;id;type;lifecycle_state;lifecycle_state;appliance_id;
        source: "${source::monitors.network.collect.sources.source(4)}"
        deviceId: $2
        metrics:
          hw.status{hw.type="network"}: $3
          hw.network.up: legacyLinkStatus($5)
          hw.network.bandwidth.limit: megaBit2Bit($6)
        legacyTextParameters:
          StatusInformation: $4
translations:
  NetworkStatusInformationTranslationTable:
    default: Unknown status
    "TRUE": Link is up
    "FALSE": Link is down
  LinkSpeedTranslationTable:
    "10_Mbps": 10
    "6_Gbps": 6000
    "10_Gbps": 10000
    "40_Gbps": 40000
    "3_Gbps": 3000
    "100_Mbps": 100
    "16_Gbps": 16000
    "8_Gbps": 8000
    "4_Gbps": 4000
    "32_Gbps": 32000
    default: ""
    "null": ""
    "1_Gbps": 1000
    "12_Gbps": 12000
    "25_Gbps": 25000
  StatusInformationTranslationTable:
    Empty: ok
    Failed: failed
    Trigger_Update: ok
    Uninitialized: System is starting up.
    Healthy: Hardware is healthy.
    Disconnected: degraded
    Prepare_Failed: ok
    Initializing: System is starting up.
  NetworkLinkStatusTranslationTable:
    "TRUE": ok
    "FALSE": degraded
  StatusTranslationTable:
    Empty: ok
    Failed: failed
    Trigger_Update: ok
    Uninitialized: ok
    Healthy: ok
    Disconnected: degraded
    Prepare_Failed: ok
    Initializing: ok
  NetworkStatusTranslationTable:
    default: degraded
    "TRUE": ok
    "FALSE": ok
