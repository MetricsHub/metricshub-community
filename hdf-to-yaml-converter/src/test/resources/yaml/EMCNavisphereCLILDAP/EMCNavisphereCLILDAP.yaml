---
extends:
- ../EMCNavisphereCLI-header/EMCNavisphereCLI-header
connector:
  displayName: EMC Navisphere CLI (LDAP User)
  platforms: "EMC CLARiiON,EMC VNX"
  reliesOn: EMC naviseccli utility
  information: "This connector provides hardware monitoring through EMC Navisphere CLI (naviseccli). The naviseccli must be installed on the system where the agent is running. This connector uses naviseccli to connect to the EMC VNX controller as an \"LDAP User\", i.e. with \"Scope 2\"."
  detection:
    connectionTypes:
    - local
    - remote
    appliesTo:
    - Storage
    supersedes:
    - EMCuemcli
    criteria:
    # naviseccli Should Exist
    - type: osCommand
      commandLine: naviseccli -help
      errorMessage: naviseccli Does not appear to be installed on this system
      expectedResult: Navisphere
      executeLocally: true
    # naviseccli Should be able to connect and list systems
    - type: osCommand
      commandLine: "naviseccli -User %{USERNAME} -Password %{PASSWORD} -Address %{HOSTNAME} -Scope 2 getagent"
      errorMessage: Unable to connect using Navisphere
      expectedResult: 'Agent Rev:'
      executeLocally: true
monitors:
  enclosure:
    discovery:
      sources:
        source(1):
          type: osCommand
          commandLine: "naviseccli -User %{USERNAME} -Password %{PASSWORD} -Address %{HOSTNAME} -Scope 2 getall"
          executeLocally: true
          timeout: 600
        source(2):
          type: osCommand
          commandLine: "naviseccli -User %{USERNAME} -Password %{PASSWORD} -Address %{HOSTNAME} -Scope 2 storagepool -list"
          executeLocally: true
          timeout: 600
        source(3):
          type: tableUnion
          tables:
          - $monitors.enclosure.discovery.sources.source(1)$
          - $monitors.enclosure.discovery.sources.source(2)$
          - $monitors.enclosure.collect.sources.source(5)$
    collect:
      sources:
        source(1):
          type: osCommand
          commandLine: "naviseccli -User %{USERNAME} -Password %{PASSWORD} -Address %{HOSTNAME} -Scope 2 getall"
          executeLocally: true
          timeout: 600
        source(2):
          type: osCommand
          commandLine: "naviseccli -User %{USERNAME} -Password %{PASSWORD} -Address %{HOSTNAME} -Scope 2 storagepool -list"
          executeLocally: true
          timeout: 600
        source(3):
          type: tableUnion
          tables:
          - $monitors.enclosure.collect.sources.source(1)$
          - $monitors.enclosure.collect.sources.source(2)$
