---
connector:
  displayName: HP Insight Management Agent - Server (Alpha)
  platforms: HP ProLiant
  reliesOn: HP Insight Management Agents
  version: 1.0
  information: This connector adds Alpha-specific hardware monitoring through the HP Insight Manager (Server Agent).
  detection:
    connectionTypes:
    - remote
    - local
    appliesTo:
    - OSF1
    - VMS
    criteria:
    - type: deviceType
      keep:
      - OSF1
      - VMS
      - OOB
    - type: snmpGetNext
      oid: 1.3.6.1.4.1.232
monitors:
  fan:
    discovery:
      sources:
        source(1):
          # Source(1) = cpqHeThermalFanTable
          # ID;Present;LocationCode
          type: snmpTable
          oid: 1.3.6.1.4.1.232.6.2.6.6.1
          selectColumns: "ID,3,4"
          computes:
            # Keep only fans that are actually present
            # ID;Present;LocationCode
          - type: excludeMatchingLines
            column: 2
            valueList: 2
            # Translate the location code into a location string
            # ID;Present;Location
          - type: translate
            column: 3
            translationTable: "${translation::FanTypeTranslationTable}"
      mapping:
        # Instance table = source(1)
        source: "${source::monitors.fan.discovery.sources.source(1)}"
        attributes:
          id: $1
          sensor_location: $3
          hw.parent.type: enclosure
          name: "${awk::sprintf(\"%s (%s)\", $1, $3)}"
    collect:
      # Fan collect type is : mono-instance
      type: monoInstance
      sources:
        source(1):
          # Collect the status of the fan
          # fanStatus
          type: snmpGet
          oid: "1.3.6.1.4.1.232.6.2.6.6.1.5.${fan::id}"
          computes:
            # Duplicate the fanStatus column
            # fanStatus;fanStatus
          - type: duplicateColumn
            column: 1
            # Translate the first fanStatus into a PATROL status
            # PATROLStatus;fanStatus
          - type: translate
            column: 1
            translationTable: "${translation::FanStatusTranslationTable}"
            # Translate the second fanStatus into a more readable string
            # PATROLStatus;statusInformation
          - type: translate
            column: 2
            translationTable: "${translation::FanStatusInformationTranslationTable}"
      mapping:
        # Collect table = source(1)
        source: "${source::monitors.fan.collect.sources.source(1)}"
        metrics:
          hw.status{hw.type="fan"}: $1
        legacyTextParameters:
          StatusInformation: $2
  power_supply:
    discovery:
      sources:
        source(1):
          # Source(1) = Overall power supply information
          # ID;Status;
          type: snmpTable
          oid: 1.3.6.1.4.1.232.6.2.9
          selectColumns: "ID,1"
          computes:
            # Keep only the line where the Status value is actually something
            # ID;Status;
          - type: keepOnlyMatchingLines
            column: 2
            valueList: "2,3,4"
      mapping:
        # InstanceTable = source(1)
        source: "${source::monitors.power_supply.discovery.sources.source(1)}"
        attributes:
          id: $1
          hw.parent.type: enclosure
          name: $1
    collect:
      # Power Supply collect (mono-instance)
      type: monoInstance
      sources:
        source(1):
          # Source(1) = snmpget of the global power supply condition
          # Condition
          type: snmpGet
          oid: "1.3.6.1.4.1.232.6.2.9.1.${power_supply::id}"
          computes:
            # Duplicate the condition column
            # Condition;Condition
          - type: duplicateColumn
            column: 1
            # Translate the first Condition column into a PATROL status
            # PATROLStatus;Condition
          - type: translate
            column: 1
            translationTable: "${translation::PowerSupplyStatusTranslationTable}"
            # Translate the second Condition column into a more readable string
            # PATROLStatus;statusInformation
          - type: translate
            column: 2
            translationTable: "${translation::PowerSupplyStatusInformationTranslationTable}"
      mapping:
        # ValueTable = source(1)
        source: "${source::monitors.power_supply.collect.sources.source(1)}"
        metrics:
          hw.status{hw.type="power_supply"}: $1
        legacyTextParameters:
          StatusInformation: $2
translations:
  FanStatusTranslationTable:
    "2": ok
    "4": failed
    Default: UNKNOWN
  PowerSupplyStatusTranslationTable:
    "2": ok
    "3": degraded
    "4": failed
    Default: UNKNOWN
  FanStatusInformationTranslationTable:
    "2": ok
    "4": Failed
    Default: Unknown Status
  FanTypeTranslationTable:
    "2": System
    default: ""
    "3": CPU
  PowerSupplyStatusInformationTranslationTable:
    "2": ""
    "3": Degraded
    "4": Failed
    Default: Unknown Status
