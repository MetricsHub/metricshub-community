---
connector:
  displayName: LsiLogic MegaRAID PowerConsole
  platforms: Fujitsu-Siemens PRIMERGY
  reliesOn: LSI MegaRAID PowerConsole
  version: 1.0
  information: This connector provides disk monitoring through the LsiLogic MegaRAID PowerConsole SNMP sub-agent which supports all MegaRAID-based RAID controllers.
  detection:
    connectionTypes:
    - remote
    - local
    appliesTo:
    - NT
    - Linux
    criteria:
    # Simply check that the megaRaid MIB is populated
    - type: snmpGetNext
      oid: 1.3.6.1.4.1.3582.1.1.1.1
monitors:
  disk_controller:
    discovery:
      sources:
        source(1):
          # HP NetRAID controllers table
          type: snmpTable
          oid: 1.3.6.1.4.1.3582.1.1.1.1
          selectColumns: "ID,1,3,4,23"
        source(2):
          # Physical disk table
          type: snmpTable
          oid: 1.3.6.1.4.1.3582.1.1.3.1
          selectColumns: 1
        source(3):
          # We joint the controllers and the physical disk table
          # in order to keep only controllers for which there is disks attached
          type: tableJoin
          leftTable: "${source::monitors.disk_controller.discovery.sources.source(1)}"
          rightTable: "${source::monitors.disk_controller.discovery.sources.source(2)}"
          leftKeyColumn: 2
          rightKeyColumn: 1
      mapping:
        # The Instance table...
        source: "${source::monitors.disk_controller.discovery.sources.source(1)}"
        attributes:
          id: $1
          controller_number: $2
          vendor: ""
          model: $5
          firmware_version: $3
          bios_version: $4
          hw.parent.type: enclosure
          name: "${awk::sprintf(\"Disk Controller: %s (%s %s)\", $2, \"\", $5)}"
  physical_disk:
    discovery:
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.3582.1.1.3.1
          selectColumns: "ID,1,4,6,7,8"
          computes:
          - type: excludeMatchingLines
            column: 3
            valueList: 20
          - type: keepOnlyMatchingLines
            column: 5
            valueList: 0
          - type: multiply
            column: 4
            value: 1048576
          - type: extract
            column: 6
            subSeparators: ' '
            subColumn: 1
      mapping:
        source: "${source::monitors.physical_disk.discovery.sources.source(1)}"
        attributes:
          id: $1
          vendor: $6
          hw.parent.type: disk_controller
          hw.parent.id: "lookup(\"disk_controller\", \"id\", \"controller_number\", $2)"
          name: "${awk::sprintf(\"%s (%s - %s)\", $1, $6, bytes2HumanFormatBase10($4))}"
        metrics:
          hw.physical_disk.size: $4
    collect:
      # This is a multi-instance collect (execute the collect for each disk)
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          # Source(1) = the physical disk table
          # ID;status
          type: snmpTable
          oid: 1.3.6.1.4.1.3582.1.1.3.1
          selectColumns: "ID,4"
          computes:
            # Duplicate the status column
            # ID;status;status
          - type: duplicateColumn
            column: 2
          # translate the snmp state into PATROL status
          - type: translate
            column: 2
            translationTable: "${translation::PhysicalDiskStatusTranslationTable}"
          # translate the snmp state into a more readable string
          - type: translate
            column: 3
            translationTable: "${translation::PhysicalDiskStatusInformationTranslationTable}"
      mapping:
        # ValueTable = Source(1)
        source: "${source::monitors.physical_disk.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.status{hw.type="physical_disk"}: $2
        legacyTextParameters:
          StatusInformation: $3
  logical_disk:
    discovery:
      sources:
        source(1):
          # Source(1) = the snmp logical drive table
          type: snmpTable
          oid: 1.3.6.1.4.1.3582.1.1.2.1
          selectColumns: "ID,1,4,5"
          computes:
          - type: multiply
            column: 3
            value: 1048576
      mapping:
        # The instance table
        source: "${source::monitors.logical_disk.discovery.sources.source(1)}"
        attributes:
          id: $1
          raid_level: $4
          hw.parent.type: disk_controller
          hw.parent.id: "lookup(\"disk_controller\", \"id\", \"controller_number\", $2)"
          name: "${awk::sprintf(\"%s (%s - %s)\", $1, $4, bytes2HumanFormatBase2($3))}"
        metrics:
          hw.logical_disk.limit: $3
    collect:
      # Type = MultiInstance
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          # Source(1) = the status of the drive in the logical drive snmp table
          type: snmpTable
          oid: 1.3.6.1.4.1.3582.1.1.2.1
          selectColumns: "ID,3"
          computes:
          # Duplicate the status column
          - type: duplicateColumn
            column: 2
          # translate the snmp status into PATROL status
          - type: translate
            column: 2
            translationTable: "${translation::LogicalDiskStatusTranslationTable}"
          # translate the snmp status into a more readable string
          - type: translate
            column: 3
            translationTable: "${translation::LogicalDiskStatusInformationTranslationTable}"
      mapping:
        # ValueTable = Source(1)
        source: "${source::monitors.logical_disk.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.status{hw.type="logical_disk"}: $2
        legacyTextParameters:
          StatusInformation: $3
translations:
  PhysicalDiskStatusInformationTranslationTable:
    "1": Ready
    "3": On-line
    "4": Failed
    "5": Rebuild
    "6": Hot-spare
    Default: Unknown Status
    "20": Non-disk
  LogicalDiskStatusInformationTranslationTable:
    "0": Off-line
    "1": Degraded
    "2": ""
    "3": Initializing
    "4": Check consistency
    Default: Unknown Status
  LogicalDiskStatusTranslationTable:
    "0": failed
    "1": degraded
    "2": ok
    "3": degraded
    "4": degraded
    Default: UNKNOWN
  PhysicalDiskStatusTranslationTable:
    "1": ok
    "3": ok
    "4": failed
    "5": degraded
    "6": ok
    Default: UNKNOWN
    "20": ok
