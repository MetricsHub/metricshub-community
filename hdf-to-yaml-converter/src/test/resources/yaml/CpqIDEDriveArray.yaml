---
translations:
  DiskNumberCodeTranslationTable:
    "11": SATA Device 7
    "22": Bay 2
    "23": Bay 3
    "24": Bay 4
    "25": Bay 5
    "26": Bay 6
    "27": Bay 7
    "28": Bay 8
    "2": Device 0
    default: ""
    "3": Device 1
    "4": SATA Device 0
    "5": SATA Device 1
    "6": SATA Device 2
    "7": SATA Device 3
    "8": SATA Device 4
    "9": SATA Device 5
    "10": SATA Device 6
    "21": Bay 1
  RAIDLevelTranslationTable:
    "2": 0
    default: ""
    "3": 1
    "4": 0+1
  PhysicalDiskStatusInformationTranslationTable:
    "2": ""
    default: Unknown Status
    "3": SMART predicted failure
    "4": Failed
  PhysicalDiskSMARTStatusTranslationTable:
    "1": "FALSE"
    "2": "FALSE"
    default: "FALSE"
    "3": "TRUE"
  LogicalDiskStatusInformationTranslationTable:
    "2": ""
    default: Unknown Status
    "3": Degraded
    "4": Rebuilding
    "5": Failed
  LogicalDiskStatusTranslationTable:
    "2": ok
    default: UNKNOWN
    "3": degraded
    "4": degraded
    "5": failed
  PhysicalDiskStatusTranslationTable:
    "2": ok
    default: UNKNOWN
    "3": ok
    "4": failed
connector:
  displayName: HP Insight Management Agent - IDE Storage
  platforms: HP ProLiant
  reliesOn: HP Insight Management Agents
  version: 1.0
  information: This connector monitors the HP/Compaq IDE Drive Arrays by connecting to the Storage Management SNMP sub-agent of the HP Insight Manager agent.
  detection:
    connectionTypes:
    - remote
    appliesTo:
    - NT
    - Linux
    - OSF1
    - VMS
    - OOB
    - Solaris
    supersedes:
    - WBEMGenDiskNT
    - SmartMonLinux
    - SunRaidctl
    - SunIostat
    - SunIostatNonSun
    - SunTapeDrives
    criteria:
    - type: snmpGetNext
      oid: 1.3.6.1.4.1.232.14.2.4.1.1
monitors:
  disk_controller:
    discovery:
      sources:
        source(1):
          # Source(1) = the cpqIdeControllerTable
          # ID;ControllerIndex;Model;FWRev;
          type: snmpTable
          oid: 1.3.6.1.4.1.232.14.2.3.1.1
          selectColumns: "ID,1,3,4"
        source(2):
          # Source(2) = the cpqIdeAtaDiskTable snmp table
          # ControllerNumber
          type: snmpTable
          oid: 1.3.6.1.4.1.232.14.2.4.1.1
          selectColumns: 1
        source(3):
          # Source(3) = table joint of Source(1) with Source(2)
          # In order to keep only controllers that actually have disks attached to them
          type: tableJoin
          leftTable: $monitors.disk_controller.discovery.sources.source(1)$
          rightTable: $monitors.disk_controller.discovery.sources.source(2)$
          leftKeyColumn: 2
          rightKeyColumn: 1
      mapping:
        # The InstanceTable
        source: $monitors.disk_controller.discovery.sources.source(3)$
        attributes:
          id: $column(1)
          controller_number: $column(2)
          model: $column(3)
          firmware_version: $column(4)
          hw.parent.type: enclosure
          name: "sprintf(\"%s %s (%s)\"), \"Disk Controller\", $column(1), $column(3))"
  physical_disk:
    discovery:
      sources:
        source(1):
          # Source(1) = the cpqIdeAtaDiskTable snmp table
          # ID;ControllerNumber;Model;SerialNumber;SizeMB;ChannelCode;DiskNumberCode;OSName;
          type: snmpTable
          oid: 1.3.6.1.4.1.232.14.2.4.1.1
          selectColumns: "ID,1,3,5,8,11,12,15"
          computes:
            # Convert the size into bytes
            # ID;ControllerNumber;Model;SerialNumber;SizeBytes;ChannelCode;DiskNumberCode;OSName;
          - type: multiply
            column: 5
            value: 1048576
            # Convert the DIskNumberCode into a DiskLocation string
            # ID;ControllerNumber;Model;SerialNumber;SizeBytes;ChannelName;DiskNumberCode;OSName;
          - type: translate
            column: 7
            translationTable: DiskNumberCodeTranslationTable
          - type: leftConcat
            column: 7
            value: "Location: "
      mapping:
        # The instance table = Source(1)
        source: $monitors.physical_disk.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          vendor: $column(3)
          serial_number: $column(4)
          info: $column(7)
          hw.parent.type: disk_controller
          hw.parent.id: "lookup(\"disk_controller\", \"id\", \"controller_number\", $column(2))"
          name: "sprintf(\"%s (%s)\", $column(1), $column(5))"
        metrics:
          hw.physical_disk.size: $column(5)
    collect:
      # Collect type is: multi-instance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = the cpqIdeAtaDiskTable snmp table
          # ID;status;
          type: snmpTable
          oid: 1.3.6.1.4.1.232.14.2.4.1.1
          selectColumns: "ID,6"
          computes:
            # Duplicate the status column
            # ID;status;status;
          - type: duplicateColumn
            column: 2
            # Duplicate again the status column
            # ID;status;status;status
          - type: duplicateColumn
            column: 3
            # Translate the first status column into a PATROL status
            # ID;PATROLstatus;status;status
          - type: translate
            column: 2
            translationTable: PhysicalDiskStatusTranslationTable
            # Translate the second status column into a more readable string
            # ID;PATROLstatus;statusInformation;status
          - type: translate
            column: 3
            translationTable: PhysicalDiskStatusInformationTranslationTable
            # Translate the third status into a 0 (no failure predicted) or 1 (failure is predicted)
            # ID;PATROLstatus;statusInformation;predictFailureStatus
          - type: translate
            column: 4
            translationTable: PhysicalDiskSMARTStatusTranslationTable
      mapping:
        # The ValueTable = source(1)
        source: $monitors.physical_disk.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="physical_disk"}: $column(2)
          hw.status{hw.type="physical_disk", state="predicted_failure"}: boolean($column(4))
        legacyTextParameters:
          StatusInformation: $column(3)
  logical_disk:
    discovery:
      sources:
        source(1):
          # Source(1) = the cpqIdeLogicalDriveTable snmp table
          # ID;ControllerNumber;FaultToleranceLevel;SizeMB;OSName;
          type: snmpTable
          oid: 1.3.6.1.4.1.232.14.2.6.1.1
          selectColumns: "ID,1,3,4,11"
          computes:
            # Translate size into bytes
            # ID;ControllerNumber;FaultToleranceLevel;Size;OSName;
          - type: multiply
            column: 4
            value: 1048576
            # Translate the FaultToleranceLevel into a more readable string
            # ID;ControllerNumber;RAIDLevel;Size;OSName;
          - type: translate
            column: 3
            translationTable: RAIDLevelTranslationTable
            # Add "Seen by the OS as " to the OS name column
            # ID;ControllerNumber;RAIDLevel;Size;OSName;
          - type: leftConcat
            column: 5
            value: 'Seen by the OS as '
      mapping:
        # The InstanceTable
        source: $monitors.logical_disk.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          raid_level: $column(3)
          hw.logical_disk.limit: $column(4)
          info: $column(5)
          hw.parent.type: disk_controller
          hw.parent.id: "lookup(\"disk_controller\", \"id\", \"controller_number\", $column(2))"
          name: "sprintf(\"%s (%s - %s)\", $column(1), $column(3), $column(4))"
    collect:
      # Collect type = MultiInstance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = the cpqIdeLogicalDriveTable snmp table
          # ID;Status
          type: snmpTable
          oid: 1.3.6.1.4.1.232.14.2.6.1.1
          selectColumns: "ID,5"
          computes:
            # Duplicate the status column
            # ID;Status;Status
          - type: duplicateColumn
            column: 2
            # Translate the first status column into a PATROL status
            # ID;PATROLStatus;Status
          - type: translate
            column: 2
            translationTable: LogicalDiskStatusTranslationTable
            # Translate the second status column into a more readable string
            # ID;PATROLStatus;StatusInformation
          - type: translate
            column: 3
            translationTable: LogicalDiskStatusInformationTranslationTable
      mapping:
        # The ValueTable = source(1)
        source: $monitors.logical_disk.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="logical_disk"}: $column(2)
        legacyTextParameters:
          StatusInformation: $column(3)
