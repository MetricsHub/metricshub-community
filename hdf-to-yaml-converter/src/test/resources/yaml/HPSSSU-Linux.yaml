---
extends:
- HPSSSU-header
embedded:
  EmbeddedFile(1): |-
    #!/bin/bash
    username=$1
    password=$2
    hostname=$3

    # Echo the time
    echo -n "Start - ";date

    # A For loop.  It will take the output of LS SYSTEM
    # wait for the trigger "Systems available" (trigger name MS_HW_SSSU)
    # then will run the SSSU commands for all systems after that
    # with MS_HW_SECTION as a divider for each command for easier awk...
    # and an MS_HW_ENCLOSURE <Enclosure Name> as a divider for each enclosure
    systemsfound=0
    (sssu "SELECT manager $hostname username=$username password=$password " "LS SYSTEM"; echo) | (while read system; do
      if [ $systemsfound -eq 1 ]; then
         if [[ "$system" =~ "No Systems found" ]]; then
            echo No Systems found
            exit 1
         fi
         echo Found System $system
         echo MS_HW_ENCLOSURE $system
         echo
         echo MS_HW_SECTION LS CONTROLLER FULL XML BEGIN
         sssu "SELECT Manager $hostname username=$username password=$password" "SELECT SYSTEM \"$system\"" "SET OPTIONS ON_ERROR=Exit_on_error NORETRIES" "LS CONTROLLER FULL XML"
         echo MS_HW_SECTION LS CONTROLLER FULL XML END
         echo
         echo MS_HW_SECTION LS CONTROLLER_ENCLOSURE FULL XML BEGIN
         sssu "SELECT Manager $hostname username=$username password=$password" "SELECT SYSTEM \"$system\"" "SET OPTIONS ON_ERROR=Exit_on_error NORETRIES" "LS CONTROLLER_ENCLOSURE FULL XML"
         echo MS_HW_SECTION LS CONTROLLER_ENCLOSURE FULL XML END
         echo
         echo MS_HW_SECTION LS DISK FULL XML  BEGIN
         sssu "SELECT Manager $hostname username=$username password=$password" "SELECT SYSTEM \"$system\"" "SET OPTIONS ON_ERROR=Exit_on_error NORETRIES" "LS DISK FULL XML"
         echo MS_HW_SECTION LS DISK FULL XML  END
         echo
         echo MS_HW_SECTION LS DISKSHELF FULL BEGIN
         sssu "SELECT Manager $hostname username=$username password=$password" "SELECT SYSTEM \"$system\"" "SET OPTIONS ON_ERROR=Exit_on_error NORETRIES" "LS DISKSHELF FULL XML"
         echo MS_HW_SECTION LS DISKSHELF FULL END
         echo
         echo MS_HW_SECTION LS SNAPSHOT FULL XML BEGIN
         sssu "SELECT Manager $hostname username=$username password=$password" "SELECT SYSTEM \"$system\"" "SET OPTIONS ON_ERROR=Exit_on_error NORETRIES" "LS SNAPSHOT FULL XML"
         echo MS_HW_SECTION LS SNAPSHOT FULL XML END
         echo
      else
         if [[ "$system" =~ "Systems available" ]]; then
            systemsfound=1
         fi
      fi
    done
    if [ $systemsfound -eq 0 ]; then
      echo Text \"Systems Available\" not found in output
    fi
    )
    echo -n "End - ";date
  EmbeddedFile(3): |-
    #!/bin/bash
    username=$1
    password=$2
    hostname=$3

    # Echo the time
    echo -n "Start - ";date

    # A For loop.  It will take the output of LS SYSTEM
    # wait for the trigger "Systems available" (trigger name MS_HW_SSSU)
    # then will run the SSSU commands for all systems after that
    # with MS_HW_SECTION as a divider for each command for easier awk...
    # and an MS_HW_ENCLOSURE <Enclosure Name> as a divider for each enclosure
    systemsfound=0
    (sssu "SELECT manager $hostname username=$username password=$password " "LS SYSTEM"; echo) | (while read system; do
      if [ $systemsfound -eq 1 ]; then
         if [[ "$system" =~ "No Systems found" ]]; then
            echo No Systems found
            exit 1
         fi
         echo Found System $system
         echo MS_HW_ENCLOSURE $system
         echo
         echo MS_HW_SECTION LS VDISK FULL XML BEGIN
         sssu "SELECT Manager $hostname username=$username password=$password" "SELECT SYSTEM \"$system\"" "SET OPTIONS ON_ERROR=Exit_on_error NORETRIES" "LS VDISK FULL XML"
         echo MS_HW_SECTION LS VDISK FULL XML END
         echo
         echo MS_HW_SECTION LS DISK_GROUP FULL XML BEGIN
         sssu "SELECT Manager $hostname username=$username password=$password" "SELECT SYSTEM \"$system\"" "SET OPTIONS ON_ERROR=Exit_on_error NORETRIES" "LS DISK_GROUP FULL XML"
         echo MS_HW_SECTION LS DISK_GROUP FULL XML END
         echo

      else
         if [[ "$system" =~ "Systems available" ]]; then
            systemsfound=1
         fi
      fi
    done
    if [ $systemsfound -eq 0 ]; then
      echo Text \"Systems Available\" not found in output
    fi
    )
    echo -n "End - ";date
connector:
  displayName: HP StorageWorks EVA (SSSU) - Patrol Agent on Linux
  platforms: HP StorageWorks EVA
  reliesOn: 'HP StorageWorks Command View EVA SSSU '
  information: This connector provides hardware monitoring through the HP StorageWorks Command View EVA SSSU command line utility
  version: 1.1
  detection:
    connectionTypes:
    - local
    - remote
    appliesTo:
    - Storage
    disableAutoDetection: true
    supersedes:
    - SMISDiskArray
    criteria:
    # The Patrol Agent should be on a server running Linux
    - type: osCommand
      commandLine: uname
      errorMessage: Connector only works when the Patrol Agent is installed on a server running Linux
      expectedResult: Linux
      executeLocally: true
monitors:
  enclosure:
    discovery:
      sources:
        source(1):
          type: osCommand
          commandLine: "/bin/sh $embedded.EmbeddedFile(1)$ %{USERNAME} %{PASSWORD} %{HOSTNAME}"
          executeLocally: true
          timeout: 600
    collect:
      sources:
        source(1):
          # Source(1) = the output of "$embedded.EmbeddedFile(1)$
          type: osCommand
          commandLine: "/bin/sh $embedded.EmbeddedFile(1)$ %{USERNAME} %{PASSWORD} %{HOSTNAME}"
          executeLocally: true
          timeout: 600
  logical_disk:
    discovery:
      sources:
        source(1):
          type: osCommand
          commandLine: "/bin/sh $embedded.EmbeddedFile(3)$ %{USERNAME} %{PASSWORD} %{HOSTNAME}"
          executeLocally: true
          timeout: 3600
    collect:
      sources:
        source(1):
          type: osCommand
          commandLine: "/bin/sh $embedded.EmbeddedFile(3)$ %{USERNAME} %{PASSWORD} %{HOSTNAME}"
          executeLocally: true
          timeout: 3600
