---
embedded:
  EmbeddedFile(1): |-
    BEGIN {
      FS=";"
    }
    {
      print $1-11";"$2";"$3";"$4";"$5";"$6";"$7";"$8";"$9";"$10";"$11";"$12";"$13";"
    }
translations:
  SensorStatusTranslationTable:
    "1": ok
    "2": degraded
    default: UNKNOWN
    "3": failed
    "4": failed
    "5": failed
    "6": failed
  SensorStatusInformationTranslationTable:
    "1": ""
    "2": Warning
    default: Unknown Status
    "3": Critical
    "4": Shutdown
    "5": No Longer Present
    "6": Not Functioning
  entPhySensorPrecisionTranslationTable:
    "1": 10
    default: 1
    "2": 100
    "3": 1000
connector:
  detection:
    criteria:
      # Detection Criteria 1
      # Must have ENTITY-SENSOR-MIB
    - type: snmpGetNext
      oid: 1.3.6.1.2.1.99
monitors:
  enclosure:
    discovery:
      sources:
        source(1):
          # Source(1) = SNMP Table
          # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU
          type: snmpTable
          oid: 1.3.6.1.2.1.47.1.1.1.1
          selectColumns: "ID,2,4,5,8,9,11,12,13,16"
        source(2):
          # ID;type;
          type: snmpTable
          oid: 1.3.6.1.2.1.99.1.1.1
          selectColumns: "ID,1,5"
        source(3):
          # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;value;
          type: tableJoin
          leftTable: $monitors.enclosure.discovery.sources.source(1)$
          rightTable: $monitors.enclosure.discovery.sources.source(2)$
          leftKeyColumn: 1
          rightKeyColumn: 1
          defaultRightLine: ;;;
          computes:
          # Exclude sensors with status "No Longer Present
          - type: excludeMatchingLines
            column: 13
            regExp: 5
        source(4):
          # Keep Source 3 clean for other classes
          type: copy
          from: $monitors.enclosure.discovery.sources.source(3)$
          computes:
            # Keep only units of type 3 (chassis)
            # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          - type: keepOnlyMatchingLines
            column: 4
            valueList: 3
      mapping:
        # Instance Table
        source: $monitors.enclosure.discovery.sources.source(4)$
        attributes:
          id: _DEVICE_ID
          __display_id: $column(2)
          vendor: $column(8)
          model: $column(9)
          serial_number: $column(7)
          bios_version: $column(5)
          type: _ENCLOSURE_TYPE
          name: "sprintf(\"%s (%s %s - %s)\", $column(2), $column(8), $column(9), \"_ENCLOSURE_TYPE\")"
    collect:
      sources:
        source(1):
          # Entity-Sensor-MIB
          # ID;type;precision;Value;State;
          type: snmpTable
          oid: 1.3.6.1.2.1.99.1.1.1
          selectColumns: "ID,1,3,4,5"
          computes:
          - type: translate
            column: 3
            translationTable: entPhySensorPrecisionTranslationTable
          - type: divide
            column: 4
            value: Column(3)
          - type: duplicateColumn
            column: 5
        source(2):
          # For use in all other classes
          type: copy
          from: $monitors.enclosure.collect.sources.source(1)$
          computes:
            # Translate state status into a Status
            # ID;type;precision;Value;PATROLStatus;StatusInformation;
          - type: translate
            column: 5
            translationTable: SensorStatusTranslationTable
            # Translate the second state status into a StatusInformation
            # ID;type;precision;Value;PATROLStatus;StatusInformation;
          - type: translate
            column: 6
            translationTable: SensorStatusInformationTranslationTable
      mapping:
        # No status for chassis is available therefore it is not collected.
        # ValueTable = Source(2)
        source: $monitors.enclosure.collect.sources.source(2)$
        deviceId: _DEVICE_ID
  temperature:
    discovery:
      sources:
        source(1):
          # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          type: copy
          from: $monitors.enclosure.discovery.sources.source(3)$
          computes:
            # Keep only celcius(8) (temperature sensors)
            # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          - type: keepOnlyMatchingLines
            column: 12
            valueList: 8
      mapping:
        # Instance Table
        source: $monitors.temperature.discovery.sources.source(1)$
        attributes:
          id: $column(11)
          __display_id: $column(2)
          hw.parent.type: enclosure
          hw.parent.id: _DEVICE_ID
          name: $column(2)
    collect:
      # Collect type = multi-instance
      type: multiInstance
      mapping:
        source: $monitors.enclosure.collect.sources.source(2)$
        deviceId: $column(1)
        metrics:
          hw.temperature: $column(4)
          hw.status{hw.type="temperature"}: $column(5)
        legacyTextParameters:
          StatusInformation: $column(6)
  voltage:
    discovery:
      sources:
        source(1):
          # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          type: copy
          from: $monitors.enclosure.discovery.sources.source(3)$
          computes:
          # Keep Voltages (voltsAC, voltsDC)
          - type: keepOnlyMatchingLines
            column: 12
            valueList: "3,4"
      mapping:
        # InstanceTable = Source(1)
        source: $monitors.voltage.discovery.sources.source(1)$
        attributes:
          id: $column(11)
          __display_id: $column(2)
          voltage_type: $column(2)
          hw.parent.type: enclosure
          hw.parent.id: _DEVICE_ID
          name: "sprintf(\"%s (%s)\", $column(2), $column(2))"
    collect:
      # Collect type = multi-instance
      type: multiInstance
      sources:
        source(1):
          type: copy
          from: $monitors.enclosure.collect.sources.source(2)$
          computes:
          # Volts into mV
          - type: multiply
            column: 4
            value: 1000
      mapping:
        # Value Table
        source: $monitors.voltage.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.voltage: $column(4)
          hw.status{hw.type="voltage"}: $column(5)
        legacyTextParameters:
          StatusInformation: $column(6)
  fan:
    discovery:
      sources:
        source(1):
          # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          type: copy
          from: $monitors.enclosure.discovery.sources.source(3)$
          computes:
            # Keep only Fan sensors
            # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          - type: keepOnlyMatchingLines
            column: 12
            valueList: 10
            # Substract 11 from ID to get FRU Parent
            # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          - type: awk
            script: EmbeddedFile(1)
        source(2):
          # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;value;
          type: tableJoin
          leftTable: $monitors.fan.discovery.sources.source(1)$
          rightTable: $monitors.enclosure.discovery.sources.source(3)$
          leftKeyColumn: 1
          rightKeyColumn: 1
          computes:
          - type: keepColumns
            columnNumbers: "14,15,16,17,18,19,20,21,22,23,24,25"
          - type: leftConcat
            column: 9
            value: "Model: "
          - type: leftConcat
            column: 8
            value: "Manufacturer: "
          - type: leftConcat
            column: 7
            value: "Serial Number: "
      mapping:
        # Instance Table
        source: $monitors.fan.discovery.sources.source(2)$
        attributes:
          id: $column(1)
          __display_id: $column(2)
          info: "join($column(7), $column(8), $column(9), \" \")"
          hw.parent.type: enclosure
          hw.parent.id: _DEVICE_ID
          name: $column(2)
    collect:
      # Collect type = multi-instance
      type: multiInstance
      sources:
        source(1):
          type: copy
          from: $monitors.enclosure.collect.sources.source(2)$
          computes:
          # Substract 11 from ID to get FRU Parent
          - type: awk
            script: EmbeddedFile(1)
      mapping:
        # ValueTable = Enclosure.Collect.Source(1)
        source: $monitors.fan.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.fan.speed: $column(4)
          hw.status{hw.type="fan"}: $column(5)
        legacyTextParameters:
          StatusInformation: $column(6)
