---
extends:
- ../MIB2-header/MIB2-header
connector:
  displayName: Aruba (SNMP)
  platforms: Aruba
  reliesOn: SNMP Agent
  version: 1.0
  information: "This connector discovers the Aruba Network Switch enclosure as well as various environment sensors (temperature, fans, power supplies). It relies on the SNMP protocol."
  detection:
    connectionTypes:
    - remote
    - local
    appliesTo:
    - Network
    supersedes:
    - GenericSwitchEnclosure
    - MIB2
    criteria:
      # Detection Criteria 1
      # Check for WLSX-SYSTEMEXT-MIB entry
    - type: snmpGetNext
      oid: 1.3.6.1.4.1.14823.2.2.1.2
monitors:
  enclosure:
    discovery:
      sources:
        source(1):
          # hostname
          type: snmpGet
          oid: 1.3.6.1.4.1.14823.2.2.1.2.1.2.0
        source(2):
          # model
          type: snmpGet
          oid: 1.3.6.1.4.1.14823.2.2.1.2.1.3.0
      mapping:
        source: "${source::monitors.enclosure.discovery.sources.source(1)}"
        attributes:
          id: Chassis
          __display_id: $1
          model: "${source::monitors.enclosure.discovery.sources.source(2)}"
          vendor: Aruba
          device_hostname: "${source::monitors.enclosure.discovery.sources.source(1)}"
          type: Switch
          name: "${awk::sprintf(\"Switch: %s (%s %s)\", $1, \"Aruba\", \"${source::monitors.enclosure.discovery.sources.source(2)}\")}"
  power_supply:
    discovery:
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.14823.2.2.1.2.1.18.1
          selectColumns: "ID,2"
          computes:
          - type: duplicateColumn
            column: 1
          - type: leftConcat
            column: 2
            value: 'PSU '
          - type: excludeMatchingLines
            column: 3
            regExp: 2
      mapping:
        # ID;Name;
        source: "${source::monitors.power_supply.discovery.sources.source(1)}"
        attributes:
          id: $1
          __display_id: $2
          hw.parent.type: enclosure
          hw.parent.id: Chassis
          name: $2
    collect:
      # Collect type = multi-instance
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.14823.2.2.1.2.1.18.1
          selectColumns: "ID,2"
          computes:
          - type: duplicateColumn
            column: 2
          - type: translate
            column: 2
            translationTable: "${translation::SensorStatusTranslationTable}"
          - type: translate
            column: 3
            translationTable: "${translation::SensorStatusInformationTranslationTable}"
      mapping:
        # Id;PatrolStatus;StatusInformation
        source: "${source::monitors.power_supply.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.status{hw.type="power_supply"}: $2
        legacyTextParameters:
          StatusInformation: $3
  fan:
    discovery:
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.14823.2.2.1.2.1.17.1
          selectColumns: "ID,2"
          computes:
          - type: duplicateColumn
            column: 1
          - type: leftConcat
            column: 2
            value: 'Fan '
          - type: excludeMatchingLines
            column: 3
            regExp: 2
      mapping:
        # ID;Name;
        source: "${source::monitors.fan.discovery.sources.source(1)}"
        attributes:
          id: $1
          __display_id: $2
          hw.parent.type: enclosure
          hw.parent.id: Chassis
          name: $2
    collect:
      # Collect type = multi-instance
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.14823.2.2.1.2.1.17.1
          selectColumns: "ID,2"
          computes:
          - type: duplicateColumn
            column: 2
          - type: translate
            column: 2
            translationTable: "${translation::SensorStatusTranslationTable}"
          - type: translate
            column: 3
            translationTable: "${translation::SensorStatusInformationTranslationTable}"
      mapping:
        # Id;PatrolStatus;StatusInformation
        source: "${source::monitors.fan.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.status{hw.type="fan"}: $2
        legacyTextParameters:
          StatusInformation: $3
  temperature:
    discovery:
      sources:
        source(1):
          type: static
          value: InternalTemperature
      mapping:
        source: "${source::monitors.temperature.discovery.sources.source(1)}"
        attributes:
          id: $1
          __display_id: Internal Temperature
          hw.parent.type: enclosure
          name: Internal Temperature
    collect:
      sources:
        source(1):
          type: snmpGet
          oid: 1.3.6.1.4.1.14823.2.2.1.2.1.10.0
          computes:
          # Duplicate Temperature String
          - type: duplicateColumn
            column: 1
          # Extract Temperature
          - type: extract
            column: 1
            subColumn: 1
            subSeparators: ' '
          # Extract Status
          - type: extract
            column: 2
            subColumn: 4
            subSeparators: ' '
          # Duplicate Status
          - type: duplicateColumn
            column: 2
          # Translate Status
          - type: translate
            column: 2
            translationTable: "${translation::TemperatureStatusTranslationTable}"
          # Translate StatusInformation
          - type: translate
            column: 3
            translationTable: "${translation::TemperatureStatusInformationTranslationTable}"
      mapping:
        # Temperature;PatrolStatus;StatusInformation;
        source: "${source::monitors.temperature.collect.sources.source(1)}"
        attributes:
          id: InternalTemperature
        metrics:
          hw.temperature: $1
          hw.status{hw.type="temperature"}: $2
        legacyTextParameters:
          StatusInformation: $3
  network:
    discovery:
      mapping:
        # add network card discovery present in mib2.hdf and not in mib2.hhdf
        # PortID;Description;TypeCode;MacAddress;AdminStatus;ID;Name;Alias;
        source: "${source::monitors.network.discovery.sources.source(3)}"
        attributes:
          id: $1
          __display_id: $7
          physical_address: $4
          physical_address_type: MAC
          device_type: $3
          hw.parent.type: enclosure
          name: "${awk::sprintf(\"%s (%s)\", $7, $3)}"
translations:
  TemperatureStatusTranslationTable:
    (NORMAL): ok
    Default: failed
  SensorStatusTranslationTable:
    "1": ok
    "2": failed
    Default: UNKNOWN
  TemperatureStatusInformationTranslationTable:
    (NORMAL): ""
    Default: Temperature outside normal range.
  SensorStatusInformationTranslationTable:
    "1": Active
    "2": Inactive
    Default: Unknown Status
