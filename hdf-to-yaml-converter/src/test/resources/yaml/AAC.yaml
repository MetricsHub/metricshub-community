---
connector:
  displayName: Adaptec Storage Manager Web Edition (AAC)
  platforms: Fujitsu-Siemens PRIMERGY
  reliesOn: Adaptec Storage Manager Web Edition
  version: 1.0
  information: This connector provides disk monitoring through the Adaptec Storage Manager Web Edition SNMP sub-agent which supports all AAC-based Adaptec RAID controllers.
  detection:
    connectionTypes:
    - remote
    appliesTo:
    - NT
    - Linux
    criteria:
    - type: snmpGetNext
      oid: 1.3.6.1.4.1.795.10.1.1.3.1.1
monitors:
  disk_controller:
    discovery:
      sources:
        source(1):
          # Source(1) = adaptecArrayControllerAdapterTable SNMP table
          # deviceID;adapterIndex;adapterType;biosVersion;kernelVersion
          type: snmpTable
          oid: 1.3.6.1.4.1.795.10.1.1.3.1
          selectColumns: "ID,1,3,7,8"
      mapping:
        # InstanceTable = Source(1)
        source: $monitors.disk_controller.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          controller_number: $column(2)
          model: $column(3)
          firmware_version: $column(5)
          bios_version: $column(4)
          hw.parent.type: enclosure
          name: "sprintf(\"Disk Controller: %s (%s)\", $column(2), $column(3))"
  physical_disk:
    discovery:
      sources:
        source(1):
          # Source(1) = adaptecArrayControllerDeviceTable SNMP table
          # ID;devAdapterIndex;devType;devVendor;devProduct;devBlocks;devBytesPerBlock
          type: snmpTable
          oid: 1.3.6.1.4.1.795.10.1.1.5.1
          selectColumns: "ID,2,6,7,8,10,11"
          computes:
          # Keep only device type = 1 (disk)
          - type: keepOnlyMatchingLines
            column: 3
            valueList: 0
            # Multiply the number of blocks by the number of bytes per block to obtain the size in bytes
            # ID;devAdapterIndex;devType;devVendor;devProduct;devSizeInBytes;devBytesPerBlock
          - type: multiply
            column: 6
            value: Column(7)
      mapping:
        # Instance Table = Source(1)
        source: $monitors.physical_disk.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          vendor: $column(4)
          hw.parent.type: disk_controller
          hw.parent.id: "lookup(\"disk_controller\", \"id\", \"controller_number\", $column(2))"
          name: "sprintf(\"%s (%s)\", $column(1), $column(6))"
        metrics:
          hw.physical_disk.size: $column(6)
    collect:
      # Collect type is: multi-instance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = the adaptecArrayControllerDeviceExtensionTable SNMP table
          # DeviceID;Status;SmartStatus
          type: snmpTable
          oid: 1.3.6.1.4.1.795.10.1.1.30.1
          selectColumns: "ID,1,3"
          computes:
            # Duplicate the Status column
            # DeviceID;Status;Status;SMARTStatus
          - type: duplicateColumn
            column: 2
            # Translate the first status value into a PATROL Status
            # DeviceID;PATROLStatus;Status;SMARTStatus
          - type: translate
            column: 2
            translationTable: PhysicalDiskStatusTranslationTable
            # Translate the second status value into a more readable information
            # DeviceID;PATROLStatus;InformationStatus;SMARTStatus
          - type: translate
            column: 3
            translationTable: PhysicalDiskStatusInformationTranslationTable
            # Translate the original SMARTStatus into a true/false value that says if a failure is predicted
            # DeviceID;PATROLStatus;InformationStatus;PredictedFailure
          - type: translate
            column: 4
            translationTable: PhysicalDiskSMARTTranslationTable
      mapping:
        # The collect table = Source(1)
        source: $monitors.physical_disk.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="physical_disk"}: $column(2)
          hw.status{hw.type="physical_disk", state="predicted_failure"}: boolean($column(4))
        legacyTextParameters:
          StatusInformation: $column(3)
  logical_disk:
    discovery:
      sources:
        source(1):
          # Source(1) = adaptecArrayControllerContainerTable SNMP table
          # ID;contAdapterIndex;contSizeMB;contType
          type: snmpTable
          oid: 1.3.6.1.4.1.795.10.1.1.4.1
          selectColumns: "ID,2,4,6"
          computes:
            # Multiply the capacity column (in MB) by 1048576 to obtain the disk size in bytes
            # ID;contAdapterIndex;contSizeBytes;contType
          - type: multiply
            column: 3
            value: 1048576
      mapping:
        # Instance Table = Source(1)
        source: $monitors.logical_disk.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          hw.logical_disk.limit: $column(3)
          raid_level: $column(4)
          hw.parent.type: disk_controller
          hw.parent.id: "lookup(\"disk_controller\", \"id\", \"controller_number\", $column(2))"
          name: "sprintf(\"%s (%s - %s)\", $column(1), $column(4), $column(3))"
    collect:
      # Collect type is: multi-instance
      type: multiInstance
      sources:
        source(1):
          # Source(1) = the adaptecArrayControllerContainerExtensionTable SNMP table
          # DeviceID;Status
          type: snmpTable
          oid: 1.3.6.1.4.1.795.10.1.1.29.1
          selectColumns: "ID,3"
          computes:
            # Duplicate the Status column
            # DeviceID;Status;Status
          - type: duplicateColumn
            column: 2
            # Translate the first status value into a PATROL Status
            # DeviceID;PATROLStatus;Status
          - type: translate
            column: 2
            translationTable: LogicalDiskStatusTranslationTable
            # Translate the second status value into a more readable information
            # DeviceID;PATROLStatus;InformationStatus
          - type: translate
            column: 3
            translationTable: LogicalDiskStatusInformationTranslationTable
      mapping:
        # The collect table = Source(1)
        source: $monitors.logical_disk.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="logical_disk"}: $column(2)
        legacyTextParameters:
          StatusInformation: $column(3)
translations:
  PhysicalDiskStatusInformationTranslationTable:
    default: Unknown Status
    "3": ""
    "4": Degraded
    "5": Critical
    "6": Non-recoverable
    "7": Exercising
    "8": Verifying
    "9": Verifying with Replace
    "10": Zeroing
  PhysicalDiskSMARTTranslationTable:
    "1": "false"
    "2": "false"
    default: "false"
    "3": "false"
    "4": "true"
  LogicalDiskStatusInformationTranslationTable:
    "11": Rebuilding
    "12": Scrubbing
    "13": Updating snapshot
    "14": Zeroing
    default: Unknown Status
    "3": ""
    "4": Degraded
    "5": Critical
    "6": Non-recoverable
    "7": Copying
    "8": Formatting
    "9": Creating
    "10": Reconfiguring
  LogicalDiskStatusTranslationTable:
    "11": degraded
    "12": degraded
    "13": ok
    "14": ok
    default: UNKNOWN
    "3": ok
    "4": degraded
    "5": failed
    "6": failed
    "7": ok
    "8": ok
    "9": ok
    "10": ok
  PhysicalDiskStatusTranslationTable:
    default: UNKNOWN
    "3": ok
    "4": degraded
    "5": failed
    "6": failed
    "7": ok
    "8": ok
    "9": ok
    "10": ok
