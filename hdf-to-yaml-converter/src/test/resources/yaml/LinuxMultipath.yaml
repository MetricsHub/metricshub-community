---
embedded:
  EmbeddedFile(1): "BEGIN {NumberPaths=0; LunName=\"\"; LunInfo=\"\" ; LunStatus=\"\"; LunStatusInfo=\"\";AvailablePaths=\"\"}\n\n# RHEL 5 uses the format:\n#\t0HP_OPEN-E_500060e802c43216001e0f00000000000000c600dm-2 HP,OPEN-E\n#\t[size=14G][features=0][hwhandler=0]\n#\t\\_ round-robin 0 [prio=0][active]\n#\t\\_ 1:0:0:30 sdc 8:32 [active][undef]\n\n# RHEL 6 uses the format:\n#\tmpathc (360000970000294901120533030303644) dm-0 EMC,SYMMETRIX\n#\tsize=5.0G features='1 queue_if_no_path' hwhandler='0' wp=rw\n#\t`-+- policy='round-robin 0' prio=0 status=active\n#\t  |- 2:0:0:3 sdc 8:32  active undef running\n#   `- 2:0:1:3 sde 8:64  active undef running\n#\n# OR\n#\n# mpath2 (36001b97004106bf304106bf26b52a9fc) dm-10 VIOLIN,SAN ARRAY\n# size=128G features='0' hwhandler='0' wp=rw\n# |-+- policy='round-robin 0' prio=0 status=enabled\n# | `- 2:0:0:3  sdau 66:224 active undef running\n# |-+- policy='round-robin 0' prio=0 status=enabled\n# | `- 1:0:2:3  sdw  65:96  active undef running\n# `-+- policy='round-robin 0' prio=0 status=enabled\n#   `- 1:0:3:3  sdag 66:0   active undef running\n\n$1 ~ /^[0-9A-Za-z][0-9A-Za-z]/ && $1 !~ /[=\\[]/ {\n                          if (LunName != \"\") {print (\"MSHW;\"LunName\";\"LunInfo\";\"NumberPaths\";\"LunStatus\";\"LunStatusInfo\";\"AvailablePaths\";\")}\n\t                        NumberPaths=0; LunName=\"\"; LunInfo=\"\" ; LunStatus=\"\"; LunStatusInfo=\"\";AvailablePaths=\"\";\n\t                        LunName=$1 ; LunInfo = $0 ;\n\t                       }\n\n($1 ~ /\\\\_/ || $1 ~ /[\\|\\`]\\-/) && $2 !~ /[0-9]+:[0-9]+:[0-9]+:[0-9]+/  {\n\t                                                    if ($0 ~ /(active)|(ready)|(enabled)/) {LunStatus=\"OK\" ;}\n\t                                                   \telse if ($NF ~ /(faulty)|(failed)/) {LunStatus=\"ALARM\" ; LunStatusInfo = $NF}\n                                                      }\n(($1 ~ /\\\\_/ || $1 ~ /[\\|\\`]\\-/) && $2 ~ /[0-9]+:[0-9]+:[0-9]+:[0-9]+/ ) {\n\t                                                    if ($0 ~ /(active)|(ready)|(enabled)/) {NumberPaths=NumberPaths+1\n                                                      if (AvailablePaths==\"\") {AvailablePaths=\"Path: \" $2 \" \" $3}\n                                                   \t      else {AvailablePaths=AvailablePaths \" - Path: \" $2 \" \" $3}}\n\t                                                    }\n\n($1 ~ /[|]/ && $2 ~ /[\\|\\`]\\-/ && $3 ~ /[0-9]+:[0-9]+:[0-9]+:[0-9]+/ ) {\n\t                                                    if ($0 ~ /(active)|(ready)|(enabled)/) {NumberPaths=NumberPaths+1\n                                                      if (AvailablePaths==\"\") {AvailablePaths=\"Path: \" $3 \" \" $4}\n                                                   \t      else {AvailablePaths=AvailablePaths \" - Path: \" $3 \" \" $4}}\n\t                                                    }\n\nEND {if (LunName != \"\" ) {print (\"MSHW;\"LunName\";\"LunInfo\";\"NumberPaths\";\"LunStatus\";\"LunStatusInfo\";\"AvailablePaths\";\")}}"
connector:
  displayName: Linux - Multipath
  platforms: Any system with multipath
  reliesOn: Linux multipath utility
  version: 1.0
  information: This connector provides the monitoring of HBA cards on all Linux systems through the multipath utility.
  detection:
    connectionTypes:
    - remote
    appliesTo:
    - Linux
    criteria:
    - _comment: OS should be Linux
      type: deviceType
      keep:
      - Linux
    - _comment: Test the multipath command
      type: osCommand
      commandLine: "%{SUDO:multipath} multipath -l"
      expectedResult: \(^\\_\)\|\(^\`\-\+\-\)
sudoCommands:
- multipath
monitors:
  lun:
    discovery:
      sources:
        source(1):
          _comment: Get the list of Ports from multipath -l
          type: osCommand
          commandLine: "%{SUDO:multipath} multipath -l"
          computes:
            # AWK it
            # LunName;LunInfo;LunStatus;
          - type: awk
            script: EmbeddedFile(1)
            keep: ^MSHW;
            separators: ;
            selectColumns: "2,3,5"
      mapping:
        # InstanceTable = Source(1)
        # LunName;LunInfo;LunStatus;
        source: $monitors.lun.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          array_name: $column(2)
          hw.parent.type: enclosure
          name: $column(2)
    collect:
      _comment: Collect type is multi-instance
      type: multiInstance
      sources:
        source(1):
          _comment: Get the list of Ports from multipath -l
          type: osCommand
          commandLine: "%{SUDO:multipath} multipath -l"
          computes:
            # AWK it
            # LunName;NumberPaths;LunStatus;LunStatusInfo;AvailablePathInformation;
          - type: awk
            script: EmbeddedFile(1)
            keep: ^MSHW;
            separators: ;
            selectColumns: "2,4,5,6,7"
      mapping:
        # ValueTable = Source(1)
        # LunName;NumberPaths;LunStatus;LunStatusInfo;AvailablePathInformation;
        source: $monitors.lun.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.lun.paths: $column(2)
        legacyTextParameters:
          AvailablePathInformation: $column(5)
