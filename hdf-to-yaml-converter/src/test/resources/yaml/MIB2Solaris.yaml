---
extends:
- MIB2-header
- SunEthernetDriver-header
connector:
  displayName: MIB-2 Standard SNMP Agent - Network Interfaces - Solaris
  platforms: Any system with SNMP
  detection:
    appliesTo:
    - Solaris
    supersedes:
    - SunNetwork
monitors:
  network:
    discovery:
      sources:
        source(1):
          computes:
            # Process that through an AWK script to use Description as the device ID
            # and isolate the driver name, so we can translate that into a card model
            # Also keep only cards where the first word is a purely alphanumeric driverInstance name
            # DeviceID;DriverName;PortType;MacAddress;AdminStatus;
          - type: awk
            script: EmbeddedFile(1)
            keep: ^MSHW;
            separators: ;
            selectColumns: "2,3,4,5,6"
            # Translate the Driver column into a model name
            # DeviceID;Model;PortType;MacAddress;AdminStatus;
          - type: translate
            column: 2
            translationTable: DriverTranslationTable
      mapping:
        # InstanceTable = Source(1)
        # PortID;Description;PortType;MacAddress;AdminStatus;
        source: $monitors.network.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          physical_address: $column(4)
          physical_address_type: MAC
          device_type: $column(3)
          hw.parent.type: enclosure
          name: "sprintf(\"%s (%s)\", $column(1), $column(3))"
    collect:
      sources:
        source(6):
          computes:
            # Same as in the discovery, use Description as the DeviceID
            # PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;TotalErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;
          - type: replace
            column: 1
            existingValue: Column(1)
            newValue: Column(2)
embedded:
  EmbeddedFile(1): |-
    BEGIN {
        FS = ";"
    }
    ($2 ~ /^[a-zA-Z0-9]+$/) {
        DeviceID = $2
        driver = DeviceID
        while (substr(driver, length(driver), 1) ~ /[0-9]/)
        {
            driver = substr(driver, 1, length(driver) - 1)
        }

        if (driver != "lo" && driver != "lpfc" && driver != "jnet" && driver != "dman" && driver != "aggr" && driver != "clprivnet" && driver != "sppp")
        {
            print "MSHW;" DeviceID ";" driver ";" $3 ";" $4 ";" $5
        }
    }
