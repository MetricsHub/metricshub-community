---
translations:
  VoltageTypeTranslationTable:
    "22": Remote +18 V
    "23": Remote +1.8 V
    default: ""
    "10": Bus
    "11": +1.25 V
    "12": +1.5 V
    "13": +18 V
    "14": +1.8 V
    "15": Remote +12 V
    "16": Remote -12 V
    "17": Remote +5 V
    "18": Remote +3.3 V
    "19": Remote +2.5 V
    "0": ""
    "1": +2.5a V
    "2": +2.5b V
    "3": +3.3 V
    "4": +5 V
    "5": +12 V
    "6": -12 V
    "7": -5 V
    "8": VIO
    "9": Vcore
    "20": Remote +1.25 V
    "21": Remote +1.5 V
  cpuStatusInformationTranslationTable:
    "1": ""
    "2": Disabled by User
    default: Unknown Status
    "3": Disabled by BIOS (POST Error)
    "4": Idle
    ok: ""
  cpuTypeTranslationTable:
    "11": Pentium
    "12": Pentium Pro
    "13": Pentium II
    "14": Pentium MMX
    "15": Celeron
    "16": Pentium II Xeon
    "17": Pentium III
    "28": Athlon
    "18": M1 Family
    "29": Duron
    "19": M2 Family
    "181": Xeon MP
    "182": Athlon XP
    "183": Athlon MP
    "184": Itanium 2
    "130": Itanium
    "185": Pentium 4 HT
    "176": Pentium III Xeon
    "177": Pentium III SpeedStep
    "178": Pentium 4
    default: ""
    "179": Xeon
    "32": PowerPC
  PowerSupplyStatusTranslationTable:
    stopped: ok
    error: failed
    degraded: degraded
    default: UNKNOWN
    stressed: degraded
    nonrecover: failed
    stopping: degraded
    service: degraded
    no contact: degraded
    lost comm: degraded
    ok: ok
    starting: degraded
    pred fail: degraded
  MemoryBitTranslationTable:
    "13,1": Non-volatile
    "12,1": Cache DRAM
    "10,1": EDO
    "11,1": DRAM
    "1,1": Reserved
    "2,1": Other type
    "3,1": Unknown type
    "4,1": Fast-paged
    "5,1": Static column
    "6,1": Pseudo-static
    "7,1": Rambus
    "8,1": Synchronous
    "9,1": CMOS
  TemperatureTypeTranslationTable:
    "1": Motherboard
    "2": CPU
    default: ""
    "3": Power Supply
    "4": DASD
  cpuStatusTranslationTable:
    "1": ok
    "2": ok
    default: UNKNOWN
    "3": failed
    "4": ok
    ok: ok
  FanTypeTranslationTable:
    "1": System
    "2": Power-Supply
    default: ""
    "3": CPU
  memoryStatusTranslationTable:
    "0": ok
    "1": failed
    default: UNKNOWN
    "false": ok
    "true": failed
  PowerSupplyStatusInformationTranslationTable:
    stopped: Stopped
    error: Error
    degraded: Degraded
    default: Unknown Status
    stressed: Stressed
    nonrecover: Non Recover
    stopping: Stopping
    service: Service
    no contact: No Contact
    lost comm: Lost Communication
    ok: ""
    starting: Starting
    pred fail: Predicted Failure
  enclosureIntrusionStatusTranslationTable:
    "0": ok
    "1": ok
    "2": failed
    default: ok
connector:
  displayName: IBM Director Agent 5.20.x - Linux
  platforms: IBM xSeries
  reliesOn: IBM Director Agent 5.20.x
  version: 1.1
  information: This connector provides hardware monitoring through the IBM Director Agent version 5.20.x which supports some (not all) xSeries servers.
  detection:
    connectionTypes:
    - remote
    appliesTo:
    - Linux
    supersedes:
    - IpmiTool
    - VMwareESX4i
    - VMwareESXi
    - VMwareESXiDisksIPMI
    - VMwareESXiDisksStorage
    criteria:
    - _comment: OS must be Linux
      type: deviceType
      keep:
      - Linux
    - _comment: The WBEM layer (cimserver) must be running
      type: process
      commandLine: cimserver
    - _comment: Verify that the root/ibmsd WBEM namespace actually exists
      type: wbem
      namespace: root
      query: SELECT Name FROM __NAMESPACE
      expectedResult: ^ibmsd;*$
    - _comment: The IBM Director Agent must be in version 5.2x
      type: wbem
      query: SELECT Version FROM IBMPSG_DirectorAgent
      namespace: root/ibmsd
      expectedResult: ^5\.2.*
    - _comment: The IBMPSG_ComputerSystemDetails WBEM class must be instanciated
      type: wbem
      query: SELECT ProductName FROM IBMPSG_ComputerSystemDetails
      namespace: root/ibmsd
      errorMessage: The IBM Director Agent seems to not be working properly. Please reinstall the IBM Director Agent.
monitors:
  enclosure:
    discovery:
      sources:
        source(1):
          _comment: Source(1) = the IBMPSG_ComputerSystemDetails WBEM class
          type: wbem
          query: "SELECT Model,ProductName,SerialNumber FROM IBMPSG_ComputerSystemDetails"
          namespace: root/ibmsd
          computes:
          - _comment: Concatenate ProductName and Name
            type: rightConcat
            column: 2
            value: ' ('
          - type: rightConcat
            column: 2
            value: Column(1)
          - type: rightConcat
            column: 2
            value: )
      mapping:
        # InstanceTable = Source(1)
        # Note: InstanceTable must contain only one line!
        source: $monitors.enclosure.discovery.sources.source(1)$
        attributes:
          id: DIR5
          vendor: IBM
          model: $column(2)
          serial_number: $column(3)
          type: Computer
          name: "sprintf(\"%s (%s %s - %s)\", \"DIR5\", \"IBM\", $column(2), \"Computer\")"
    collect:
      type: monoInstance
      sources:
        source(1):
          _comment: Source(1) = The IBMPSG_SystemEnclosure WBEM class
          type: wbem
          query: "SELECT IntrusionStatus,Tag FROM IBMPSG_SystemEnclosure"
          namespace: root/ibmsd
          computes:
          - type: keepOnlyMatchingLines
            column: 2
            regExp: 0$
          - type: translate
            column: 1
            translationTable: enclosureIntrusionStatusTranslationTable
      mapping:
        source: $monitors.enclosure.collect.sources.source(1)$
        metrics:
          hw.status{hw.type="enclosure", state="open"}: legacyIntrusionStatus($column(1))
  cpu:
    discovery:
      sources:
        source(1):
          # CurrentClockSpeed,DeviceID,Manufacturer,Family
          type: wbem
          query: "SELECT CurrentClockSpeed,DeviceID,Family,Manufacturer FROM IBMPSG_Processor"
          namespace: root/ibmsd
          computes:
          - _comment: Translate the Family number into a model name
            type: translate
            column: 3
            translationTable: cpuTypeTranslationTable
          - _comment: Replace GenuineIntel by Intel and AuthenticAMD by AMD
            type: replace
            column: 4
            existingValue: GenuineIntel
            newValue: Intel
          - type: replace
            column: 4
            existingValue: AuthenticAMD
            newValue: AMD
      mapping:
        _comment: InstanceTable = Source(1)
        source: $monitors.cpu.discovery.sources.source(1)$
        attributes:
          id: $column(2)
          vendor: $column(4)
          model: $column(3)
          hw.parent.type: enclosure
          hw.parent.id: DIR5
          name: "sprintf(\"%s (%s - %s - %mhhf.s)\", $column(2), $column(4), $column(3), $column(1))"
        metrics:
          hw.cpu.speed.limit{limit_type="max"}: megaHertz2Hertz($column(1))
    collect:
      type: multiInstance
      sources:
        source(1):
          _comment: Source(1) = The IBMPSG_Processor WBEM class
          type: wbem
          query: "SELECT DeviceID,CPUStatus FROM IBMPSG_Processor"
          namespace: root/ibmsd
          computes:
          - type: duplicateColumn
            column: 2
          - type: translate
            column: 2
            translationTable: cpuStatusTranslationTable
          - type: translate
            column: 3
            translationTable: cpuStatusInformationTranslationTable
      mapping:
        source: $monitors.cpu.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="cpu"}: $column(2)
        legacyTextParameters:
          StatusInformation: $column(3)
  memory:
    discovery:
      sources:
        source(1):
          _comment: Discovery
          type: wbem
          query: "SELECT Capacity,BankLabel,SerialNumber,Tag,TypeDetail FROM IBMPSG_PhysicalMemory"
          namespace: root/ibmsd
          computes:
          - _comment: Convert size to MB
            type: divide
            column: 1
            value: 1048576
          - _comment: Translate memory type
            type: perBitTranslation
            column: 5
            bitList: "1,2,3,4,5,6,7,8,9,10,11,12,13"
            translationTable: MemoryBitTranslationTable
      mapping:
        _comment: InstanceTable = Source(1)
        source: $monitors.memory.discovery.sources.source(1)$
        attributes:
          id: $column(4)
          vendor: $column(2)
          serial_number: $column(3)
          type: $column(5)
          hw.parent.type: enclosure
          hw.parent.id: DIR5
          name: "sprintf(\"%s (%s - %s - %s)\", $column(4), $column(2), $column(5), $column(1))"
        metrics:
          hw.memory.limit: mebiByte2Byte($column(1))
    collect:
      type: multiInstance
      sources:
        source(1):
          _comment: Source(1) = The IBMPSG_Processor WBEM class
          type: wbem
          query: "SELECT HasError,Tag FROM IBMPSG_PhysicalMemory"
          namespace: root/ibmsd
          computes:
          - type: translate
            column: 1
            translationTable: memoryStatusTranslationTable
      mapping:
        source: $monitors.memory.collect.sources.source(1)$
        deviceId: $column(2)
        metrics:
          hw.status{hw.type="memory"}: $column(1)
  fan:
    discovery:
      sources:
        source(1):
          _comment: Source(1) = the IBMPSG_Fan WBEM class
          type: wbem
          query: "SELECT DeviceID, FanType, UpperThresholdCritical FROM IBMPSG_Tachometer"
          namespace: root/ibmsd
          computes:
          - type: translate
            column: 2
            translationTable: FanTypeTranslationTable
      mapping:
        _comment: InstanceTable = Source(1)
        source: $monitors.fan.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          hw.parent.type: enclosure
          hw.parent.id: DIR5
          name: $column(1)
        metrics:
          hw.fan.speed.limit{limit_type="low.degraded"}: $column(3)
          hw.fan.speed.limit{limit_type="low.critical"}: 0
    collect:
      _comment: The collect (as all WBEM-based collects) is "MultiInstance"
      type: multiInstance
      sources:
        source(1):
          _comment: Source(1) = The IBMPSG_Tachometer WBEM class
          type: wbem
          query: "SELECT CurrentReading,DeviceID FROM IBMPSG_Tachometer"
          namespace: root/ibmsd
      mapping:
        _comment: ValueTable = Source(1)
        source: $monitors.fan.collect.sources.source(1)$
        deviceId: $column(2)
        metrics:
          hw.fan.speed: $column(1)
  temperature:
    discovery:
      sources:
        source(1):
          _comment: Source(1) = The IBMPSG_TemperatureSensor WBEM class
          type: wbem
          query: "SELECT DeviceID, UserThresholdCritical, UserThresholdNonCritical, TempLocation FROM IBMPSG_TemperatureSensor"
          namespace: root/ibmsd
          computes:
          - type: translate
            column: 4
            translationTable: TemperatureTypeTranslationTable
            # Thresholds for Temperatures are sometimes reported as "0" by the agent.  Replacing these "0" by no value to prevent incorrect thresholds.
            # Add a MSHW_ string to our value and then remove MSHW_0. This should remove a 0 value and only that value
          - type: leftConcat
            column: 2
            value: MSHW_
          - type: leftConcat
            column: 3
            value: MSHW_
          - _comment: Remove 0 value
            type: replace
            column: 2
            existingValue: MSHW_0
            newValue: ""
          - type: replace
            column: 3
            existingValue: MSHW_0
            newValue: ""
          - _comment: Remove MSHW_ for non 0 values
            type: replace
            column: 2
            existingValue: MSHW_
            newValue: ""
          - type: replace
            column: 3
            existingValue: MSHW_
            newValue: ""
      mapping:
        _comment: InstanceTable = Source(1)
        source: $monitors.temperature.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          temperature_type: $column(4)
          hw.parent.type: enclosure
          hw.parent.id: DIR5
          name: "sprintf(\"%s (%s)\", $column(1), $column(4))"
        metrics:
          hw.temperature.limit{limit_type="high.degraded"}: $column(3)
          hw.temperature.limit{limit_type="high.critical"}: $column(2)
    collect:
      # Like all WBEM collects, this one is \"MultiInstance\"
      type: multiInstance
      sources:
        source(1):
          _comment: Source(1) = the IBMPSG_TemperatureSensor WBEM class
          type: wbem
          query: "SELECT CurrentReading,DeviceID FROM IBMPSG_TemperatureSensor"
          namespace: root/ibmsd
      mapping:
        _comment: ValueTable = Source(1)
        source: $monitors.temperature.collect.sources.source(1)$
        deviceId: $column(2)
        metrics:
          hw.temperature: $column(1)
  voltage:
    discovery:
      sources:
        source(1):
          _comment: Source(1) = all the instances of the IBMPSG_VoltageSensor class
          type: wbem
          query: "SELECT DeviceID,LowerThresholdNonCritical,UpperThresholdNonCritical,VoltageType FROM IBMPSG_VoltageSensor"
          namespace: root/ibmsd
          computes:
          - _comment: Translate the voltage type into a more readable string
            type: translate
            column: 4
            translationTable: VoltageTypeTranslationTable
            # Thresholds for voltages are sometimes reported as "0" by the agent.  Replacing these "0" by no value to prevent incorrect thresholds.
            # Add a MSHW_ string to our value and then remove MSHW_0. This should remove a 0 value and only that value
          - type: leftConcat
            column: 2
            value: MSHW_
          - type: leftConcat
            column: 3
            value: MSHW_
          - _comment: Remove 0 value
            type: replace
            column: 2
            existingValue: MSHW_0
            newValue: ""
          - type: replace
            column: 3
            existingValue: MSHW_0
            newValue: ""
          - _comment: Remove MSHW_ for non 0 values
            type: replace
            column: 2
            existingValue: MSHW_
            newValue: ""
          - type: replace
            column: 3
            existingValue: MSHW_
            newValue: ""
      mapping:
        _comment: Here is the instance table = source(1)
        source: $monitors.voltage.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          voltage_type: $column(4)
          hw.parent.type: enclosure
          hw.parent.id: DIR5
          name: "sprintf(\"%s (%s)\", $column(1), $column(4))"
        metrics:
          hw.voltage.limit{limit_type="high.degraded"}: $column(3)
          hw.voltage.limit{limit_type="low.critical"}: $column(2)
    collect:
      _comment: It's a "MultiInstance" collect
      type: multiInstance
      sources:
        source(1):
          _comment: Source(1) = the IBMPSG_VoltageSensor class
          type: wbem
          query: "SELECT CurrentReading,DeviceID FROM IBMPSG_VoltageSensor"
          namespace: root/ibmsd
      mapping:
        _comment: ValueTable = Source(1)
        source: $monitors.voltage.collect.sources.source(1)$
        deviceId: $column(2)
        metrics:
          hw.voltage: $column(1)
  power_supply:
    discovery:
      sources:
        source(1):
          _comment: Source(1) = The IBMPSG_PowerSupply table
          type: wbem
          query: SELECT DeviceID FROM IBMPSG_PowerSupply
          namespace: root/ibmsd
      mapping:
        _comment: 'The instance table:'
        source: $monitors.power_supply.discovery.sources.source(1)$
        attributes:
          id: $column(1)
          hw.parent.type: enclosure
          hw.parent.id: DIR5
          name: "sprintf(\"%s, $column(1))"
    collect:
      # Collect type : multi instance (one source for several instances)
      type: multiInstance
      sources:
        source(1):
          # Source(1) = the simple IBMPSG_PowerSupply table/class
          # DeviceID;WBEMStatus
          type: wbem
          query: "SELECT DeviceID,Status FROM IBMPSG_PowerSupply"
          namespace: root/ibmsd
          computes:
            # Duplicate the status column
            # DeviceID;WBEMStatus;WBEMStatus
          - type: duplicateColumn
            column: 2
            # Translate the first WBEM status column into a PATROL status
            # DeviceID;PatrolStatus;WBEMStatus
          - type: translate
            column: 2
            translationTable: PowerSupplyStatusTranslationTable
            # Translate the second WBEM status column into a PATROL status
            # DeviceID;PatrolStatus;StatusInformation
          - type: translate
            column: 3
            translationTable: PowerSupplyStatusInformationTranslationTable
      mapping:
        _comment: The ValueTable = Source(1)
        source: $monitors.power_supply.collect.sources.source(1)$
        deviceId: $column(1)
        metrics:
          hw.status{hw.type="power_supply"}: $column(2)
        legacyTextParameters:
          StatusInformation: $column(3)
