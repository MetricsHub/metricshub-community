---
connector:
  displayName: Juniper Netscreen (SNMP)
  platforms: Netscreen
  reliesOn: Juniper SNMP Agent (NETSCREEN-CHASSIS-MIB)
  version: 1.0
  information: "This connector discovers the enclosure, fans, power supplies, temperatures, etc. of Juniper Netscreen Network Switches."
  detection:
    connectionTypes:
    - remote
    - local
    appliesTo:
    - Network
    criteria:
    # Check that there are Juniper FRU OIDs
    - type: snmpGetNext
      oid: 1.3.6.1.4.1.3224.21.1
monitors:
  enclosure:
    discovery:
      mapping:
        source: Juniper
        attributes:
          id: Chassis
          __display_id: Switch
          model: Netscreen
          vendor: Juniper
          type: Switch
          name: "${awk::sprintf(\"Switch: %s (%s %s)\", \"Switch\", \"Juniper\", \"Netscreen\")}"
  other_device:
    discovery:
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.3224.21.5.1
          selectColumns: "1,2,4"
          computes:
          - type: leftConcat
            column: 3
            value: "Serial Number: "
      mapping:
        # The InstanceTable
        source: "${source::monitors.other_device.discovery.sources.source(1)}"
        attributes:
          id: $1
          __display_id: $2
          info: $3
          hw.parent.type: enclosure
          hw.parent.id: Chassis
          name: $2
    collect:
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.3224.21.5.1
          selectColumns: "1,3,3"
          computes:
          - type: translate
            column: 2
            translationTable: "${translation::StatusTranslationTable}"
          - type: translate
            column: 3
            translationTable: "${translation::StatusInformationTranslationTable}"
      mapping:
        source: "${source::monitors.other_device.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.status{hw.type="other_device"}: $2
        legacyTextParameters:
          StatusInformation: $3
  power_supply:
    discovery:
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.3224.21.1.1
          selectColumns: "1,3"
          computes:
          - type: leftConcat
            column: 2
            value: 'PSU '
      mapping:
        # Instance Table
        source: "${source::monitors.power_supply.discovery.sources.source(1)}"
        attributes:
          id: $1
          __display_id: $2
          hw.parent.type: enclosure
          hw.parent.id: Chassis
          name: $2
    collect:
      # Collect type = multi-instance
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.3224.21.1.1
          selectColumns: "1,2,2"
          computes:
          - type: translate
            column: 2
            translationTable: "${translation::StatusTranslationTable}"
          - type: translate
            column: 3
            translationTable: "${translation::StatusInformationTranslationTable}"
      mapping:
        # Instance Table
        source: "${source::monitors.power_supply.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.status{hw.type="power_supply"}: $2
        legacyTextParameters:
          StatusInformation: $3
  fan:
    discovery:
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.3224.21.2.1
          selectColumns: "1,3"
      mapping:
        # Instance Table
        source: "${source::monitors.fan.discovery.sources.source(1)}"
        attributes:
          id: $1
          __display_id: $2
          hw.parent.type: enclosure
          hw.parent.id: Chassis
          name: $2
    collect:
      # Collect type = multi-instance
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.3224.21.2.1
          selectColumns: "1,2,2"
          computes:
          - type: translate
            column: 2
            translationTable: "${translation::StatusTranslationTable}"
          - type: translate
            column: 3
            translationTable: "${translation::StatusInformationTranslationTable}"
      mapping:
        # Instance Table
        source: "${source::monitors.fan.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.status{hw.type="fan"}: $2
        legacyTextParameters:
          StatusInformation: $3
  temperature:
    discovery:
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.3224.21.4.1
          selectColumns: "1,4"
      mapping:
        # Instance Table
        source: "${source::monitors.temperature.discovery.sources.source(1)}"
        attributes:
          id: $1
          __display_id: $2
          hw.parent.type: enclosure
          hw.parent.id: Chassis
          name: $2
    collect:
      # Collect type = multi-instance
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          # ID;Status;Description
          type: snmpTable
          oid: 1.3.6.1.4.1.3224.21.4.1
          selectColumns: "1,3"
      mapping:
        # Instance Table
        source: "${source::monitors.temperature.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.temperature: $2
  battery:
    discovery:
      sources:
        source(1):
          type: snmpTable
          oid: 1.3.6.1.4.1.3224.21.3
          selectColumns: ID
      mapping:
        source: "${source::monitors.battery.discovery.sources.source(1)}"
        attributes:
          id: $1
          __display_id: battery
          hw.parent.type: enclosure
          hw.parent.id: Chassis
          name: battery
    collect:
      # Collect
      type: monoInstance
      sources:
        source(1):
          type: snmpGet
          oid: "1.3.6.1.4.1.3224.21.3.${battery::id}"
          computes:
          - type: duplicateColumn
            column: 1
          - type: translate
            column: 1
            translationTable: "${translation::StatusTranslationTable}"
          - type: translate
            column: 2
            translationTable: "${translation::StatusInformationTranslationTable}"
      mapping:
        source: "${source::monitors.battery.collect.sources.source(1)}"
        metrics:
          hw.status{hw.type="battery"}: $1
        legacyTextParameters:
          StatusInformation: $2
translations:
  StatusInformationTranslationTable:
    "0": Failed
    "1": Good
    "2": Error
    Default: Unknown Status
  StatusTranslationTable:
    "0": failed
    "1": ok
    "2": failed
    Default: failed
