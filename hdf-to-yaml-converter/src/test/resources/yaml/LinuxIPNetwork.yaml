---
extends:
- LinuxNetwork-header
constants:
  GLOBAL_COMMAND_LINE: '"/sbin/ip a"'
  COLLECT_COMMAND_LINE: '"/sbin/ip -s link show dev %NetworkCard.Collect.DeviceID%"'
connector:
  displayName: Linux - Network (ip)
  platforms: Any system
  reliesOn: Linux system commands (ip)
  version: 1.0
  information: This connector provides the monitoring of active network cards on all Linux systems using ip command.
  detection:
    connectionTypes:
    - remote
    - local
    appliesTo:
    - Linux
    supersedes:
    - LinuxIfConfigNetwork
embedded:
  EmbeddedFile(1): |-
    BEGIN {
        deviceID = ""
    }
    /^lo[0-9]* / {deviceID = "" }
    # ip a
    $2 ~ /^lo[0-9]*/ {deviceID = "" }
    $2 ~ /^eth[0-9][0-9]*:?|^vmnic[0-9][0-9]*:?|^em[0-9]*:?|^[Pp][0-9][0-9]*[Pp][0-9][0-9]*:?|^en[os][0-9]*:?|^enp[0-9]*s[0-9]*:?/ {
        deviceID = $2 ; gsub(":","",deviceID)
            ports[deviceID]=deviceID
            if ($2 ~ /UP/ || $3 ~ /UP/ ) {portActive[deviceID] = 1}
            }
    $1 ~ /link.ether/ {macAddress[deviceID] = $2}
    / +inet [0-9]+/ {
        ipAddress[deviceID] = $2
        gsub("/.*", "", ipAddress[deviceID])
    }
    (/ UP / ) {portActive[deviceID] = 1}

    END {
    for (deviceID in ports) {
        if (ports[deviceID] != "" && portActive[deviceID] == 1) {
            print "MSHW;" deviceID ";" macAddress[deviceID] ";" ipAddress[deviceID] ";"
        }
        }
    }
  EmbeddedFile(2): |-
    BEGIN {
        transmitPackets = ""
        transmitErrors = ""
        receivePackets = ""
        receiveErrors = ""
        transmitBytes = ""
        receiveBytes = ""
    }
    # ip a
    $2 ~ /^eth[0-9][0-9]*:?|^vmnic[0-9][0-9]*:?|^em[0-9]*:?|^[Pp][0-9][0-9]*[Pp][0-9][0-9]*:?|^en[os][0-9]*:?|^enp[0-9]*s[0-9]*:?/ {
        deviceID = $2 ; gsub(":","",deviceID)
    }
    $1 ~ /RX:/ && $2 ~ /bytes/ && $3 ~ /packets/ {
        getline
        receiveBytes = $1
        receivePackets = $2
        receiveErrors = $3
        }
    $1 ~ /TX:/ && $2 ~ /bytes/ && $3 ~ /packets/ {
        getline
        transmitBytes = $1
        transmitPackets = $2
        transmitErrors = $3
        }

    END {
            print "MSHW;" deviceID ";" receivePackets ";" transmitPackets ";" receiveErrors + transmitErrors ";" receiveBytes ";" transmitBytes
    }
