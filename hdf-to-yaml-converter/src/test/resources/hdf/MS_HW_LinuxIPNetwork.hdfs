//
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//                   MS_HW_LinuxIPNetwork
//
//		Features: monitor the physical active network interfaces on a Linux box using ip command
//      Supports: most Linux distros
//
//
//	Version 1.0 (July 2018): first version

// HEADER

hdf.DisplayName="Linux - Network (ip)"
hdf.TypicalPlatform="Any system"
hdf.ReliesOn="Linux system commands (ip)"
hdf.Version="1.0"
hdf.Comments="This connector provides the monitoring of active network cards on all Linux systems using ip command."
hdf.RemoteSupport="true"
hdf.AppliesToOS="Linux"
hdf.Supersedes="MS_HW_LinuxIfConfigNetwork.hdf"


//
// Includes
//
#include MS_HW_LinuxNetwork.hhdf

//This command will be used of the two sections Detection and Discovery
#define GLOBAL_COMMAND_LINE "/sbin/ip a"

//This command will be used of the Collect section
#define COLLECT_COMMAND_LINE "/sbin/ip -s link show dev %NetworkCard.Collect.DeviceID%"


///////////////////////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E
///
///    EmbeddedFile(1) = AWK script that returns the list of ethernet cards
///                      from the output of the ip a command
///
///////////////////////////////////////////////////////////////////////////
EmbeddedFile(1):
BEGIN {
	deviceID = ""
}
/^lo[0-9]* / {deviceID = "" }
# ip a
$2 ~ /^lo[0-9]*/ {deviceID = "" }
$2 ~ /^eth[0-9][0-9]*:?|^vmnic[0-9][0-9]*:?|^em[0-9]*:?|^[Pp][0-9][0-9]*[Pp][0-9][0-9]*:?|^en[os][0-9]*:?|^enp[0-9]*s[0-9]*:?/ {
	deviceID = $2 ; gsub(":","",deviceID)
        ports[deviceID]=deviceID
        if ($2 ~ /UP/ || $3 ~ /UP/ ) {portActive[deviceID] = 1}
        }
$1 ~ /link.ether/ {macAddress[deviceID] = $2}
/ +inet [0-9]+/ {
	ipAddress[deviceID] = $2
	gsub("/.*", "", ipAddress[deviceID])
}
(/ UP / ) {portActive[deviceID] = 1}

END {
for (deviceID in ports) {
    if (ports[deviceID] != "" && portActive[deviceID] == 1) {
        print "MSHW;" deviceID ";" macAddress[deviceID] ";" ipAddress[deviceID] ";"
	}
    }
}
EmbeddedFile(1).End
///////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(2) = AWK script that extract statistics information from ip
///
///////////////////////////////////////////////////////////////////////////////
EmbeddedFile(2):
BEGIN {
	transmitPackets = ""
	transmitErrors = ""
	receivePackets = ""
	receiveErrors = ""
	transmitBytes = ""
	receiveBytes = ""
}
# ip a
$2 ~ /^eth[0-9][0-9]*:?|^vmnic[0-9][0-9]*:?|^em[0-9]*:?|^[Pp][0-9][0-9]*[Pp][0-9][0-9]*:?|^en[os][0-9]*:?|^enp[0-9]*s[0-9]*:?/ {
	deviceID = $2 ; gsub(":","",deviceID)
}
$1 ~ /RX:/ && $2 ~ /bytes/ && $3 ~ /packets/ {
    getline
    receiveBytes = $1
    receivePackets = $2
    receiveErrors = $3
    }
$1 ~ /TX:/ && $2 ~ /bytes/ && $3 ~ /packets/ {
    getline
    transmitBytes = $1
    transmitPackets = $2
    transmitErrors = $3
    }

END {
		print "MSHW;" deviceID ";" receivePackets ";" transmitPackets ";" receiveErrors + transmitErrors ";" receiveBytes ";" transmitBytes
}
EmbeddedFile(2).End
/////////////////////////////////////////////////////////////////////
