////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//
//      Supports: Synology Storage Systems
//                Connects to a SNMP agent
//
//

//
// Header
//

hdf.DisplayName="Synology Diskstation"
hdf.TypicalPlatform="Synology DiskStation"
hdf.ReliesOn="Synology DiskStation SNMP Agent"
hdf.Comments="This connector monitors the physical components of Synology DiskStation units. It relies on the SNMP Agent of Synology DiskStation Manager (DSM)."
hdf.Version="1.0"
hdf.RemoteSupport="true"
hdf.LocalSupport="false"
hdf.AppliesToOS="Storage"

//
// DETECTION
// Does a get_next to see if there that the Chassis OID is populated.
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.6574.1"

//
// Enclosure
//

// Source(1) = eqlMemberChassisTable SNMP table
// ID;ModelName,serialNumber,Version
Enclosure.Discovery.Source(1).Type="SnmpTable"
Enclosure.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.6574.1.5"
Enclosure.Discovery.Source(1).SnmpTableSelectColumns="ID,1,2,3"

// InstanceTable = Source(1)
// ID;ModelName,serialNumber,Version,upgradeAvailable
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Enclosure.Discovery.Instance.Vendor="Synology"
Enclosure.Discovery.Instance.Model=InstanceTable.Column(2)
Enclosure.Discovery.Instance.SerialNumber=InstanceTable.Column(3)
Enclosure.Discovery.Instance.Type="Storage"


// Collect

// Collect type = multi-instance
Enclosure.Collect.Type="MonoInstance"

// Get the Enclosure Status
// Status;
Enclosure.Collect.Source(1).Type="SnmpGet"
Enclosure.Collect.Source(1).SnmpOid="1.3.6.1.4.1.6574.1.1.%Enclosure.Collect.DeviceID%"


// Duplicate the State
//Status;StatusInfo;
Enclosure.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Enclosure.Collect.Source(1).Compute(1).Column=1

// Translate the first state to a Patrol Status
//Status;StatusInfo;
Enclosure.Collect.Source(1).Compute(2).Type="Translate"
Enclosure.Collect.Source(1).Compute(2).Column=1
Enclosure.Collect.Source(1).Compute(2).TranslationTable="systemStatusTranslationTable"

// Translate the second state to a Status Information
//Status;StatusInfo;
Enclosure.Collect.Source(1).Compute(3).Type="Translate"
Enclosure.Collect.Source(1).Compute(3).Column=2
Enclosure.Collect.Source(1).Compute(3).TranslationTable="systemStatusInformationTranslationTable"

// systemStatusTranslationTable
systemStatusTranslationTable(1)="OK"
systemStatusTranslationTable(2)="ALARM"
systemStatusTranslationTable(Default)="UNKNOWN"

// systemStatusInformationTranslationTable
systemStatusInformationTranslationTable(1)="OK"
systemStatusInformationTranslationTable(2)="ALARM"
systemStatusInformationTranslationTable(Default)="Unknown Status"

// ValueTable = Source(1)
// ID;PatrolStatus;Value;
Enclosure.Collect.ValueTable=%Enclosure.Collect.Source(1)%
Enclosure.Collect.Status=ValueTable.Column(2)
Enclosure.Collect.StatusInformation=ValueTable.Column(3)


//
// FANS
//

//
// Discovery

// Source(1) = Fan Table
// systemFanStatus
Fan.Discovery.Source(1).Type="SnmpGet"
Fan.Discovery.Source(1).SnmpOid="1.3.6.1.4.1.6574.1.4.1.0"

//add the ID and the display name
Fan.Discovery.Source(1).Compute(1).Type="LeftConcat"
Fan.Discovery.Source(1).Compute(1).Column=1
Fan.Discovery.Source(1).Compute(1).String="System;System;"


// Source(2) cpuFanStatus
Fan.Discovery.Source(2).Type="SnmpGet"
Fan.Discovery.Source(2).SnmpOid="1.3.6.1.4.1.6574.1.4.2.0"

//add the ID and the display name
Fan.Discovery.Source(2).Compute(1).Type="LeftConcat"
Fan.Discovery.Source(2).Compute(1).Column=1
Fan.Discovery.Source(2).Compute(1).String="CPU;CPU;"

//table union of source(1) and (2)
Fan.Discovery.Source(3).Type="TableUnion"
Fan.Discovery.Source(3).Table1=%Fan.Discovery.Source(1)%
Fan.Discovery.Source(3).Table2=%Fan.Discovery.Source(2)%


// The discovery table
// // ;ID;Displayname;status
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(3)%
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(2)
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(3)

// Collect
Fan.Collect.Type="MultiInstance"

//collect for systemFAN
Fan.Collect.Source(1).Type="SnmpGet"
Fan.Collect.Source(1).SnmpOid="1.3.6.1.4.1.6574.1.4.1.0"

//add the ID
//ID;status
Fan.Collect.Source(1).Compute(1).Type="LeftConcat"
Fan.Collect.Source(1).Compute(1).Column=1
Fan.Collect.Source(1).Compute(1).String="System;"

// collect for cpuFanStatus
Fan.Collect.Source(2).Type="SnmpGet"
Fan.Collect.Source(2).SnmpOid="1.3.6.1.4.1.6574.1.4.2.0"

//ID;status
Fan.Collect.Source(2).Compute(1).Type="LeftConcat"
Fan.Collect.Source(2).Compute(1).Column=1
Fan.Collect.Source(2).Compute(1).String="CPU;"

//tableunion of source(1) and (2)
Fan.Collect.Source(3).Type="TableUnion"
Fan.Collect.Source(3).Table1=%Fan.Collect.Source(1)%
Fan.Collect.Source(3).Table2=%Fan.Collect.Source(2)%

// ID;status;statusinfo
Fan.Collect.Source(3).Compute(1).Type="DuplicateColumn"
Fan.Collect.Source(3).Compute(1).Column=2

// ID;status;statusinfo
Fan.Collect.Source(3).Compute(2).Type="Translate"
Fan.Collect.Source(3).Compute(2).Column=2
Fan.Collect.Source(3).Compute(2).TranslationTable="systemStatusTranslationTable"

// ID;status;statusinfo
Fan.Collect.Source(3).Compute(3).Type="Translate"
Fan.Collect.Source(3).Compute(3).Column=3
Fan.Collect.Source(3).Compute(3).TranslationTable="systemStatusInformationTranslationTable"

// The Collect table
// ID;status;statusinfo
Fan.Collect.ValueTable=%Fan.Collect.Source(3)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(2)
Fan.Collect.StatusInformation=ValueTable.Column(3)

//
// PowerSupplies
//

//
// Discovery

// Source(1) = Power Supply
// Value 1/2
PowerSupply.Discovery.Source(1).Type="SnmpGet"
PowerSupply.Discovery.Source(1).SnmpOid="1.3.6.1.4.1.6574.1.3.0"


//add the ID and the display name

PowerSupply.Discovery.Source(1).Compute(1).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(1).Column=1
PowerSupply.Discovery.Source(1).Compute(1).String="PsGlobal;Global;"

// The discovery table
// // ID;Displayname;status
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(2)
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(3)

//
// Collect

// Collect type: MonoInstance
PowerSupply.Collect.Type="MonoInstance"

// Source(1) =
// Value
PowerSupply.Collect.Source(1).Type="SnmpGet"
PowerSupply.Collect.Source(1).SnmpOid="1.3.6.1.4.1.6574.1.3.0"

// add the ID
// ID;Status
PowerSupply.Collect.Source(1).Compute(1).Type="LeftConcat"
PowerSupply.Collect.Source(1).Compute(1).Column=1
PowerSupply.Collect.Source(1).Compute(1).String="PsGlobal;"


// Duplicate Status
// ID;Status;StatusInfo
PowerSupply.Collect.Source(1).Compute(2).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(2).Column=2

// Now translate Status
// ID;Status;StatusInfo
PowerSupply.Collect.Source(1).Compute(3).Type="Translate"
PowerSupply.Collect.Source(1).Compute(3).Column=2
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="systemStatusTranslationTable"

// Now translate Statusinfo
// ID;Status;StatusInfo
PowerSupply.Collect.Source(1).Compute(4).Type="Translate"
PowerSupply.Collect.Source(1).Compute(4).Column=3
PowerSupply.Collect.Source(1).Compute(4).TranslationTable="systemStatusInformationTranslationTable"

// The value table
// StatusInfo,Status,Value
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)

//
// PhysicalDisk
//

//
// Discovery

// Source(1) = PhysicalDisk
// DiskID,DiskModel,Disktype
PhysicalDisk.Discovery.Source(1).Type="SnmpTable"
PhysicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.6574.2.1.1"
PhysicalDisk.Discovery.Source(1).SnmpTableSelectColumns="2,3,4"

PhysicalDisk.Discovery.Source(1).Compute(1).Type="LeftConcat"
PhysicalDisk.Discovery.Source(1).Compute(1).Column=3
PhysicalDisk.Discovery.Source(1).Compute(1).String="Disk Type: "

// The discovery table
// DiskID,DiskModel,Disktype,
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(1)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PhysicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(1)
PhysicalDisk.Discovery.Instance.Model=InstanceTable.Column(2)
PhysicalDisk.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(3)

//
// Collect

// Collect type: MultiInstance
PhysicalDisk.Collect.Type="MultiInstance"

// Source(1) =
// DiskID,DiskStatus
PhysicalDisk.Collect.Source(1).Type="SnmpTable"
PhysicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.6574.2.1.1"
PhysicalDisk.Collect.Source(1).SnmpTableSelectColumns="2,5"

// Duplicate Status
// ID;Status;Status
PhysicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PhysicalDisk.Collect.Source(1).Compute(1).Column=2

// Now translate Status
// ID;PATROLStatus;Status;ErrorCount;
PhysicalDisk.Collect.Source(1).Compute(2).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(2).Column=2
PhysicalDisk.Collect.Source(1).Compute(2).TranslationTable="diskStatusTranslationTable"

// Now translate Status Information
// ID;Status;StatusInformation;ErrorCount;
PhysicalDisk.Collect.Source(1).Compute(3).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(3).Column=3
PhysicalDisk.Collect.Source(1).Compute(3).TranslationTable="diskStatusInformationTranslationTable"


// The diskStatusTranslationTable status translation table
diskStatusTranslationTable(1)="OK"
diskStatusTranslationTable(2)="OK"
diskStatusTranslationTable(3)="OK"
diskStatusTranslationTable(4)="ALARM"
diskStatusTranslationTable(5)="ALARM"
diskStatusTranslationTable(Default)="UNKNOWN"


// The diskStatusInformationTranslationTable translation table
diskStatusInformationTranslationTable(1)="Normal"
diskStatusInformationTranslationTable(2)="Initialized"
diskStatusInformationTranslationTable(3)="Not Initialized"
diskStatusInformationTranslationTable(4)="System Partition Failed"
diskStatusInformationTranslationTable(5)="Crashed"
diskStatusInformationTranslationTable(Default)="Unknown Status"

// The value table
// ID;Status;StatusInformation
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(1)
PhysicalDisk.Collect.Status=ValueTable.Column(2)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(3)

//
// LogicalDisk
//

//
// Discovery

// Source(1) = LogicalDisk
// ID;Name
LogicalDisk.Discovery.Source(1).Type="SnmpTable"
LogicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.6574.3.1.1"
LogicalDisk.Discovery.Source(1).SnmpTableSelectColumns="ID,2"

// The discovery table
// ID;Name;
LogicalDisk.Discovery.InstanceTable=%LogicalDisk.Discovery.Source(1)%
LogicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
LogicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(2)

//
// Collect

// Collect type: MultiInstance
LogicalDisk.Collect.Type="MultiInstance"

// Source(1) =
// ID;Status
LogicalDisk.Collect.Source(1).Type="SnmpTable"
LogicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.6574.3.1.1"
LogicalDisk.Collect.Source(1).SnmpTableSelectColumns="ID,3"

// Duplicate Status
// ID;Status;Status
LogicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
LogicalDisk.Collect.Source(1).Compute(1).Column=2

// Now translate Status
// ID;PATROLStatus;Status;
LogicalDisk.Collect.Source(1).Compute(2).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(2).Column=2
LogicalDisk.Collect.Source(1).Compute(2).TranslationTable="logicalDiskStatusTranslationTable"

// Now translate Status Information
// ID;Status;StatusInformation;
LogicalDisk.Collect.Source(1).Compute(3).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(3).Column=3
LogicalDisk.Collect.Source(1).Compute(3).TranslationTable="logicalDiskStatusInformationTranslationTable"

// The logicalDiskStatusTranslationTable status translation table
logicalDiskStatusTranslationTable(1)="OK"
logicalDiskStatusTranslationTable(2)="WARN"
logicalDiskStatusTranslationTable(3)="WARN"
logicalDiskStatusTranslationTable(4)="WARN"
logicalDiskStatusTranslationTable(5)="WARN"
logicalDiskStatusTranslationTable(6)="OK"
logicalDiskStatusTranslationTable(7)="WARN"
logicalDiskStatusTranslationTable(8)="WARN"
logicalDiskStatusTranslationTable(9)="WARN"
logicalDiskStatusTranslationTable(10)="WARN"
logicalDiskStatusTranslationTable(11)="ALARM"
logicalDiskStatusTranslationTable(12)="ALARM"
logicalDiskStatusTranslationTable(Default)="UNKNOWN"

// The logicalDiskStatusInformationTranslationTable translation table
logicalDiskStatusInformationTranslationTable(1)="Normal"
logicalDiskStatusInformationTranslationTable(2)="Repairing"
logicalDiskStatusInformationTranslationTable(3)="Migrating"
logicalDiskStatusInformationTranslationTable(4)="Expanding"
logicalDiskStatusInformationTranslationTable(5)="Deleting"
logicalDiskStatusInformationTranslationTable(6)="Creating"
logicalDiskStatusInformationTranslationTable(7)="RAID Syncing"
logicalDiskStatusInformationTranslationTable(8)="RAID Parity Checking"
logicalDiskStatusInformationTranslationTable(9)="RAID Assembling"
logicalDiskStatusInformationTranslationTable(10)="Cancelling"
logicalDiskStatusInformationTranslationTable(11)="Degraded"
logicalDiskStatusInformationTranslationTable(12)="Crashed"
logicalDiskStatusInformationTranslationTable(Default)="Unknown Status"

// The value table
// ID;Status;StatusInformation;
LogicalDisk.Collect.ValueTable=%LogicalDisk.Collect.Source(1)%
LogicalDisk.Collect.DeviceID=ValueTable.Column(1)
LogicalDisk.Collect.Status=ValueTable.Column(2)
LogicalDisk.Collect.StatusInformation=ValueTable.Column(3)

//
// OtherDevices
//

//
// Discovery

// Source(1) = Fan Table
// systemFanStatus
OtherDevice.Discovery.Source(1).Type="SnmpGet"
OtherDevice.Discovery.Source(1).SnmpOid="1.3.6.1.4.1.6574.1.5.4.0"

// add the ID and the display name
OtherDevice.Discovery.Source(1).Compute(1).Type="LeftConcat"
OtherDevice.Discovery.Source(1).Compute(1).Column=1
OtherDevice.Discovery.Source(1).Compute(1).String="Bios;Bios;"

// The discovery table
// ID;Displayname;status
OtherDevice.Discovery.InstanceTable=%OtherDevice.Discovery.Source(1)%
OtherDevice.Discovery.Instance.DisplayID=InstanceTable.Column(2)
OtherDevice.Discovery.Instance.DeviceID=InstanceTable.Column(1)
OtherDevice.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(3)

//
// Collect

// Collect type: MonoInstance
OtherDevice.Collect.Type="MonoInstance"

// Source(1) =
// Value
OtherDevice.Collect.Source(1).Type="SnmpGet"
OtherDevice.Collect.Source(1).SnmpOid="1.3.6.1.4.1.6574.1.5.4.0"

//add the ID
//ID;Status
OtherDevice.Collect.Source(1).Compute(1).Type="LeftConcat"
OtherDevice.Collect.Source(1).Compute(1).Column=1
OtherDevice.Collect.Source(1).Compute(1).String="Bios;"

// Duplicate Status
// ID;Status;StatusInfo
OtherDevice.Collect.Source(1).Compute(2).Type="DuplicateColumn"
OtherDevice.Collect.Source(1).Compute(2).Column=2

// Now translate Status
// ID;Status;StatusInfo
OtherDevice.Collect.Source(1).Compute(3).Type="Translate"
OtherDevice.Collect.Source(1).Compute(3).Column=2
OtherDevice.Collect.Source(1).Compute(3).TranslationTable="BiosStatusTranslationTable"

// Now translate Statusinfo
// ID;Status;StatusInfo
OtherDevice.Collect.Source(1).Compute(4).Type="Translate"
OtherDevice.Collect.Source(1).Compute(4).Column=3
OtherDevice.Collect.Source(1).Compute(4).TranslationTable="BiosStatusInformationTranslationTable"

// The Bios status translation table
BiosStatusTranslationTable(1)="WARN"
BiosStatusTranslationTable(Default)="OK"

// The Bios upgrade status info translation table
BiosStatusInformationTranslationTable(1)="Requires Upgrade"

// The value table
// StatusInfo,Status,Value
OtherDevice.Collect.ValueTable=%OtherDevice.Collect.Source(1)%
OtherDevice.Collect.DeviceID=ValueTable.Column(1)
OtherDevice.Collect.Status=ValueTable.Column(2)
OtherDevice.Collect.StatusInformation=ValueTable.Column(3)

//
// Temperatures
//

//
// Discovery

// Source(1) = General System MIB (hard coded)
// DeviceID;Location;WarningThreshold;AlarmThreshold;
Temperature.Discovery.Source(1)="CPU;CPU;80;90;"

// Source(2) = PhysicalDisk (which contains temperature info)
// DeviceID;Temperature;
Temperature.Discovery.Source(2).Type="SnmpTable"
Temperature.Discovery.Source(2).SnmpTableOid="1.3.6.1.4.1.6574.2.1.1"
Temperature.Discovery.Source(2).SnmpTableSelectColumns="2,6"

// Filter out empty values
// DeviceID;Temperature;
Temperature.Discovery.Source(2).Compute(1).Type=KeepOnlyMatchingLines
Temperature.Discovery.Source(2).Compute(1).Column=2
Temperature.Discovery.Source(2).Compute(1).RegExp="[0-9]"

// Keep only the DeviceID
// DeviceID;
Temperature.Discovery.Source(2).Compute(2).Type=KeepColumns
Temperature.Discovery.Source(2).Compute(2).ColumnNumbers="1"

// Duplicate DeviceID so it's seen as Location
// DeviceID;Location;
Temperature.Discovery.Source(2).Compute(3).Type=DuplicateColumn
Temperature.Discovery.Source(2).Compute(3).Column=1

// Add a hardcoded alarm threshold for disk temperature sensors
// DeviceID;Location;WarningThreshold;AlarmThreshold;
Temperature.Discovery.Source(2).Compute(4).Type="RightConcat"
Temperature.Discovery.Source(2).Compute(4).Column=2
Temperature.Discovery.Source(2).Compute(4).String=";41;50"

// Source(3) = union of Source(1) and Source(2)
// DeviceID;Location;WarningThreshold;AlarmThreshold;
Temperature.Discovery.Source(3).Type=TableUnion
Temperature.Discovery.Source(3).Table1=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Source(3).Table2=%Temperature.Discovery.Source(2)%

// InstanceTable
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(3)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Temperature.Discovery.Instance.DisplayID=InstanceTable.Column(2)
Temperature.Discovery.Instance.WarningThreshold=InstanceTable.Column(3)
Temperature.Discovery.Instance.AlarmThreshold=InstanceTable.Column(4)

//
// Collect

Temperature.Collect.Type="MultiInstance"

// Source(1) = 1.3.6.1.4.1.6574.1.2.0
// Temperature;
Temperature.Collect.Source(1).Type=SnmpGet
Temperature.Collect.Source(1).SnmpOid="1.3.6.1.4.1.6574.1.2.0"

// Add "CPU" as the ID of this sensor
// DeviceID;Temperature;
Temperature.Collect.Source(1).Compute(1).Type=LeftConcat
Temperature.Collect.Source(1).Compute(1).Column=1
Temperature.Collect.Source(1).Compute(1).String="CPU;"

// Source(2) = Disk MIB
// DeviceID;Temperature;
Temperature.Collect.Source(2).Type=SnmpTable
Temperature.Collect.Source(2).SnmpTableOid="1.3.6.1.4.1.6574.2.1.1"
Temperature.Collect.Source(2).SnmpTableSelectColumns="2,6"

// Source(3) = Union of Source(1) and Source(2)
Temperature.Collect.Source(3).Type=TableUnion
Temperature.Collect.Source(3).Table1=%Temperature.Collect.Source(1)%
Temperature.Collect.Source(3).Table2=%Temperature.Collect.Source(2)%

// ValueTable = Source(3)
// DeviceID;Temperature;
Temperature.Collect.ValueTable=%Temperature.Collect.Source(3)%
Temperature.Collect.DeviceID=ValueTable.Column(1)
Temperature.Collect.Temperature=ValueTable.Column(2)
