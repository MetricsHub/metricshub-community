//
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//                   MS_HW_FujitsuSiemensBlade.hdf
//
//      Supports: Fujitsu-Siemens Management Blade
//
//

// HEADER

hdf.DisplayName="Fujitsu-Siemens Management Blade (FSC BX Blade Servers)"
hdf.TypicalPlatform="Fujitsu-Siemens BX Blade"
hdf.ReliesOn="Fujitsu-Siemens Management Blade"
hdf.Version="1.0"
hdf.Comments="This connector provides hardware monitoring through the Fujitsu-Siemens Management Blade SNMP Agent which supports the Fujitsu-Siemens Blade servers (BX300, BX600, etc.). Needs to run remotely."
hdf.RemoteSupport="true"
hdf.LocalSupport="false"
hdf.AppliesToOS="OOB"

// DETECTION

Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGet="1.3.6.1.4.1.7244.1.1.1.1.12.1.0"
Detection.Criteria(1).ExpectedResult="3"

// ENCLOSURE

// Get the model name of the blade server
Enclosure.Discovery.Source(1).Type="SnmpGet"
Enclosure.Discovery.Source(1).SnmpOid="1.3.6.1.4.1.7244.1.1.1.3.1.6.0"

Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Instance.DeviceID="FSCBlade"
Enclosure.Discovery.Instance.Vendor="Fujitsu-Siemens"
Enclosure.Discovery.Instance.Model=InstanceTable.Column(1)
Enclosure.Discovery.Instance.Type="Blade"


// TEMPERATURES


// Temperature discovery

// Source(1) = s31SysTemperatureSensorTable
// ID;Status;Designation;WarningThreshold;CriticalThreshold
Temperature.Discovery.Source(1).Type="SnmpTable"
Temperature.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.7244.1.1.1.3.4.1.1"
Temperature.Discovery.Source(1).SnmpTableSelectColumns="ID,2,3,4,5"
Temperature.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Temperature.Discovery.Source(1).Compute(1).Column="2"
Temperature.Discovery.Source(1).Compute(1).ValueList="3,4,5,6"

// InstanceTable = Source(1)
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Temperature.Discovery.Instance.TemperatureType=InstanceTable.Column(3)
Temperature.Discovery.Instance.WarningThreshold=InstanceTable.Column(4)
Temperature.Discovery.Instance.AlarmThreshold=InstanceTable.Column(5)
Temperature.Discovery.Instance.AttachedToDeviceID="FSCBlade"
Temperature.Discovery.Instance.AttachedToDeviceType="Computer"

// Temperature collect

Temperature.Collect.Type="MonoInstance"
Temperature.Collect.Source(1).Type="SnmpGet"
Temperature.Collect.Source(1).SnmpOid="1.3.6.1.4.1.7244.1.1.1.3.4.1.1.6.%Temperature.Collect.DeviceID%"
Temperature.Collect.ValueTable=%Temperature.Collect.Source(1)%
Temperature.Collect.Temperature=ValueTable.Column(1)

// FANS

// Fan discovery

// Source(1) = s31SysFanTable
// ID;Status;Designation
Fan.Discovery.Source(1).Type="SnmpTable"
Fan.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.7244.1.1.1.3.3.1.1"
Fan.Discovery.Source(1).SnmpTableSelectColumns="ID,2,3"

Fan.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Fan.Discovery.Source(1).Compute(1).Column="2"
Fan.Discovery.Source(1).Compute(1).ValueList="2,3,4,5,6"

Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.FanType=InstanceTable.Column(3)
Fan.Discovery.Instance.AttachedToDeviceID="FSCBlade"
Fan.Discovery.Instance.AttachedToDeviceType="Computer"

// Fan collect

// Source(1) = same SNMP table as in discovery
// DeviceID;Status;Speed
Fan.Collect.Type="MultiInstance"
Fan.Collect.Source(1).Type="SnmpTable"
Fan.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.7244.1.1.1.3.3.1.1"
Fan.Collect.Source(1).SnmpTableSelectColumns="ID,2,4"

// Duplicate the status column
Fan.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Fan.Collect.Source(1).Compute(1).Column="2"

// Translate the SNMP status into a PATROL status
Fan.Collect.Source(1).Compute(2).Type="Translate"
Fan.Collect.Source(1).Compute(2).Column="2"
Fan.Collect.Source(1).Compute(2).TranslationTable="FanStatusTranslationTable"

// Translate the second status column into a more readable string
Fan.Collect.Source(1).Compute(3).Type="Translate"
Fan.Collect.Source(1).Compute(3).Column="3"
Fan.Collect.Source(1).Compute(3).TranslationTable="FanStatusInformationTranslationTable"

// ValueTable = Source(1)
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(2)
Fan.Collect.StatusInformation=ValueTable.Column(3)
Fan.Collect.Speed=ValueTable.Column(4)

// The FanStatusTranslationTable
FanStatusTranslationTable(2)="OK"
FanStatusTranslationTable(3)="OK"
FanStatusTranslationTable(4)="ALARM"
FanStatusTranslationTable(5)="WARN"
FanStatusTranslationTable(6)="WARN"
FanStatusTranslationTable(Default)="UNKNOWN"

// The FanStatusInformationTranslationTable
FanStatusInformationTranslationTable(2)="Disabled"
FanStatusInformationTranslationTable(3)=""
FanStatusInformationTranslationTable(4)="Failed!"
FanStatusInformationTranslationTable(5)="Failure predicted"
FanStatusInformationTranslationTable(6)="Redundanct fan failed"
FanStatusInformationTranslationTable(Default)="Unknown Status"


// VOLTAGES

// No voltage

// POWER SUPPLIES

// Power Supply discovery
PowerSupply.Discovery.Source(1).Type="SnmpTable"
PowerSupply.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.7244.1.1.1.3.2.4.1"
PowerSupply.Discovery.Source(1).SnmpTableSelectColumns="ID,2,3,4"

PowerSupply.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
PowerSupply.Discovery.Source(1).Compute(1).Column="2"
PowerSupply.Discovery.Source(1).Compute(1).ValueList="2,4,5,6"

PowerSupply.Discovery.Source(1).Compute(2).Type="RightConcat"
PowerSupply.Discovery.Source(1).Compute(2).Column="3"
PowerSupply.Discovery.Source(1).Compute(2).String=" "

PowerSupply.Discovery.Source(1).Compute(3).Type="RightConcat"
PowerSupply.Discovery.Source(1).Compute(3).Column="3"
PowerSupply.Discovery.Source(1).Compute(3).String=Column(4)

PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.PowerSupplyType=InstanceTable.Column(3)
PowerSupply.Discovery.Instance.AttachedToDeviceID="FSCBlade"
PowerSupply.Discovery.Instance.AttachedToDeviceType="Computer"

// Power Supply collect
PowerSupply.Collect.Type="MonoInstance"
PowerSupply.Collect.Source(1).Type="SnmpGet"
PowerSupply.Collect.Source(1).SnmpOid="1.3.6.1.4.1.7244.1.1.1.3.2.4.1.2.%PowerSupply.Collect.DeviceID%"

PowerSupply.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(1).Column="1"

PowerSupply.Collect.Source(1).Compute(2).Type="Translate"
PowerSupply.Collect.Source(1).Compute(2).Column="1"
PowerSupply.Collect.Source(1).Compute(2).TranslationTable="PowerSupplyStatusTranslationTable"

PowerSupply.Collect.Source(1).Compute(3).Type="Translate"
PowerSupply.Collect.Source(1).Compute(3).Column="2"
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="PowerSupplyStatusInformationTranslationTable"

PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.Status=ValueTable.Column(1)
PowerSupply.Collect.StatusInformation=ValueTable.Column(2)

PowerSupplyStatusTranslationTable(2)="OK"
PowerSupplyStatusTranslationTable(4)="ALARM"
PowerSupplyStatusTranslationTable(5)="ALARM"
PowerSupplyStatusTranslationTable(6)="OK"
PowerSupplyStatusTranslationTable(Default)="UNKNOWN"

PowerSupplyStatusInformationTranslationTable(2)=""
PowerSupplyStatusInformationTranslationTable(4)="Error"
PowerSupplyStatusInformationTranslationTable(5)="Critical"
PowerSupplyStatusInformationTranslationTable(6)="Off"
PowerSupplyStatusInformationTranslationTable(Default)="Unknown Status"

//
// blades themselves
//

//
// Discovery

// Source(1) = SNMP s31SrvBladeTable
// ID;Status;Manufacturer;Model
Blade.Discovery.Source(1).Type="SnmpTable"
Blade.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.7244.1.1.1.4.2.1.1"
Blade.Discovery.Source(1).SnmpTableSelectColumns="ID,2,3,6"

// Keep only present blades
Blade.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Blade.Discovery.Source(1).Compute(1).Column="2"
Blade.Discovery.Source(1).Compute(1).ValueList="2,4,5,6"

// adds " " to the Manufacturer column
Blade.Discovery.Source(1).Compute(2).Type="RightConcat"
Blade.Discovery.Source(1).Compute(2).Column="3"
Blade.Discovery.Source(1).Compute(2).String=" "

// adds the model column to the Manufacturer column
Blade.Discovery.Source(1).Compute(3).Type="RightConcat"
Blade.Discovery.Source(1).Compute(3).Column="3"
Blade.Discovery.Source(1).Compute(3).String=Column(4)

// InstanceTable = Source(1)
Blade.Discovery.InstanceTable=%Blade.Discovery.Source(1)%
Blade.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Blade.Discovery.Instance.BladeModel=InstanceTable.Column(3)
Blade.Discovery.Instance.AttachedToDeviceID="FSCBlade"
Blade.Discovery.Instance.AttachedToDeviceType="Computer"

//
// Collect

// Collect type is "mono-instance" (one collect for each instance)
Blade.Collect.Type="MonoInstance"

// Source(1) = SNMP Get of the s31SrvBladeStatus of the SNMP s31SrvBladeTable table
// Status;
Blade.Collect.Source(1).Type="SnmpGet"
Blade.Collect.Source(1).SnmpOid="1.3.6.1.4.1.7244.1.1.1.4.2.1.1.2.%Blade.Collect.DeviceID%"

// Duplicate the status column
// Status;Status
Blade.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Blade.Collect.Source(1).Compute(1).Column="1"

// Translate the first status column into a PATROL Status
// PATROLStatus;Status
Blade.Collect.Source(1).Compute(2).Type="Translate"
Blade.Collect.Source(1).Compute(2).Column="1"
Blade.Collect.Source(1).Compute(2).TranslationTable="BladeStatusTranslationTable"

// Translate the second status column into a more readable string
// PATROLStatus;StatusInformation
Blade.Collect.Source(1).Compute(3).Type="Translate"
Blade.Collect.Source(1).Compute(3).Column="2"
Blade.Collect.Source(1).Compute(3).TranslationTable="BladeStatusInformationTranslationTable"

// The BladeStatusTranslationTable
BladeStatusTranslationTable(2)="OK"
BladeStatusTranslationTable(4)="ALARM"
BladeStatusTranslationTable(5)="ALARM"
BladeStatusTranslationTable(6)="OK"
BladeStatusTranslationTable(Default)="UNKNOWN"

// The BladeStatusInformationTranslationTable
BladeStatusInformationTranslationTable(2)=""
BladeStatusInformationTranslationTable(4)="Error"
BladeStatusInformationTranslationTable(5)="Critical"
BladeStatusInformationTranslationTable(6)="Standby"
BladeStatusInformationTranslationTable(Default)="Unknown"

// ValueTable = Source(1)
Blade.Collect.ValueTable=%Blade.Collect.Source(1)%
Blade.Collect.Status=ValueTable.Column(1)
Blade.Collect.StatusInformation=ValueTable.Column(2)

