//
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//                   MS_HW_CpMgSm2
//
//      Supports: HP Insight Manager (Server Agent)
//
//

//
// HEADER
//

hdf.DisplayName="HP Insight Management Agent - iLO"
hdf.TypicalPlatform="HP ProLiant"
hdf.ReliesOn="HP Insight Management Agents"
hdf.Version="1.0"
hdf.Comments="This connector provides hardware monitoring of the HP iLO card in HP ProLiant servers through the HP Insight Manager (Server Agent) which supports almost all HP ProLiant and Integrity servers under Windows and Linux, as well as Tru64 servers."
hdf.RemoteSupport="true"
hdf.AppliesToOS="NT,Linux,VMS,OSF1,OOB,Solaris"



//
// DETECTION
//

// Check whether we have something in the CpqSm2 MIB
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.232.9.2.2.17"



//
// OTHER DEVICES (iLO card)
//

//
// Discovery

// Source(1) = the cpqSm2Cntlr quasi-SNMP table
// ID;ModelCode
OtherDevice.Discovery.Source(1).Type="SnmpTable"
OtherDevice.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.232.9.2.2"
OtherDevice.Discovery.Source(1).SnmpTableSelectColumns="ID,21"

// Translate modelCode into model string
// ID;Model
OtherDevice.Discovery.Source(1).Compute(1).Type="Translate"
OtherDevice.Discovery.Source(1).Compute(1).Column="2"
OtherDevice.Discovery.Source(1).Compute(1).TranslationTable="iLoModelTranslationTable"

// The iLoModelTranslationTable
iLoModelTranslationTable(2)="EISA Remote Insight"
iLoModelTranslationTable(3)="PCI Remote Insight"
iLoModelTranslationTable(4)="Remote Insight Lights-Out"
iLoModelTranslationTable(5)="Integrated Remote Insight Lights-Out"
iLoModelTranslationTable(6)="Remote Insight Lights-Out version II"
iLoModelTranslationTable(Default)="Unknown Remote/Integrated Insight Lights-Out"

// Instance Table
OtherDevice.Discovery.InstanceTable=%OtherDevice.Discovery.Source(1)%
OtherDevice.Discovery.Instance.DeviceID=InstanceTable.Column(1)
OtherDevice.Discovery.Instance.DeviceType="Management Card"
OtherDevice.Discovery.Instance.AdditionalLabel=InstanceTable.Column(2)


//
// Collect

// Collect is multi-instance (all instances in one shot)
OtherDevice.Collect.Type="MultiInstance"

// Source(1) = the cpqSm2Cntlr quasi-SNMP table
// ID;Status
OtherDevice.Collect.Source(1).Type="SnmpTable"
OtherDevice.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.232.9.2.2"
OtherDevice.Collect.Source(1).SnmpTableSelectColumns="ID,17"

// Duplicate the status column
// ID;Status;Status
OtherDevice.Collect.Source(1).Compute(1).Type="DuplicateColumn"
OtherDevice.Collect.Source(1).Compute(1).Column="2"

// Translate Status into PATROLStatus
// ID;PATROLStatus;Status
OtherDevice.Collect.Source(1).Compute(2).Type="Translate"
OtherDevice.Collect.Source(1).Compute(2).Column="2"
OtherDevice.Collect.Source(1).Compute(2).TranslationTable="iLoStatusTranslationTable"

// The iLoStatusTranslationTable
iLoStatusTranslationTable(2)="OK"
iLoStatusTranslationTable(3)="WARN"
iLoStatusTranslationTable(Default)="UNKNOWN"

// Translate second Status into more readable string
// ID;PATROLStatus;StatusInformation;PredictsFailure
OtherDevice.Collect.Source(1).Compute(3).Type="Translate"
OtherDevice.Collect.Source(1).Compute(3).Column="3"
OtherDevice.Collect.Source(1).Compute(3).TranslationTable="iLoStatusInformationTranslationTable"

// The iLoStatusInformationTranslationTable
iLoStatusInformationTranslationTable(2)=""
iLoStatusInformationTranslationTable(3)="Not Responding"
iLoStatusInformationTranslationTable(Default)="Unknown Status"

// ValueTable = Source(1)
OtherDevice.Collect.ValueTable=%OtherDevice.Collect.Source(1)%
OtherDevice.Collect.DeviceID=ValueTable.Column(1)
OtherDevice.Collect.Status=ValueTable.Column(2)
OtherDevice.Collect.StatusInformation=ValueTable.Column(3)


//
// NETWORK CARDS (of the iLO management card)
//

//
// Discovery

// Source(1) = the cpqSm2NicConfig SNMP table
// ID;Model;MacAddress;ipAddress;Enabled;Speed
NetworkCard.Discovery.Source(1).Type="SnmpTable"
NetworkCard.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.232.9.2.5.1.1"
NetworkCard.Discovery.Source(1).SnmpTableSelectColumns="ID,2,4,5,7,9"

// Filter out disabled network cards
// ID;Model;MacAddress;ipAddress;Enabled;Speed
NetworkCard.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
NetworkCard.Discovery.Source(1).Compute(1).Column="5"
NetworkCard.Discovery.Source(1).Compute(1).ValueList="3"

// Add "Management Card - " to the model, so that the user doesn't get confused
// between the "real" NICs and the one here used only for the management
// ID;Model;MacAddress;ipAddress;Enabled;Speed
NetworkCard.Discovery.Source(1).Compute(2).Type="LeftConcat"
NetworkCard.Discovery.Source(1).Compute(2).Column="2"
NetworkCard.Discovery.Source(1).Compute(2).String="Management Card - "

// InstanceTable = Source(1)
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(1)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(1)
NetworkCard.Discovery.Instance.Model=InstanceTable.Column(2)
NetworkCard.Discovery.Instance.PhysicalAddress=InstanceTable.Column(3)
NetworkCard.Discovery.Instance.PhysicalAddressType="MAC"
NetworkCard.Discovery.Instance.LogicalAddress=InstanceTable.Column(4)
NetworkCard.Discovery.Instance.LogicalAddressType="IP"
NetworkCard.Discovery.Instance.BandWidth=InstanceTable.Column(6)

//
// Collect

// Collect type is "multi-instance"
NetworkCard.Collect.Type="MultiInstance"

// Source(1) = the cpqSm2NicConfig SNMP table
// ID;Condition
NetworkCard.Collect.Source(1).Type="SnmpTable"
NetworkCard.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.232.9.2.5.1.1"
NetworkCard.Collect.Source(1).SnmpTableSelectColumns="ID,11"

// Duplicate Condition
// ID;Condition;Condition
NetworkCard.Collect.Source(1).Compute(1).Type="DuplicateColumn"
NetworkCard.Collect.Source(1).Compute(1).Column="2"

// Translate first Condition into PATROLStatus
// ID;PATROLStatus;Condition
NetworkCard.Collect.Source(1).Compute(2).Type="Translate"
NetworkCard.Collect.Source(1).Compute(2).Column="2"
NetworkCard.Collect.Source(1).Compute(2).TranslationTable="NetworkCardStatusTranslationTable"

// The NetworkCardStatusTranslationTable
NetworkCardStatusTranslationTable(2)="OK"
NetworkCardStatusTranslationTable(3)="WARN"
NetworkCardStatusTranslationTable(4)="ALARM"
NetworkCardStatusTranslationTable(Default)="UNKNOWN"

// Translate second Condition into a more readable string
// ID;PATROLStatus;statusInformation
NetworkCard.Collect.Source(1).Compute(3).Type="Translate"
NetworkCard.Collect.Source(1).Compute(3).Column="3"
NetworkCard.Collect.Source(1).Compute(3).TranslationTable="NetworkCardStatusInformationTranslationTable"

// The NetworkCardStatusInformationTranslationTable
NetworkCardStatusInformationTranslationTable(2)=""
NetworkCardStatusInformationTranslationTable(3)="Degraded"
NetworkCardStatusInformationTranslationTable(4)="Failed"
NetworkCardStatusInformationTranslationTable(Default)="Unknown Status"

// ValueTable = Source(1)
NetworkCard.Collect.ValueTable=%NetworkCard.Collect.Source(1)%
NetworkCard.Collect.DeviceID=ValueTable.Column(1)
NetworkCard.Collect.Status=ValueTable.Column(2)
NetworkCard.Collect.StatusInformation=ValueTable.Column(3)
