//
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//                   MS_ServerviewWBEM
//
//      Supports: Fujitsu-Siemens Serverview
//
//

// HEADER

hdf.DisplayName="Fujitsu-Siemens Serverview (WBEM)"
hdf.TypicalPlatform="Fujitsu-Siemens PRIMERGY"
hdf.ReliesOn="Fujitsu-Siemens Serverview WBEM Agent"
hdf.Version="1.2"
hdf.Comments="This connector provides hardware monitoring through the Fujitsu-Siemens Serverview WBEM Agent (ESX) which supports almost all Fujitsu-Siemens PRIMERGY servers."
hdf.RemoteSupport="true"
hdf.AppliesToOS="Linux,OOB"
hdf.Supersedes="MS_HW_IpmiTool.hdf,MS_HW_VMwareESX4i.hdf,MS_HW_VMwareESXi.hdf,MS_HW_VMwareESXiDisksIPMI.hdf,MS_HW_VMwareESXiDisksStorage.hdf"

// Include
#include MS_HW_CIMProcessorFamily.hhdf

// OS must be Linux or ESX
Detection.Criteria(1).Type="OS"
Detection.Criteria(1).KeepOnly="Linux,OOB"

// The HP_ComputerSystemChassis WBEM class must be instanciated
Detection.Criteria(2).Type="WBEM"
Detection.Criteria(2).WbemQuery="SELECT Caption FROM SVS_PGYComputerSystem"
Detection.Criteria(2).WbemNameSpace="root/SVS"
Detection.Criteria(2).ErrorMessage="The Fujitsu Agent seems to not be not accessible or not working properly. Please check connectivity installation of the Fujitsu Agent."

//
// Enclosure: computer
//

//
// Discovery

// Source(1) = the IBMPSG_ComputerSystemDetails WBEM class
Enclosure.Discovery.Source(1).Type="WBEM"
Enclosure.Discovery.Source(1).WbemQuery="SELECT Manufacturer,Model,SerialNumber FROM SVS_PGYChassis"
Enclosure.Discovery.Source(1).WbemNameSpace="root/SVS"

// InstanceTable = Source(1)
//  Manufacturer,Model,SerialNumber
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Instance.DeviceID="FujitsuServer"
Enclosure.Discovery.Instance.DisplayID="FujitsuServer"
Enclosure.Discovery.Instance.Vendor=InstanceTable.Column(1)
Enclosure.Discovery.Instance.Model=InstanceTable.Column(2)
Enclosure.Discovery.Instance.SerialNumber=InstanceTable.Column(3)
Enclosure.Discovery.Instance.Type="Computer"

//
// CPUs
//

//
// Discovery
// Source 1 = HP_Processor Class
cpu.Discovery.Source(1).Type="WBEM"
cpu.Discovery.Source(1).WbemQuery="SELECT CurrentClockSpeed,DeviceID,Family,Description FROM SVS_PGYProcessor"
cpu.Discovery.Source(1).WbemNameSpace="root/SVS"

// Copy Family number to translate vendor as well
// CurrentClockSpeed,DeviceID,Family,Family,Description
cpu.Discovery.Source(1).Compute(1).Type="DuplicateColumn"
cpu.Discovery.Source(1).Compute(1).Column=3

// Translate the Family number into a vendor
// CurrentClockSpeed,DeviceID,Vendor,Family,Description
cpu.Discovery.Source(1).Compute(2).Type="Translate"
cpu.Discovery.Source(1).Compute(2).Column=3
cpu.Discovery.Source(1).Compute(2).TranslationTable="cpuVendorTranslationTable"

// Translate the Family number into a model name
// CurrentClockSpeed,DeviceID,Vendor,Model,Description
cpu.Discovery.Source(1).Compute(3).Type="Translate"
cpu.Discovery.Source(1).Compute(3).Column=4
cpu.Discovery.Source(1).Compute(3).TranslationTable="cpuFamilyTranslationTable"


// InstanceTable = Source(1)
// CurrentClockSpeed,DeviceID,Vendor,Model,Description
cpu.Discovery.InstanceTable=%cpu.Discovery.Source(1)%
cpu.Discovery.Instance.DeviceID=InstanceTable.Column(2)
cpu.Discovery.Instance.DisplayID=InstanceTable.Column(2)
cpu.Discovery.Instance.Model=InstanceTable.Column(4)
cpu.Discovery.Instance.Vendor=InstanceTable.Column(3)
cpu.Discovery.Instance.MaximumSpeed=InstanceTable.Column(1)
cpu.Discovery.Instance.AttachedToDeviceID="FujitsuServer"
cpu.Discovery.Instance.AttachedToDeviceType="Computer"


//
// Collect

cpu.Collect.Type="MultiInstance"

// Source(1) = The Processor WBEM class
// CurrentClockSpeed,DeviceID,OperationalStatus
cpu.Collect.Source(1).Type="WBEM"
cpu.Collect.Source(1).WbemQuery="SELECT CurrentClockSpeed,DeviceID,OperationalStatus FROM SVS_PGYProcessor"
cpu.Collect.Source(1).WbemNameSpace="root/SVS"

// Duplicate the "OperationalStatusArray" column
// CurrentClockSpeed,DeviceID,OperationalStatus,OperationalStatus
cpu.Collect.Source(1).Compute(1).Type="DuplicateColumn"
cpu.Collect.Source(1).Compute(1).Column=3

// Then we translate DMTF's OperationStatus code into OK/WARN/ALARM (for the Status parameter)
// CurrentClockSpeed,DeviceID,PATROLStatusArray,OperationalStatus
cpu.Collect.Source(1).Compute(2).Type="ArrayTranslate"
cpu.Collect.Source(1).Compute(2).Column=3
cpu.Collect.Source(1).Compute(2).TranslationTable="DMTFOperationStatusTranslationTable"

// And finally, we translate DMTF's OperationalStatus code into a more readable status string
// CurrentClockSpeed,DeviceID,PATROLStatusArray,StatusInformation
cpu.Collect.Source(1).Compute(3).Type="ArrayTranslate"
cpu.Collect.Source(1).Compute(3).Column=4
cpu.Collect.Source(1).Compute(3).TranslationTable="DMTFOperationStatusInformationTranslationTable"
cpu.Collect.Source(1).Compute(3).ResultSeparator=" - "

// Convert PATROLStatusArray to a simple (unique) PATROLStatus
// CurrentClockSpeed,DeviceID,PATROLStatus,StatusInformation
cpu.Collect.Source(1).Compute(4).Type="Convert"
cpu.Collect.Source(1).Compute(4).Column=3
cpu.Collect.Source(1).Compute(4).ConversionType="Array2SimpleStatus"

// Value Table
// CurrentClockSpeed,DeviceID,PATROLStatus,StatusInformation
cpu.Collect.ValueTable=%cpu.Collect.Source(1)%
cpu.Collect.DeviceID=ValueTable.Column(2)
cpu.Collect.CurrentSpeed=ValueTable.Column(1)
cpu.Collect.Status=ValueTable.Column(3)
cpu.Collect.StatusInformation=ValueTable.Column(4)


//
// Memory
//

//
// Discovery

// Source(1) SVS_PGYPhysicalMemory
Memory.Discovery.Source(1).Type="WBEM"
Memory.Discovery.Source(1).WbemQuery="SELECT Capacity,MemoryType,ElementName,SerialNumber,PartNumber,Manufacturer FROM SVS_PGYPhysicalMemory"
Memory.Discovery.Source(1).WbemNameSpace="root/SVS"

// Convert size to MB
// Capacity,MemoryType,ElementName,SerialNumber,PartNumber,Manufacturer
Memory.Discovery.Source(1).Compute(1).Type="Divide"
Memory.Discovery.Source(1).Compute(1).Column=1
Memory.Discovery.Source(1).Compute(1).DivideBy="1024"

// Translate memory type
// Capacity,MemoryType,ElementName,SerialNumber,PartNumber,Manufacturer
Memory.Discovery.Source(1).Compute(2).Type="Translate"
Memory.Discovery.Source(1).Compute(2).Column=2
Memory.Discovery.Source(1).Compute(2).TranslationTable="memoryTypeTranslationTable"

// InstanceTable = Source(1)
// Capacity,MemoryType,ElementName,SerialNumber,PartNumber,Manufacturer
Memory.Discovery.InstanceTable=%Memory.Discovery.Source(1)%
Memory.Discovery.Instance.DeviceID=InstanceTable.Column(3)
Memory.Discovery.Instance.DisplayID=InstanceTable.Column(3)
Memory.Discovery.Instance.Size=InstanceTable.Column(1)
Memory.Discovery.Instance.SerialNumber=InstanceTable.Column(4)
Memory.Discovery.Instance.Vendor=InstanceTable.Column(6)
Memory.Discovery.Instance.Model=InstanceTable.Column(5)
Memory.Discovery.Instance.Type=InstanceTable.Column(2)
Memory.Discovery.Instance.AttachedToDeviceID="FujitsuServer"
Memory.Discovery.Instance.AttachedToDeviceType="Computer"

// The memoryTypeTranslationTable
memoryTypeTranslationTable(0)="Unknown Memory Type"
memoryTypeTranslationTable(1)="Unknown Memory Type"
memoryTypeTranslationTable(2)="DRAM"
memoryTypeTranslationTable(3)="Synchronous DRAM"
memoryTypeTranslationTable(4)="Cache DRAM"
memoryTypeTranslationTable(5)="EDO"
memoryTypeTranslationTable(6)="EDRAM"
memoryTypeTranslationTable(7)="VRAM"
memoryTypeTranslationTable(8)="SRAM"
memoryTypeTranslationTable(9)="RAM"
memoryTypeTranslationTable(10)="ROM"
memoryTypeTranslationTable(11)="Flash"
memoryTypeTranslationTable(12)="EEPROM"
memoryTypeTranslationTable(13)="FEPROM"
memoryTypeTranslationTable(14)="EPROM"
memoryTypeTranslationTable(15)="CDRAM"
memoryTypeTranslationTable(16)="3DRAM"
memoryTypeTranslationTable(17)="SDRAM"
memoryTypeTranslationTable(18)="SGRAM"
memoryTypeTranslationTable(19)="RDRAM"
memoryTypeTranslationTable(20)="DDR"
memoryTypeTranslationTable(21)="DDR-2"
memoryTypeTranslationTable(22)="BRAM"
memoryTypeTranslationTable(23)="FB-DIMM"
memoryTypeTranslationTable(24)="DDR3"
memoryTypeTranslationTable(25)="FBD2"
memoryTypeTranslationTable(Default)=""


//
// Collect

Memory.Collect.Type="MultiInstance"

// Source(1) = The Processor WBEM class
// DeviceID,OperationalStatus
Memory.Collect.Source(1).Type="WBEM"
Memory.Collect.Source(1).WbemQuery="SELECT ElementName,OperationalStatus FROM SVS_PGYPhysicalMemory"
Memory.Collect.Source(1).WbemNameSpace="root/SVS"

// Duplicate the "OperationalStatusArray" column
// DeviceID,OperationalStatus,OperationalStatus
Memory.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Memory.Collect.Source(1).Compute(1).Column=2

// Then we translate DMTF's OperationStatus code into OK/WARN/ALARM (for the Status parameter)
// DeviceID,PATROLStatusArray,OperationalStatus
Memory.Collect.Source(1).Compute(2).Type="ArrayTranslate"
Memory.Collect.Source(1).Compute(2).Column=2
Memory.Collect.Source(1).Compute(2).TranslationTable="DMTFOperationStatusTranslationTable"

// And finally, we translate DMTF's OperationalStatus code into a more readable status string
// DeviceID,PATROLStatusArray,StatusInformation
Memory.Collect.Source(1).Compute(3).Type="ArrayTranslate"
Memory.Collect.Source(1).Compute(3).Column=3
Memory.Collect.Source(1).Compute(3).TranslationTable="DMTFOperationStatusInformationTranslationTable"
Memory.Collect.Source(1).Compute(3).ResultSeparator=" - "

// Convert PATROLStatusArray to a simple (unique) PATROLStatus
// DeviceID,PATROLStatus,StatusInformation
Memory.Collect.Source(1).Compute(4).Type="Convert"
Memory.Collect.Source(1).Compute(4).Column=2
Memory.Collect.Source(1).Compute(4).ConversionType="Array2SimpleStatus"

// Value Table
// CurrentClockSpeed,DeviceID,PATROLStatus,StatusInformation
Memory.Collect.ValueTable=%Memory.Collect.Source(1)%
Memory.Collect.DeviceID=ValueTable.Column(1)
Memory.Collect.Status=ValueTable.Column(2)
Memory.Collect.StatusInformation=ValueTable.Column(3)




//
// Fans
//

//
// Discovery

// Source(1) = the SVS_PGYFan WBEM class
// Caption,DeviceID
Fan.Discovery.Source(1).Type="WBEM"
Fan.Discovery.Source(1).WbemQuery="SELECT Caption,DeviceID FROM SVS_PGYFan"
Fan.Discovery.Source(1).WbemNameSpace="root/SVS"

// Caption,DeviceID
Fan.Discovery.Source(1).Compute(1).Type="LeftConcat"
Fan.Discovery.Source(1).Compute(1).Column=1
Fan.Discovery.Source(1).Compute(1).String="MSHW"

Fan.Discovery.Source(1).Compute(2).Type="RightConcat"
Fan.Discovery.Source(1).Compute(2).Column=1
Fan.Discovery.Source(1).Compute(2).String="MSHW"

// Replace "MSHWMSHW", i.e. a blank column with the DeviceID value.
Fan.Discovery.Source(1).Compute(3).Type="Replace"
Fan.Discovery.Source(1).Compute(3).Column=1
Fan.Discovery.Source(1).Compute(3).Replace="MSHWMSHW"
Fan.Discovery.Source(1).Compute(3).ReplaceBy=Column(2)

// Now get rid of any remaining MSHWs
// Caption,DeviceID
Fan.Discovery.Source(1).Compute(4).Type="Replace"
Fan.Discovery.Source(1).Compute(4).Column=1
Fan.Discovery.Source(1).Compute(4).Replace="MSHW"
Fan.Discovery.Source(1).Compute(4).ReplaceBy=""

// InstanceTable = Source(1)
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(1)
Fan.Discovery.Instance.AttachedToDeviceID="FujitsuServer"
Fan.Discovery.Instance.AttachedToDeviceType="Computer"

//
// Collect

Fan.Collect.Type="MultiInstance"

// Source(1) = The Processor WBEM class
// Caption,OperationalStatus
Fan.Collect.Source(1).Type="WBEM"
Fan.Collect.Source(1).WbemQuery="SELECT Caption,OperationalStatus,DeviceID FROM SVS_PGYFan"
Fan.Collect.Source(1).WbemNameSpace="root/SVS"

// Duplicate the "OperationalStatusArray" column
// Caption,OperationalStatus,OperationalStatus,DeviceID
Fan.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Fan.Collect.Source(1).Compute(1).Column=2

// Then we translate DMTF's OperationStatus code into OK/WARN/ALARM (for the Status parameter)
// Caption,PATROLStatusArray,OperationalStatus,DeviceID
Fan.Collect.Source(1).Compute(2).Type="ArrayTranslate"
Fan.Collect.Source(1).Compute(2).Column=2
Fan.Collect.Source(1).Compute(2).TranslationTable="DMTFOperationStatusTranslationTable"

// And finally, we translate DMTF's OperationalStatus code into a more readable status string
// Caption,PATROLStatusArray,StatusInformation,DeviceID
Fan.Collect.Source(1).Compute(3).Type="ArrayTranslate"
Fan.Collect.Source(1).Compute(3).Column=3
Fan.Collect.Source(1).Compute(3).TranslationTable="DMTFOperationStatusInformationTranslationTable"
Fan.Collect.Source(1).Compute(3).ResultSeparator=" - "

// Convert PATROLStatusArray to a simple (unique) PATROLStatus
// Caption,PATROLStatus,StatusInformation,DeviceID
Fan.Collect.Source(1).Compute(4).Type="Convert"
Fan.Collect.Source(1).Compute(4).Column=2
Fan.Collect.Source(1).Compute(4).ConversionType="Array2SimpleStatus"


// Caption,PATROLStatus,StatusInformation,DeviceID
Fan.Collect.Source(1).Compute(5).Type="LeftConcat"
Fan.Collect.Source(1).Compute(5).Column=1
Fan.Collect.Source(1).Compute(5).String="MSHW"

Fan.Collect.Source(1).Compute(6).Type="RightConcat"
Fan.Collect.Source(1).Compute(6).Column=1
Fan.Collect.Source(1).Compute(6).String="MSHW"

// Replace "MSHWMSHW", i.e. a blank column with the DeviceID value.
Fan.Collect.Source(1).Compute(7).Type="Replace"
Fan.Collect.Source(1).Compute(7).Column=1
Fan.Collect.Source(1).Compute(7).Replace="MSHWMSHW"
Fan.Collect.Source(1).Compute(7).ReplaceBy=Column(4)

// Now get rid of any remaining MSHWs
// Caption,PATROLStatus,StatusInformation,DeviceID
Fan.Collect.Source(1).Compute(8).Type="Replace"
Fan.Collect.Source(1).Compute(8).Column=1
Fan.Collect.Source(1).Compute(8).Replace="MSHW"
Fan.Collect.Source(1).Compute(8).ReplaceBy=""

// Value Table
// DeviceID,PATROLStatus,StatusInformation,DeviceID
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(2)
Fan.Collect.StatusInformation=ValueTable.Column(3)

//
// PowerSupplies
//

//
// Discovery

// Source(1) = the SVS_PGYFan WBEM class
PowerSupply.Discovery.Source(1).Type="WBEM"
PowerSupply.Discovery.Source(1).WbemQuery="SELECT Caption,DeviceID FROM SVS_PGYPowerSupply"
PowerSupply.Discovery.Source(1).WbemNameSpace="root/SVS"

// Caption,DeviceID
PowerSupply.Discovery.Source(1).Compute(1).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(1).Column=1
PowerSupply.Discovery.Source(1).Compute(1).String="MSHW"

PowerSupply.Discovery.Source(1).Compute(2).Type="RightConcat"
PowerSupply.Discovery.Source(1).Compute(2).Column=1
PowerSupply.Discovery.Source(1).Compute(2).String="MSHW"

// Replace "MSHWMSHW", i.e. a blank column with the DeviceID value.
PowerSupply.Discovery.Source(1).Compute(3).Type="Replace"
PowerSupply.Discovery.Source(1).Compute(3).Column=1
PowerSupply.Discovery.Source(1).Compute(3).Replace="MSHWMSHW"
PowerSupply.Discovery.Source(1).Compute(3).ReplaceBy=Column(2)

// Now get rid of any remaining MSHWs
// Caption,DeviceID
PowerSupply.Discovery.Source(1).Compute(4).Type="Replace"
PowerSupply.Discovery.Source(1).Compute(4).Column=1
PowerSupply.Discovery.Source(1).Compute(4).Replace="MSHW"
PowerSupply.Discovery.Source(1).Compute(4).ReplaceBy=""

// InstanceTable = Source(1)
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.AttachedToDeviceID="FujitsuServer"
PowerSupply.Discovery.Instance.AttachedToDeviceType="Computer"

// Collect

PowerSupply.Collect.Type="MultiInstance"

// Source(1) = The Processor WBEM class
// DeviceID,OperationalStatus
PowerSupply.Collect.Source(1).Type="WBEM"
PowerSupply.Collect.Source(1).WbemQuery="SELECT Caption,OperationalStatus,DeviceID FROM SVS_PGYPowerSupply"
PowerSupply.Collect.Source(1).WbemNameSpace="root/SVS"

// Duplicate the "OperationalStatusArray" column
// Caption,OperationalStatus,OperationalStatus,DeviceID
PowerSupply.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(1).Column=2

// Then we translate DMTF's OperationStatus code into OK/WARN/ALARM (for the Status parameter)
// Caption,PATROLStatusArray,OperationalStatus,DeviceID
PowerSupply.Collect.Source(1).Compute(2).Type="ArrayTranslate"
PowerSupply.Collect.Source(1).Compute(2).Column=2
PowerSupply.Collect.Source(1).Compute(2).TranslationTable="DMTFOperationStatusTranslationTable"

// And finally, we translate DMTF's OperationalStatus code into a more readable status string
// Caption,PATROLStatusArray,StatusInformation,DeviceID
PowerSupply.Collect.Source(1).Compute(3).Type="ArrayTranslate"
PowerSupply.Collect.Source(1).Compute(3).Column=3
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="DMTFOperationStatusInformationTranslationTable"
PowerSupply.Collect.Source(1).Compute(3).ResultSeparator=" - "

// Convert PATROLStatusArray to a simple (unique) PATROLStatus
// Caption,PATROLStatus,StatusInformation,DeviceID
PowerSupply.Collect.Source(1).Compute(4).Type="Convert"
PowerSupply.Collect.Source(1).Compute(4).Column=2
PowerSupply.Collect.Source(1).Compute(4).ConversionType="Array2SimpleStatus"

// Caption,PATROLStatus,StatusInformation,DeviceID
PowerSupply.Collect.Source(1).Compute(5).Type="LeftConcat"
PowerSupply.Collect.Source(1).Compute(5).Column=1
PowerSupply.Collect.Source(1).Compute(5).String="MSHW"

PowerSupply.Collect.Source(1).Compute(6).Type="RightConcat"
PowerSupply.Collect.Source(1).Compute(6).Column=1
PowerSupply.Collect.Source(1).Compute(6).String="MSHW"

// Replace "MSHWMSHW", i.e. a blank column with the DeviceID value.
PowerSupply.Collect.Source(1).Compute(7).Type="Replace"
PowerSupply.Collect.Source(1).Compute(7).Column=1
PowerSupply.Collect.Source(1).Compute(7).Replace="MSHWMSHW"
PowerSupply.Collect.Source(1).Compute(7).ReplaceBy=Column(4)

// Now get rid of any remaining MSHWs
// Caption,PATROLStatus,StatusInformation,DeviceID
PowerSupply.Collect.Source(1).Compute(8).Type="Replace"
PowerSupply.Collect.Source(1).Compute(8).Column=1
PowerSupply.Collect.Source(1).Compute(8).Replace="MSHW"
PowerSupply.Collect.Source(1).Compute(8).ReplaceBy=""
// Value Table
// CurrentClockSpeed,DeviceID,PATROLStatus,StatusInformation
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)


// Temperature

// Discovery

// DeviceID, Type
Temperature.Discovery.Source(1).Type="WBEM"
Temperature.Discovery.Source(1).WbemQuery="SELECT Caption,DeviceID,UpperThresholdCritical FROM SVS_PGYTemperatureSensor"
Temperature.Discovery.Source(1).WbemNameSpace="root/SVS"

// Caption,DeviceID,UpperThresholdCritical
Temperature.Discovery.Source(1).Compute(1).Type="LeftConcat"
Temperature.Discovery.Source(1).Compute(1).Column=1
Temperature.Discovery.Source(1).Compute(1).String="MSHW"

Temperature.Discovery.Source(1).Compute(2).Type="RightConcat"
Temperature.Discovery.Source(1).Compute(2).Column=1
Temperature.Discovery.Source(1).Compute(2).String="MSHW"

// Replace "MSHWMSHW", i.e. a blank column with the DeviceID value.
Temperature.Discovery.Source(1).Compute(3).Type="Replace"
Temperature.Discovery.Source(1).Compute(3).Column=1
Temperature.Discovery.Source(1).Compute(3).Replace="MSHWMSHW"
Temperature.Discovery.Source(1).Compute(3).ReplaceBy=Column(2)

// Now get rid of any remaining MSHWs
// Caption,DeviceID,UpperThresholdCritical
Temperature.Discovery.Source(1).Compute(4).Type="Replace"
Temperature.Discovery.Source(1).Compute(4).Column=1
Temperature.Discovery.Source(1).Compute(4).Replace="MSHW"
Temperature.Discovery.Source(1).Compute(4).ReplaceBy=""

// InstanceTable = Source(1)
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Temperature.Discovery.Instance.DisplayID=InstanceTable.Column(1)
Temperature.Discovery.Instance.AlarmThreshold=InstanceTable.Column(3)
Temperature.Discovery.Instance.AttachedToDeviceID="FujitsuServer"
Temperature.Discovery.Instance.AttachedToDeviceType="Computer"

//
// Collect

// Like all WBEM collects, this one is "MultiInstance"
Temperature.Collect.Type="MultiInstance"

// Source(1) = the SVS_PGYTemperatureSensor WBEM class
Temperature.Collect.Source(1).Type="WBEM"
Temperature.Collect.Source(1).WbemQuery="SELECT CurrentReading,Caption,DeviceID FROM SVS_PGYTemperatureSensor"
Temperature.Collect.Source(1).WbemNameSpace="root/SVS"

// CurrentReading,Caption,DeviceID
Temperature.Collect.Source(1).Compute(1).Type="LeftConcat"
Temperature.Collect.Source(1).Compute(1).Column=2
Temperature.Collect.Source(1).Compute(1).String="MSHW"

Temperature.Collect.Source(1).Compute(2).Type="RightConcat"
Temperature.Collect.Source(1).Compute(2).Column=2
Temperature.Collect.Source(1).Compute(2).String="MSHW"

// Replace "MSHWMSHW", i.e. a blank column with the DeviceID value.
Temperature.Collect.Source(1).Compute(3).Type="Replace"
Temperature.Collect.Source(1).Compute(3).Column=2
Temperature.Collect.Source(1).Compute(3).Replace="MSHWMSHW"
Temperature.Collect.Source(1).Compute(3).ReplaceBy=Column(3)

// Now get rid of any remaining MSHWs
// CurrentReading,Caption,DeviceID
Temperature.Collect.Source(1).Compute(4).Type="Replace"
Temperature.Collect.Source(1).Compute(4).Column=2
Temperature.Collect.Source(1).Compute(4).Replace="MSHW"
Temperature.Collect.Source(1).Compute(4).ReplaceBy=""

// ValueTable = Source(1)
Temperature.Collect.ValueTable=%Temperature.Collect.Source(1)%
Temperature.Collect.DeviceID=ValueTable.Column(2)
Temperature.Collect.Temperature=ValueTable.Column(1)

// Voltage

// Discovery

// DeviceID, Type
Voltage.Discovery.Source(1).Type="WBEM"
Voltage.Discovery.Source(1).WbemQuery="SELECT Caption,DeviceID FROM SVS_PGYVoltageSensor"
Voltage.Discovery.Source(1).WbemNameSpace="root/SVS"

// Caption,DeviceID
Voltage.Discovery.Source(1).Compute(1).Type="LeftConcat"
Voltage.Discovery.Source(1).Compute(1).Column=1
Voltage.Discovery.Source(1).Compute(1).String="MSHW"

Voltage.Discovery.Source(1).Compute(2).Type="RightConcat"
Voltage.Discovery.Source(1).Compute(2).Column=1
Voltage.Discovery.Source(1).Compute(2).String="MSHW"

// Replace "MSHWMSHW", i.e. a blank column with the DeviceID value.
Voltage.Discovery.Source(1).Compute(3).Type="Replace"
Voltage.Discovery.Source(1).Compute(3).Column=1
Voltage.Discovery.Source(1).Compute(3).Replace="MSHWMSHW"
Voltage.Discovery.Source(1).Compute(3).ReplaceBy=Column(2)

// Now get rid of any remaining MSHWs
// Caption,DeviceID
Voltage.Discovery.Source(1).Compute(4).Type="Replace"
Voltage.Discovery.Source(1).Compute(4).Column=1
Voltage.Discovery.Source(1).Compute(4).Replace="MSHW"
Voltage.Discovery.Source(1).Compute(4).ReplaceBy=""

// InstanceTable = Source(1)
Voltage.Discovery.InstanceTable=%Voltage.Discovery.Source(1)%
Voltage.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Voltage.Discovery.Instance.DisplayID=InstanceTable.Column(1)
Voltage.Discovery.Instance.AttachedToDeviceID="FujitsuServer"
Voltage.Discovery.Instance.AttachedToDeviceType="Computer"

//
// Collect

// Like all WBEM collects, this one is "MultiInstance"
Voltage.Collect.Type="MultiInstance"

// Source(1) = the HP_NumericSensor WBEM class
Voltage.Collect.Source(1).Type="WBEM"
Voltage.Collect.Source(1).WbemQuery="SELECT CurrentReading,Caption,OperationalStatus,DeviceID FROM SVS_PGYVoltageSensor"
Voltage.Collect.Source(1).WbemNameSpace="root/SVS"

// Duplicate the "OperationalStatusArray" column
// CurrentReading,Caption,OperationalStatus,OperationalStatus,DeviceID
Voltage.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Voltage.Collect.Source(1).Compute(1).Column=3

// Then we translate DMTF's OperationStatus code into OK/WARN/ALARM (for the Status parameter)
// CurrentReading,Caption,PATROLStatusArray,OperationalStatus,DeviceID
Voltage.Collect.Source(1).Compute(2).Type="ArrayTranslate"
Voltage.Collect.Source(1).Compute(2).Column=3
Voltage.Collect.Source(1).Compute(2).TranslationTable="DMTFOperationStatusTranslationTable"

// And finally, we translate DMTF's OperationalStatus code into a more readable status string
// CurrentReading,Caption,PATROLStatusArray,StatusInformation,DeviceID
Voltage.Collect.Source(1).Compute(3).Type="ArrayTranslate"
Voltage.Collect.Source(1).Compute(3).Column=4
Voltage.Collect.Source(1).Compute(3).TranslationTable="DMTFOperationStatusInformationTranslationTable"
Voltage.Collect.Source(1).Compute(3).ResultSeparator=" - "

// Convert PATROLStatusArray to a simple (unique) PATROLStatus
// CurrentReading,Caption,PATROLStatus,StatusInformation,DeviceID
Voltage.Collect.Source(1).Compute(4).Type="Convert"
Voltage.Collect.Source(1).Compute(4).Column=3
Voltage.Collect.Source(1).Compute(4).ConversionType="Array2SimpleStatus"

// CurrentReading,Caption,PATROLStatus,StatusInformation,DeviceID
Voltage.Collect.Source(1).Compute(5).Type="LeftConcat"
Voltage.Collect.Source(1).Compute(5).Column=2
Voltage.Collect.Source(1).Compute(5).String="MSHW"

Voltage.Collect.Source(1).Compute(6).Type="RightConcat"
Voltage.Collect.Source(1).Compute(6).Column=2
Voltage.Collect.Source(1).Compute(6).String="MSHW"

// Replace "MSHWMSHW", i.e. a blank column with the DeviceID value.
Voltage.Collect.Source(1).Compute(7).Type="Replace"
Voltage.Collect.Source(1).Compute(7).Column=2
Voltage.Collect.Source(1).Compute(7).Replace="MSHWMSHW"
Voltage.Collect.Source(1).Compute(7).ReplaceBy=Column(5)

// Now get rid of any remaining MSHWs
// CurrentReading,Caption,PATROLStatus,StatusInformation,DeviceID
Voltage.Collect.Source(1).Compute(8).Type="Replace"
Voltage.Collect.Source(1).Compute(8).Column=2
Voltage.Collect.Source(1).Compute(8).Replace="MSHW"
Voltage.Collect.Source(1).Compute(8).ReplaceBy=""

// ValueTable = Source(1)
Voltage.Collect.ValueTable=%Voltage.Collect.Source(1)%
Voltage.Collect.DeviceID=ValueTable.Column(2)
Voltage.Collect.Voltage=ValueTable.Column(1)
Voltage.Collect.Status=ValueTable.Column(3)
Voltage.Collect.StatusInformation=ValueTable.Column(4)


// The DMTFOperationStatusTranslationTable
DMTFOperationStatusTranslationTable(2)="OK"
DMTFOperationStatusTranslationTable(3)="WARN"
DMTFOperationStatusTranslationTable(4)="WARN"
DMTFOperationStatusTranslationTable(5)="WARN"
DMTFOperationStatusTranslationTable(6)="ALARM"
DMTFOperationStatusTranslationTable(7)="ALARM"
DMTFOperationStatusTranslationTable(8)="WARN"
DMTFOperationStatusTranslationTable(9)="WARN"
DMTFOperationStatusTranslationTable(10)="ALARM"
DMTFOperationStatusTranslationTable(11)="WARN"
DMTFOperationStatusTranslationTable(12)="ALARM"
DMTFOperationStatusTranslationTable(13)="ALARM"
DMTFOperationStatusTranslationTable(14)="ALARM"
DMTFOperationStatusTranslationTable(15)="OK"
DMTFOperationStatusTranslationTable(16)="WARN"
DMTFOperationStatusTranslationTable(17)="OK"
DMTFOperationStatusTranslationTable(18)="OK"
DMTFOperationStatusTranslationTable(Default)="UNKNOWN"

// The DMTFOperationStatusInformationTranslationTable
DMTFOperationStatusInformationTranslationTable(2)=""
DMTFOperationStatusInformationTranslationTable(3)="Degraded"
DMTFOperationStatusInformationTranslationTable(4)="Stressed"
DMTFOperationStatusInformationTranslationTable(5)="Predicted Failure"
DMTFOperationStatusInformationTranslationTable(6)="Error"
DMTFOperationStatusInformationTranslationTable(7)="Non-Recoverable Error"
DMTFOperationStatusInformationTranslationTable(8)="Starting"
DMTFOperationStatusInformationTranslationTable(9)="Stopping"
DMTFOperationStatusInformationTranslationTable(10)="Stopped"
DMTFOperationStatusInformationTranslationTable(11)="In Service"
DMTFOperationStatusInformationTranslationTable(12)="No Contact"
DMTFOperationStatusInformationTranslationTable(13)="Lost Communication"
DMTFOperationStatusInformationTranslationTable(14)="Aborted"
DMTFOperationStatusInformationTranslationTable(15)="Dormant"
DMTFOperationStatusInformationTranslationTable(16)="Supporting Entity in Error"
DMTFOperationStatusInformationTranslationTable(17)="Completed"
DMTFOperationStatusInformationTranslationTable(18)="Power Mode"
DMTFOperationStatusInformationTranslationTable(Default)=""
