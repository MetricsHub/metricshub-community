//
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//                   MS_HW_IntelBaseBrd5
//
//      Supports: Intel Branded Motherboards that support the IntelBaseBrd5 Mib
//
//

//
// HEADER
//

hdf.DisplayName="Intel Base Board 5 Motherboards"
hdf.TypicalPlatform="Any system with Intel Base Board 5"
hdf.ReliesOn="Intel Server Manager 8 SNMP Agents"
hdf.Version="1.0"
hdf.Comments="This connector provides hardware monitoring through the Intel Server Manager 8 SNMP Agents under Windows and Linux."
hdf.RemoteSupport="true"
hdf.AppliesToOS="NT,Linux"
hdf.Supersedes="MS_HW_IpmiTool.hdf"

//
// DETECTION
//

// check that we got at least one CPU declared here
// The Enclosure information is rather limited as not all OEMs populate that table.
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.343.2.10.3.5.300.10.1"

//
// Enclosure: computer
//

// Get the Platform Description
// There are other informations in the MIB, but Platform Description seems to be the only one populated.
// PlatformDescription
Enclosure.Discovery.Source(1).Type="SnmpGet"
Enclosure.Discovery.Source(1).SnmpOid="1.3.6.1.4.1.343.2.10.3.5.100.2.0"

// InstanceTable = Source(1)
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Instance.DeviceID="IntelMB"
Enclosure.Discovery.Instance.Model=InstanceTable.Column(1)
Enclosure.Discovery.Instance.Type="Computer"


// CPUS

// CPU discovery

// Source(1) = processorDeviceTable SNMP table
// ID;Manufacturer;Model;MaxSpeed;
CPU.Discovery.Source(1).Type="SnmpTable"
CPU.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.343.2.10.3.5.300.10.1"
CPU.Discovery.Source(1).SnmpTableSelectColumns="ID,8,10,11"

// Instance Table
CPU.Discovery.InstanceTable=%CPU.Discovery.Source(1)%
CPU.Discovery.Instance.DeviceID=InstanceTable.Column(1)
CPU.Discovery.Instance.Model=InstanceTable.Column(3)
CPU.Discovery.Instance.Vendor=InstanceTable.Column(2)
CPU.Discovery.Instance.MaximumSpeed=InstanceTable.Column(4)


// Collect

// Collect is multi-instance (all instances in one shot)
cpu.Collect.Type="MultiInstance"

// Source(1) = processorDeviceTable SNMP table
// ID;StatusInformation;Status;CurrentSpeed
cpu.Collect.Source(1).Type="SnmpTable"
cpu.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.343.2.10.3.5.300.10.1"
cpu.Collect.Source(1).SnmpTableSelectColumns="ID,4,5,12"

// Translate Status in Patrol Status
// ID;StatusInformation;PatrolStatus;CurrentSpeed
cpu.Collect.Source(1).Compute(1).Type="Translate"
cpu.Collect.Source(1).Compute(1).Column=3
cpu.Collect.Source(1).Compute(1).TranslationTable="statusTranslationTable"

// Remove Status Information of "ok"
// ID;StatusInformation;PatrolStatus;CurrentSpeed
cpu.Collect.Source(1).Compute(2).Type="Replace"
cpu.Collect.Source(1).Compute(2).Column=2
cpu.Collect.Source(1).Compute(2).Replace="ok"
cpu.Collect.Source(1).Compute(2).ReplaceBy=""

// ValueTable = Source(1)
// ID;StatusInformation;PatrolStatus;CurrentSpeed
cpu.Collect.ValueTable=%cpu.Collect.Source(1)%
cpu.Collect.DeviceID=ValueTable.Column(1)
// cpu.Collect.CurrentSpeed=ValueTable.Column(2)
cpu.Collect.Status=ValueTable.Column(3)
cpu.Collect.StatusInformation=ValueTable.Column(2)


// Memory

// Memory discovery

// Source(1) = PhysicalMemoryDeviceTable SNMP table
// ID;Status;Size;Location;Bank;Speed;Type
Memory.Discovery.Source(1).Type="SnmpTable"
Memory.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.343.2.10.3.5.500.20.1"
Memory.Discovery.Source(1).SnmpTableSelectColumns="ID,5,11,13,14,17,6"

// Remove Modules with Status 7 (Unsupported) as these are part of an array.
// ID;Status;Size;Location;Bank;Speed;Type
Memory.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
Memory.Discovery.Source(1).Compute(1).Column=2
Memory.Discovery.Source(1).Compute(1).ValueList="7"


// Source(2) = PhysicalMemoryArrayTable SNMP table
// ID;Status;Type
Memory.Discovery.Source(2).Type="SnmpTable"
Memory.Discovery.Source(2).SnmpTableOid="1.3.6.1.4.1.343.2.10.3.5.500.10.1"
Memory.Discovery.Source(2).SnmpTableSelectColumns="ID,5,12"

// Add Array_ to the ID
// ID;Status;Type
Memory.Discovery.Source(2).Compute(1).Type="LeftConcat"
Memory.Discovery.Source(2).Compute(1).Column=1
Memory.Discovery.Source(2).Compute(1).String="Array_"
// Add Size,Location,Bank,Speed Columns
// ID;Status;(Size);(Location);(Bank);(Speed);Type
Memory.Discovery.Source(2).Compute(2).Type="LeftConcat"
Memory.Discovery.Source(2).Compute(2).Column=3
Memory.Discovery.Source(2).Compute(2).String=";;;;"

// ID;Status;Size;Location;Bank;Speed;Type
Memory.Discovery.Source(3).Type="TableUnion"
Memory.Discovery.Source(3).Table1=%Memory.Discovery.Source(1)%
Memory.Discovery.Source(3).Table2=%Memory.Discovery.Source(2)%

Memory.Discovery.Source(3).Compute(1).Type="LeftConcat"
Memory.Discovery.Source(3).Compute(1).Column=4
Memory.Discovery.Source(3).Compute(1).String="Location: "

Memory.Discovery.Source(3).Compute(2).Type="LeftConcat"
Memory.Discovery.Source(3).Compute(2).Column=5
Memory.Discovery.Source(3).Compute(2).String="Bank: "

// Instance Table
// ID;Status;Size;Location;Bank;Speed;Type
Memory.Discovery.InstanceTable=%Memory.Discovery.Source(3)%
Memory.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Memory.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(4)
Memory.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(5)
Memory.Discovery.Instance.Size=InstanceTable.Column(3)
Memory.Discovery.Instance.Type=InstanceTable.Column(7)


// Collect

// Collect is multi-instance (all instances in one shot)
Memory.Collect.Type="MultiInstance"

// Source(1) = cpqSeMemoryTable SNMP table
// ID;StatusInformation;Status
Memory.Collect.Source(1).Type="SnmpTable"
Memory.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.343.2.10.3.5.500.20.1"
Memory.Collect.Source(1).SnmpTableSelectColumns="ID,4,5"

// Source(1) = cpqSeMemoryTable SNMP table
// ID;StatusInformation;Status
Memory.Collect.Source(2).Type="SnmpTable"
Memory.Collect.Source(2).SnmpTableOid="1.3.6.1.4.1.343.2.10.3.5.500.10.1"
Memory.Collect.Source(2).SnmpTableSelectColumns="ID,4,5"

// Add Array_ to the ID
// ID;StatusInformation;Status
Memory.Collect.Source(2).Compute(1).Type="LeftConcat"
Memory.Collect.Source(2).Compute(1).Column=1
Memory.Collect.Source(2).Compute(1).String="Array_"

// ID;StatusInformation;Status
Memory.Collect.Source(3).Type="TableUnion"
Memory.Collect.Source(3).Table1=%Memory.Collect.Source(1)%
Memory.Collect.Source(3).Table2=%Memory.Collect.Source(2)%

// Translate Status in Patrol Status
// ID;StatusInformation;PatrolStatus;
Memory.Collect.Source(3).Compute(1).Type="Translate"
Memory.Collect.Source(3).Compute(1).Column=3
Memory.Collect.Source(3).Compute(1).TranslationTable="statusTranslationTable"

// Remove Status Information of "ok"
// ID;StatusInformation;PatrolStatus;
Memory.Collect.Source(3).Compute(2).Type="Replace"
Memory.Collect.Source(3).Compute(2).Column=2
Memory.Collect.Source(3).Compute(2).Replace="ok"
Memory.Collect.Source(3).Compute(2).ReplaceBy=""

// ValueTable = Source(1)
// ID;StatusInformation;PatrolStatus;CurrentSpeed
Memory.Collect.ValueTable=%Memory.Collect.Source(3)%
Memory.Collect.DeviceID=ValueTable.Column(1)
Memory.Collect.Status=ValueTable.Column(3)
Memory.Collect.StatusInformation=ValueTable.Column(2)

// TEMPERATURES

// Temperature discovery
// ID;Description;Status;CurrentReading;UpperCritical;UpperNonCritical;
Temperature.Discovery.Source(1).Type="SnmpTable"
Temperature.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.343.2.10.3.5.600.40.1"
Temperature.Discovery.Source(1).SnmpTableSelectColumns="ID,3,5,6,8,9"

// Remove Temperature Status of "7" (unsupported) with blank
// ID;Description;Status;CurrentReading;UpperCritical;UpperNonCritical;
Temperature.Discovery.Source(1).Compute(1).Type="Replace"
Temperature.Discovery.Source(1).Compute(1).Column=3
Temperature.Discovery.Source(1).Compute(1).Replace="7"
Temperature.Discovery.Source(1).Compute(1).ReplaceBy=""

// Remove Temperatures of "0" as these are not valid values.
// ID;Description;Status;CurrentReading;UpperCritical;UpperNonCritical;
Temperature.Discovery.Source(1).Compute(2).Type="LeftConcat"
Temperature.Discovery.Source(1).Compute(2).Column=4
Temperature.Discovery.Source(1).Compute(2).String="MSHW_"
Temperature.Discovery.Source(1).Compute(3).Type="Replace"
Temperature.Discovery.Source(1).Compute(3).Column=4
Temperature.Discovery.Source(1).Compute(3).Replace="MSHW_0"
Temperature.Discovery.Source(1).Compute(3).ReplaceBy=""
Temperature.Discovery.Source(1).Compute(4).Type="Replace"
Temperature.Discovery.Source(1).Compute(4).Column=4
Temperature.Discovery.Source(1).Compute(4).Replace="MSHW_"
Temperature.Discovery.Source(1).Compute(4).ReplaceBy=""

// Divide the Thresholds by 10.
// ID;Description;Status;CurrentReading;UpperCritical;UpperNonCritical;
Temperature.Discovery.Source(1).Compute(5).Type="Divide"
Temperature.Discovery.Source(1).Compute(5).Column=5
Temperature.Discovery.Source(1).Compute(5).DivideBy="10"
Temperature.Discovery.Source(1).Compute(6).Type="Divide"
Temperature.Discovery.Source(1).Compute(6).Column=6
Temperature.Discovery.Source(1).Compute(6).DivideBy="10"

// Take a copy of source 1
// ID;Description;Status;CurrentReading;UpperCritical;UpperNonCritical;
Temperature.Discovery.Source(2)=%Temperature.Discovery.Source(1)%

// Exclude any Sensors with Negative Temperature values
// (these are usually degrees below threshold values, but too hard to deal with, so we will only rely on the Status for monitoring
// ID;Description;Status;CurrentReading;UpperCritical;UpperNonCritical;
Temperature.Discovery.Source(2).Compute(1).Type="ExcludeMatchingLines"
Temperature.Discovery.Source(2).Compute(1).Column=4
Temperature.Discovery.Source(2).Compute(1).RegExp="^-"

// Take another copy of source 1
// ID;Description;Status;CurrentReading;UpperCritical;UpperNonCritical;
Temperature.Discovery.Source(3)=%Temperature.Discovery.Source(1)%

// Include only those Sensors with Negative Temperature values
// ID;Description;Status;CurrentReading;UpperCritical;UpperNonCritical;
Temperature.Discovery.Source(3).Compute(1).Type="KeepOnlyMatchingLines"
Temperature.Discovery.Source(3).Compute(1).Column=4
Temperature.Discovery.Source(3).Compute(1).RegExp="^-"

// Replace all the Current Readings by blank.
// ID;Description;Status;CurrentReading;UpperCritical;UpperNonCritical;
Temperature.Discovery.Source(3).Compute(2).Type="Replace"
Temperature.Discovery.Source(3).Compute(2).Column=4
Temperature.Discovery.Source(3).Compute(2).Replace=Column(4)
Temperature.Discovery.Source(3).Compute(2).ReplaceBy=""

// Join the sensors with negative values and those with positive current temperatures back into one table.
// ID;Description;Status;CurrentReading;UpperCritical;UpperNonCritical;
Temperature.Discovery.Source(4).Type="TableUnion"
Temperature.Discovery.Source(4).Table1=%Temperature.Discovery.Source(2)%
Temperature.Discovery.Source(4).Table2=%Temperature.Discovery.Source(3)%


// Instance Table
// ID;Description;Status;CurrentReading;UpperCritical;UpperNonCritical;
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(4)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Temperature.Discovery.Instance.TemperatureType=InstanceTable.Column(2)
Temperature.Discovery.Instance.AlarmThreshold=InstanceTable.Column(5)
Temperature.Discovery.Instance.WarningThreshold=InstanceTable.Column(6)
Temperature.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(3)
Temperature.Discovery.Instance.ParameterActivation.Temperature=InstanceTable.Column(4)



// Collect

// Collect is multi-instance (all instances in one shot)
Temperature.Collect.Type="MultiInstance"

// Source(1) = cpqSeMemoryTable SNMP table
// ID;StatusInformation;Status;CurrentReading
Temperature.Collect.Source(1).Type="SnmpTable"
Temperature.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.343.2.10.3.5.600.40.1"
Temperature.Collect.Source(1).SnmpTableSelectColumns="ID,4,5,6"

// Divide the Current Reading by 10.
// ID;StatusInformation;Status;CurrentReading
Temperature.Collect.Source(1).Compute(1).Type="Divide"
Temperature.Collect.Source(1).Compute(1).Column=4
Temperature.Collect.Source(1).Compute(1).DivideBy="10"

// Translate Status in Patrol Status
// ID;StatusInformation;Status;CurrentReading
Temperature.Collect.Source(1).Compute(2).Type="Translate"
Temperature.Collect.Source(1).Compute(2).Column=3
Temperature.Collect.Source(1).Compute(2).TranslationTable="statusTranslationTable"

// Remove Status Information of "ok"
// ID;StatusInformation;Status;CurrentReading
Temperature.Collect.Source(1).Compute(3).Type="Replace"
Temperature.Collect.Source(1).Compute(3).Column=2
Temperature.Collect.Source(1).Compute(3).Replace="ok"
Temperature.Collect.Source(1).Compute(3).ReplaceBy=""

// ValueTable = Source(1)
// ID;StatusInformation;Status;CurrentReading
Temperature.Collect.ValueTable=%Temperature.Collect.Source(1)%
Temperature.Collect.DeviceID=ValueTable.Column(1)
Temperature.Collect.Status=ValueTable.Column(3)
Temperature.Collect.StatusInformation=ValueTable.Column(2)
Temperature.Collect.Temperature=ValueTable.Column(4)


// FanS

// Fan discovery coolingDeviceTable
// ID;Description;Status;CurrentReading;LowerCritical;LowerNonCritical;
Fan.Discovery.Source(1).Type="SnmpTable"
Fan.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.343.2.10.3.5.600.20.1"
Fan.Discovery.Source(1).SnmpTableSelectColumns="ID,3,5,6,11,10"

// Remove Fan Status of "7" (unsupported) with blank
// ID;Description;Status;CurrentReading;LowerCritical;LowerNonCritical;
Fan.Discovery.Source(1).Compute(1).Type="Replace"
Fan.Discovery.Source(1).Compute(1).Column=3
Fan.Discovery.Source(1).Compute(1).Replace="7"
Fan.Discovery.Source(1).Compute(1).ReplaceBy=""

// Instance Table
// ID;Description;Status;CurrentReading;LowerCritical;LowerNonCritical;
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.FanType=InstanceTable.Column(2)
Fan.Discovery.Instance.AlarmThreshold=InstanceTable.Column(5)
Fan.Discovery.Instance.WarningThreshold=InstanceTable.Column(6)
Fan.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(3)
Fan.Discovery.Instance.ParameterActivation.Speed=InstanceTable.Column(4)


// Collect

// Collect is multi-instance (all instances in one shot)
Fan.Collect.Type="MultiInstance"

// Source(1) = coolingDeviceTable SNMP table
// ID;StatusInformation;Status;CurrentReading
Fan.Collect.Source(1).Type="SnmpTable"
Fan.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.343.2.10.3.5.600.20.1"
Fan.Collect.Source(1).SnmpTableSelectColumns="ID,4,5,6"

// Translate Status in Patrol Status
// ID;StatusInformation;Status;CurrentReading
Fan.Collect.Source(1).Compute(1).Type="Translate"
Fan.Collect.Source(1).Compute(1).Column=3
Fan.Collect.Source(1).Compute(1).TranslationTable="statusTranslationTable"

// Remove Status Information of "ok"
// ID;StatusInformation;Status;CurrentReading
Fan.Collect.Source(1).Compute(2).Type="Replace"
Fan.Collect.Source(1).Compute(2).Column=2
Fan.Collect.Source(1).Compute(2).Replace="ok"
Fan.Collect.Source(1).Compute(2).ReplaceBy=""

// ValueTable = Source(1)
// ID;StatusInformation;Status;CurrentReading
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(3)
Fan.Collect.StatusInformation=ValueTable.Column(2)
Fan.Collect.Speed=ValueTable.Column(4)




// VoltageS

// Voltage discovery coolingDeviceTable
// ID;Description;Status;CurrentReading;UpperNonCritical;LowerNonCritical;
Voltage.Discovery.Source(1).Type="SnmpTable"
Voltage.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.343.2.10.3.5.400.30.1"
Voltage.Discovery.Source(1).SnmpTableSelectColumns="ID,3,5,6,9,10"

// Remove Voltage Status of "7" (unsupported) with blank
// ID;Description;Status;CurrentReading;UpperNonCritical;LowerNonCritical;
Voltage.Discovery.Source(1).Compute(1).Type="Replace"
Voltage.Discovery.Source(1).Compute(1).Column=3
Voltage.Discovery.Source(1).Compute(1).Replace="7"
Voltage.Discovery.Source(1).Compute(1).ReplaceBy=""

// Instance Table
// ID;Description;Status;CurrentReading;UpperNonCritical;LowerNonCritical;
Voltage.Discovery.InstanceTable=%Voltage.Discovery.Source(1)%
Voltage.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Voltage.Discovery.Instance.VoltageType=InstanceTable.Column(2)
Voltage.Discovery.Instance.UpperThreshold=InstanceTable.Column(5)
Voltage.Discovery.Instance.LowerThreshold=InstanceTable.Column(6)
Voltage.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(3)
Voltage.Discovery.Instance.ParameterActivation.Voltage=InstanceTable.Column(4)


// Collect

// Collect is multi-instance (all instances in one shot)
Voltage.Collect.Type="MultiInstance"

// Source(1) = voltageProbeTableEntry SNMP table
// ID;StatusInformation;Status;CurrentReading
Voltage.Collect.Source(1).Type="SnmpTable"
Voltage.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.343.2.10.3.5.400.30.1"
Voltage.Collect.Source(1).SnmpTableSelectColumns="ID,4,5,6"

// Translate Status in Patrol Status
// ID;StatusInformation;Status;CurrentReading
Voltage.Collect.Source(1).Compute(1).Type="Translate"
Voltage.Collect.Source(1).Compute(1).Column=3
Voltage.Collect.Source(1).Compute(1).TranslationTable="statusTranslationTable"

// Remove Status Information of "ok"
// ID;StatusInformation;Status;CurrentReading
Voltage.Collect.Source(1).Compute(2).Type="Replace"
Voltage.Collect.Source(1).Compute(2).Column=2
Voltage.Collect.Source(1).Compute(2).Replace="ok"
Voltage.Collect.Source(1).Compute(2).ReplaceBy=""

// ValueTable = Source(1)
// ID;StatusInformation;Status;CurrentReading
Voltage.Collect.ValueTable=%Voltage.Collect.Source(1)%
Voltage.Collect.DeviceID=ValueTable.Column(1)
Voltage.Collect.Status=ValueTable.Column(3)
Voltage.Collect.StatusInformation=ValueTable.Column(2)
Voltage.Collect.Voltage=ValueTable.Column(4)















// The statusTranslationTable
statusTranslationTable(1)="UNKNOWN"
statusTranslationTable(2)="UNKNOWN"
statusTranslationTable(3)="OK"
statusTranslationTable(4)="WARN"
statusTranslationTable(5)="ALARM"
statusTranslationTable(6)="ALARM"
statusTranslationTable(7)="ALARM"
statusTranslationTable(Default)="UNKNOWN"
