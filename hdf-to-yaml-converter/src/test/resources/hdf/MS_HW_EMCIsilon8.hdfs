////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//
//      Supports: EMC Isilon Systems
//                Connects to the SSH interface of the cluster.
//

//
// Header
//

hdf.DisplayName="EMC Isilon 8 (SSH)"
hdf.TypicalPlatform="EMC Isilon"
hdf.ReliesOn="EMC Isilon SSH interface"
hdf.Version="1.0"
hdf.Comments="This connector discovers the status of an EMC Isilon Storage Cluster 8"
hdf.RemoteSupport="true"
hdf.AppliesToOS="Storage"


// Check that sudo is working by running /usr/bin/isi status -v
Detection.Criteria(2).Type="OSCommand"
Detection.Criteria(2).CommandLine="/bin/zsh -c ""%{SUDO:/usr/bin/isi_for_array} /usr/bin/isi_for_array /usr/bin/isi status -v"" "
Detection.Criteria(2).ErrorMessage="Unable to run /usr/bin/isi status -v.  Check rights / sudo status."
Detection.Criteria(2).ExpectedResult="Cluster Name:"

// Constants
#define _IsiStatusCommand /usr/bin/isi status -v
#define _IsiDevicesCommand /usr/bin/isi devices drive list
#define _IsiBatteryCommand /usr/bin/isi batterystatus list
#define _IsiDrivesCommand /usr/bin/isi devices drive list
#define _IsiNetworkCommand /usr/bin/isi network interfaces list --verbose --show-inactive

// Includes
#include MS_HW_EMCIsilon.hhdf

/////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(3) = The /usr/bin/isi batterystatus awk script
///
///
/////////////////////////////////////////////////////////
EmbeddedFile(3):
{nodeName = $1 ; gsub (/:/,"",nodeName);}
NF > 7 {
	if ($0 ~ /.*[Rr]eady, [Ee]nabled, and [Ff]ully [Cc]harged.*/)
          {
          	print "MSHW_BATTERY;" nodeName ";" nodeName"-"$2 ";" nodeName"-"$2 ";""Ready-enabled-fully charged"";""Ready-enabled-fully charged"";"
  				}
  else
  		print "MSHW_BATTERY;" nodeName ";" nodeName"-"$2 ";" nodeName"-"$2 ";" $3"-"$5";"$3"-"$5";"

	}
EmbeddedFile(3).End
/////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(5) = The /usr/bin/isi devices
///
///
/////////////////////////////////////////////////////////
EmbeddedFile(5):
{nodeName = $1 ; gsub (/:/,"",nodeName);}

$3 ~ /^Bay$/  {
  nodeNumber = $2 ; nodeArray[nodeNumber] = nodeName ;
  Location = $4 ; Location = "Bay-" Location
	Lnum = $6 ; Lnum = "Lnum-" Lnum
	Status = $7 ; gsub(/\].*$/,"",Status);gsub(/^.*\[/,"",Status);
	SerialNumber = $8 ; gsub (/^SN:/,"",SerialNumber)
	if ( Status != "EMPTY" ) {
	  print "MSHW_PhysicalDisk;" nodeName ";" nodeName "-" Location ";" Location ";" Lnum ";" SerialNumber ";" Status ";" Status ";"
	  }
	}
END {
  for (nodeNumber in nodeArray) {
    print "MSHW_Node;" nodeArray[nodeNumber] ";" nodeNumber ";"
    }
  }
EmbeddedFile(5).End
/////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(6) = The /usr/bin/isi networks list interfaces --verbose --wide --show-inactive
///
///
/////////////////////////////////////////////////////////
EmbeddedFile(6):
$1 ~ /^IP/ && $2 ~ /Addresses/ {IPAddress = $NF}
$1 ~ /^LNN/ {NodeNumber = $NF}
$1 ~ /^Name/ {Interface = $NF }
$1 ~ /^NIC/ && $2 ~ /Name/ {NICName = $NF}
$1 ~ /^Status/ {Status = $0 ; gsub (/^.*Status: /,"",Status) ; gsub (/ +$/,"",Status)
	                          print "MSHW;" NodeNumber ";" NICName ";" NICName ";" Interface ";" IPAddress ";" Status ";"
	                          }
EmbeddedFile(6).End
/////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(9) = isi storagepool list --verbose --format list
///
///
/////////////////////////////////////////////////////////
EmbeddedFile(9):
BEGIN {FS="\"";}
{
	print $1 $3;
}
EmbeddedFile(9).End
////////////////////////////////////////////////////////
