////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//
//      Supports: Nimble
//                Connects to REST API
// ....Source(n).Type="HTTP"
// ....Source(n).Method="GET|POST"
// ....Source(n).URL="/url/test.pl"
// ....Source(n).Header=EmbeddedFile(1)
// ....Source(n).Body=EmbeddedFile(2)
// ....Source(n).ResultContent="httpStatus|header|body|all".
// ....Source(n).AuthenticationToken=%...Source(n-1)%
//
//

//
// Header
//

hdf.DisplayName="Nimble"
hdf.TypicalPlatform="Nimble"
hdf.ReliesOn="Nimble REST API"
hdf.Version="1.0"
hdf.Comments="This connector provides hardware monitoring for Nimble Storage Systems via Nimble's REST api"
hdf.RemoteSupport="true"
hdf.LocalSupport="false"
hdf.AppliesToOS="Storage"

//
// DETECTION
// Does a get_next to see if HTTP Answers
// Detection.Criteria(1).Type="HTTP"
// Detection.Criteria(1).Method="POST"
// Detection.Criteria(1).URL="/v1/tokens"

Detection.Criteria(1).Type="OS"
Detection.Criteria(1).KeepOnly="Storage"

// Check that the address / port is correct
Detection.Criteria(2).Type="HTTP"
Detection.Criteria(2).Method="GET"
Detection.Criteria(2).URL="/versions"
Detection.Criteria(2).Header="Content-Type: application/json"
Detection.Criteria(2).ExpectedResult="""name"": *""v1"""
Detection.Criteria(2).ErrorMessage="Unable to connect to Nimble System.  Check port (default port is 5392) and IP/Address."

// Try and get a token
Detection.Criteria(3).Type="HTTP"
Detection.Criteria(3).Method="POST"
Detection.Criteria(3).URL="/v1/tokens"
Detection.Criteria(3).Body="{""data"":{""password"":""%{PASSWORD}"",""username"":""%{USERNAME}""}}"
Detection.Criteria(3).Header="Content-Type: application/json"
Detection.Criteria(3).ExpectedResult="session_token"
Detection.Criteria(3).ErrorMessage="Authentication Failed.  Check user credentials"


//
// Enclosure
//
// /arrays/detail
// /shelves/detail

// Discovery

// Get Token
// Token in JSON format
Enclosure.Discovery.Source(1).Type="HTTP"
Enclosure.Discovery.Source(1).Method="POST"
Enclosure.Discovery.Source(1).URL="/v1/tokens"
Enclosure.Discovery.Source(1).Body="{""data"":{""password"":""%{PASSWORD}"",""username"":""%{USERNAME}""}}"
Enclosure.Discovery.Source(1).Header="Content-Type: application/json"

// Extract Token
// AuthenticationToken
Enclosure.Discovery.Source(1).Compute(1).Type="Json2Csv"
Enclosure.Discovery.Source(1).Compute(1).EntryKey="data"
Enclosure.Discovery.Source(1).Compute(1).Properties="/session_token"
Enclosure.Discovery.Source(1).Compute(1).Separator=";"

Enclosure.Discovery.Source(1).Compute(2).Type="KeepColumns"
Enclosure.Discovery.Source(1).Compute(2).ColumnNumbers="2"

// Get SystemInfo
// Query Array
Enclosure.Discovery.Source(2).Type="HTTP"
Enclosure.Discovery.Source(2).Method="GET"
Enclosure.Discovery.Source(2).URL="/v1/arrays/detail"
Enclosure.Discovery.Source(2).ResultContent="body"
Enclosure.Discovery.Source(2).AuthenticationToken=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Source(2).Header="X-Auth-Token: %{AUTHENTICATIONTOKEN}"

// Extract Array
// JSONIndex;ArrayID;ArrayModel;ArraySerialNumber;ArrayVersion;ArrayFullName;
Enclosure.Discovery.Source(2).Compute(1).Type="Json2Csv"
Enclosure.Discovery.Source(2).Compute(1).EntryKey="data"
Enclosure.Discovery.Source(2).Compute(1).Properties="/id;/extended_model;/serial;/version;/full_name;"
Enclosure.Discovery.Source(2).Compute(1).Separator=";"

// Get Enclosure
// Query Enclosure
Enclosure.Discovery.Source(3).Type="HTTP"
Enclosure.Discovery.Source(3).Method="GET"
Enclosure.Discovery.Source(3).URL="/v1/shelves/detail"
Enclosure.Discovery.Source(3).ResultContent="body"
Enclosure.Discovery.Source(3).AuthenticationToken=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Source(3).Header="X-Auth-Token: %{AUTHENTICATIONTOKEN}"

// Make a copy to keep (3) for use in other classes
Enclosure.Discovery.Source(4)=%Enclosure.Discovery.Source(3)%

// Extract Enclosure
// JSONIndex;EnclosureID;ArrayID;EnclosureSerial;EnclosureType;EnclosureModel;
Enclosure.Discovery.Source(4).Compute(1).Type="Json2Csv"
Enclosure.Discovery.Source(4).Compute(1).EntryKey="data"
Enclosure.Discovery.Source(4).Compute(1).Properties="/id;/array_id;/serial;/chassis_type;/model_ext;"
Enclosure.Discovery.Source(4).Compute(1).Separator=";"

// Attach the Array info to each Enclosure
// JSONIndex;EnclosureID;ArrayID;EnclosureSerial;EnclosureType;EnclosureModel;JSONIndex;ArrayID;ArrayModel;ArraySerialNumber;ArrayVersion;ArrayFullName;
Enclosure.Discovery.Source(5).Type="TableJoint"
Enclosure.Discovery.Source(5).LeftTable=%Enclosure.Discovery.Source(4)%
Enclosure.Discovery.Source(5).RightTable=%Enclosure.Discovery.Source(2)%
Enclosure.Discovery.Source(5).LeftKeyColumn=3
Enclosure.Discovery.Source(5).RightKeyColumn=2
Enclosure.Discovery.Source(5).DefaultRightLine=";;;;;"

// Merge the Array information to be put in Additional Information and add Labels
//     1         2         3              4             5            6           7           8       9             10            11             12
//                                                                                     ;AddInfo3; AddInfo1;       Additional Information 2             ;
// JSONIndex;EnclosureID;ArrayID;EnclosureSerial;EnclosureType;EnclosureModel;JSONIndex;ArrayID;ArrayModel;ArraySerialNumber;ArrayVersion;ArrayFullName;
Enclosure.Discovery.Source(5).Compute(1).Type="LeftConcat"
Enclosure.Discovery.Source(5).Compute(1).Column=8
Enclosure.Discovery.Source(5).Compute(1).String="Array ID: "

Enclosure.Discovery.Source(5).Compute(2).Type="LeftConcat"
Enclosure.Discovery.Source(5).Compute(2).Column=9
Enclosure.Discovery.Source(5).Compute(2).String="Array Model: "

Enclosure.Discovery.Source(5).Compute(3).Type="LeftConcat"
Enclosure.Discovery.Source(5).Compute(3).Column=10
Enclosure.Discovery.Source(5).Compute(3).String="Array Serial Number: "

Enclosure.Discovery.Source(5).Compute(4).Type="RightConcat"
Enclosure.Discovery.Source(5).Compute(4).Column=10
Enclosure.Discovery.Source(5).Compute(4).String=" - Version: "

Enclosure.Discovery.Source(5).Compute(5).Type="RightConcat"
Enclosure.Discovery.Source(5).Compute(5).Column=10
Enclosure.Discovery.Source(5).Compute(5).String=Column(11)

Enclosure.Discovery.Source(5).Compute(6).Type="RightConcat"
Enclosure.Discovery.Source(5).Compute(6).Column=10
Enclosure.Discovery.Source(5).Compute(6).String=" - Array Full Name: "

Enclosure.Discovery.Source(5).Compute(7).Type="RightConcat"
Enclosure.Discovery.Source(5).Compute(7).Column=10
Enclosure.Discovery.Source(5).Compute(7).String=Column(12)

// Remove Chassis_ from the chassis type
// JSONIndex;EnclosureID;ArrayID;EnclosureSerial;EnclosureType;EnclosureModel;JSONIndex;ArrayID;ArrayModel;ArraySerialNumber;ArrayVersion;ArrayFullName;
Enclosure.Discovery.Source(5).Compute(8).Type="Replace"
Enclosure.Discovery.Source(5).Compute(8).Column=5
Enclosure.Discovery.Source(5).Compute(8).Replace="chassis_"
Enclosure.Discovery.Source(5).Compute(8).ReplaceBy=""

// I cannot find a better (unique) Enclosure display ID for now.

// Instance Table
//     1         2         3              4             5            6           7           8       9             10            11             12
// JSONIndex;EnclosureID;ArrayID;EnclosureSerial;EnclosureType;EnclosureModel;JSONIndex;ArrayID;ArrayModel;ArraySerialNumber;ArrayVersion;ArrayFullName;
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(5)%
Enclosure.Discovery.Instance.DeviceID=InstanceTable.Column(2)
Enclosure.Discovery.Instance.DisplayID=InstanceTable.Column(12)
Enclosure.Discovery.Instance.Vendor="Nimble"
Enclosure.Discovery.Instance.Model=InstanceTable.Column(6)
Enclosure.Discovery.Instance.SerialNumber=InstanceTable.Column(4)
Enclosure.Discovery.Instance.Type=InstanceTable.Column(5)
Enclosure.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(9)
Enclosure.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(10)
Enclosure.Discovery.Instance.AdditionalInformation3=InstanceTable.Column(8)

// collect

Enclosure.Collect.Type="MultiInstance"

// Get SystemInfo
// Query Array
Enclosure.Collect.Source(1).Type="HTTP"
Enclosure.Collect.Source(1).Method="GET"
Enclosure.Collect.Source(1).URL="/v1/shelves/detail"
Enclosure.Collect.Source(1).ResultContent="body"
Enclosure.Collect.Source(1).AuthenticationToken=%Enclosure.Discovery.Source(1)%
Enclosure.Collect.Source(1).Header="X-Auth-Token: %{AUTHENTICATIONTOKEN}"

// Make a copy to keep (2) for use in other classes
Enclosure.Collect.Source(2)=%Enclosure.Collect.Source(1)%

// Extract Enclosure
// JSONIndex;ID;PSUStatus;FanStatus;TemperatureStatus;
Enclosure.Collect.Source(2).Compute(1).Type="Json2Csv"
Enclosure.Collect.Source(2).Compute(1).EntryKey="data"
Enclosure.Collect.Source(2).Compute(1).Properties="/id;/psu_overall_status;/fan_overall_status;/temp_overall_status;"
Enclosure.Collect.Source(2).Compute(1).Separator=";"

// Duplicate and Merge Status
// JSONIndex;ID;Status;PSUStatus;FanStatus;TemperatureStatus;
Enclosure.Collect.Source(2).Compute(2).Type="DuplicateColumn"
Enclosure.Collect.Source(2).Compute(2).Column=3

Enclosure.Collect.Source(2).Compute(3).Type="RightConcat"
Enclosure.Collect.Source(2).Compute(3).Column=3
Enclosure.Collect.Source(2).Compute(3).String="|"

Enclosure.Collect.Source(2).Compute(4).Type="RightConcat"
Enclosure.Collect.Source(2).Compute(4).Column=3
Enclosure.Collect.Source(2).Compute(4).String=Column(5)

Enclosure.Collect.Source(2).Compute(5).Type="RightConcat"
Enclosure.Collect.Source(2).Compute(5).Column=3
Enclosure.Collect.Source(2).Compute(5).String="|"

Enclosure.Collect.Source(2).Compute(6).Type="RightConcat"
Enclosure.Collect.Source(2).Compute(6).Column=3
Enclosure.Collect.Source(2).Compute(6).String=Column(6)

// Label and Merge StatusInfromation
// JSONIndex;ID;Status;StatusInformation;FanStatus;TemperatureStatus;
Enclosure.Collect.Source(2).Compute(7).Type="LeftConcat"
Enclosure.Collect.Source(2).Compute(7).Column=4
Enclosure.Collect.Source(2).Compute(7).String="PSU: "

Enclosure.Collect.Source(2).Compute(8).Type="RightConcat"
Enclosure.Collect.Source(2).Compute(8).Column=4
Enclosure.Collect.Source(2).Compute(8).String=" - Fans: "

Enclosure.Collect.Source(2).Compute(9).Type="RightConcat"
Enclosure.Collect.Source(2).Compute(9).Column=4
Enclosure.Collect.Source(2).Compute(9).String=Column(5)

Enclosure.Collect.Source(2).Compute(10).Type="RightConcat"
Enclosure.Collect.Source(2).Compute(10).Column=4
Enclosure.Collect.Source(2).Compute(10).String=" - Temperature: "

Enclosure.Collect.Source(2).Compute(11).Type="RightConcat"
Enclosure.Collect.Source(2).Compute(11).Column=4
Enclosure.Collect.Source(2).Compute(11).String=Column(6)

// Tanslate Status code into OK/WARN/ALARM (for the Status parameter)
// JSONIndex;ID;Status;StatusInformation;FanStatus;TemperatureStatus;
Enclosure.Collect.Source(2).Compute(12).Type="ArrayTranslate"
Enclosure.Collect.Source(2).Compute(12).Column=3
Enclosure.Collect.Source(2).Compute(12).TranslationTable="ShelfSensorTranslationTable"

// The StatusTranslationTable
ShelfSensorTranslationTable("OK")="OK"
ShelfSensorTranslationTable("Alerted")="ALARM"
ShelfSensorTranslationTable("Failed")="ALARM"
ShelfSensorTranslationTable("Missing")="WARN"
ShelfSensorTranslationTable(Default)="WARN"

// Consolodate the Status Codes into a Single Status
// JSONIndex;ID;Status;StatusInformation;FanStatus;TemperatureStatus;
Enclosure.Collect.Source(2).Compute(13).Type="Convert"
Enclosure.Collect.Source(2).Compute(13).Column=3
Enclosure.Collect.Source(2).Compute(13).ConversionType="Array2SimpleStatus"

// Instance Table
// JSONIndex;ID;Status;StatusInformation;FanStatus;TemperatureStatus;
Enclosure.Collect.ValueTable=%Enclosure.Collect.Source(2)%
Enclosure.Collect.DeviceID=ValueTable.Column(2)
Enclosure.Collect.Status=ValueTable.Column(3)
Enclosure.Collect.StatusInformation=ValueTable.Column(4)



//
// Blades
//
// /shelves/detail   (Controllers)

// Discovery
// Take the JSON from Enclosure.Discovery.Source(3)
Blade.Discovery.Source(1)=%Enclosure.Discovery.Source(3)%

// Extract Blade
// JSONIndex;ChassisID;CtrlAddress;Location;Model;
Blade.Discovery.Source(1).Compute(1).Type="Json2Csv"
Blade.Discovery.Source(1).Compute(1).EntryKey="data/ctrlrs"
Blade.Discovery.Source(1).Compute(1).Properties="../id;/ctrlr_side;/ctrlr_side;/ctrlr_hw_model;"
Blade.Discovery.Source(1).Compute(1).Separator=";"

// Add Label
// JSONIndex;ChassisID;CtrlAddress;Location;Model;
Blade.Discovery.Source(1).Compute(2).Type="LeftConcat"
Blade.Discovery.Source(1).Compute(2).Column=4
Blade.Discovery.Source(1).Compute(2).String="Controller "

// InstanceTable
// JSONIndex;ChassisID;CtrlAddress;Location;Model;
Blade.Discovery.InstanceTable=%Blade.Discovery.Source(1)%
Blade.Discovery.Instance.DeviceID=InstanceTable.Column(3)
Blade.Discovery.Instance.DisplayID=InstanceTable.Column(4)
Blade.Discovery.Instance.BladeModel=InstanceTable.Column(5)
Blade.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(2)



//
// Temperature
//

Temperature.Discovery.Source(1)=%Enclosure.Discovery.Source(3)%

// Extract Blade
// JSONIndex;CtrlAddress;Type;ID;Location;
Temperature.Discovery.Source(1).Compute(1).Type="Json2Csv"
Temperature.Discovery.Source(1).Compute(1).EntryKey="data/ctrlrs/ctrlr_sensors"
Temperature.Discovery.Source(1).Compute(1).Properties="../ctrlr_side;/type;/display_name;/location"
Temperature.Discovery.Source(1).Compute(1).Separator=";"

// Keep Only Temperature
Temperature.Discovery.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
Temperature.Discovery.Source(1).Compute(2).Column=3
Temperature.Discovery.Source(1).Compute(2).ValueList="temperature"

// Duplicate the ID
// JSONIndex;CtrlAddress;Type;ID;ID;Location;
Temperature.Discovery.Source(1).Compute(3).Type="DuplicateColumn"
Temperature.Discovery.Source(1).Compute(3).Column=4

// Concat the CtrlAddress to the DeviceID
// JSONIndex;CtrlAddress;Type;DeviceID;DisplayID;Location;
Temperature.Discovery.Source(1).Compute(4).Type="LeftConcat"
Temperature.Discovery.Source(1).Compute(4).Column=4
Temperature.Discovery.Source(1).Compute(4).String="-"

Temperature.Discovery.Source(1).Compute(5).Type="LeftConcat"
Temperature.Discovery.Source(1).Compute(5).Column=4
Temperature.Discovery.Source(1).Compute(5).String=Column(2)

Temperature.Discovery.Source(1).Compute(6).Type="LeftConcat"
Temperature.Discovery.Source(1).Compute(6).Column=6
Temperature.Discovery.Source(1).Compute(6).String="Location: "

// Instance Table
// JSONIndex;CtrlAddress;Type;DeviceID;DisplayID;Location;
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(4)
Temperature.Discovery.Instance.DisplayID=InstanceTable.Column(5)
Temperature.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(6)
Temperature.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(2)
Temperature.Discovery.Instance.AttachedToDeviceType="Blade"

// Collect

// Collect is multi-instance (all instances in one shot)
Temperature.Collect.Type="MultiInstance"

Temperature.Collect.Source(1)=%Enclosure.Collect.Source(1)%

// Extract Blade
// JSONIndex;CtrlAddress;Type;ID;Status;Value;
Temperature.Collect.Source(1).Compute(1).Type="Json2Csv"
Temperature.Collect.Source(1).Compute(1).EntryKey="data/ctrlrs/ctrlr_sensors"
Temperature.Collect.Source(1).Compute(1).Properties="../ctrlr_side;/type;/display_name;/status;/value"
Temperature.Collect.Source(1).Compute(1).Separator=";"

// Keep Only Temperature
Temperature.Collect.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
Temperature.Collect.Source(1).Compute(2).Column=3
Temperature.Collect.Source(1).Compute(2).ValueList="temperature"

// Concat the CtrlAddress to the DeviceID
// JSONIndex;CtrlAddress;Type;ID;Status;Value;
Temperature.Collect.Source(1).Compute(3).Type="LeftConcat"
Temperature.Collect.Source(1).Compute(3).Column=4
Temperature.Collect.Source(1).Compute(3).String="-"

Temperature.Collect.Source(1).Compute(4).Type="LeftConcat"
Temperature.Collect.Source(1).Compute(4).Column=4
Temperature.Collect.Source(1).Compute(4).String=Column(2)

// Duplicate the Status
// JSONIndex;CtrlAddress;Type;ID;Status;Status;Value;
Temperature.Collect.Source(1).Compute(5).Type="DuplicateColumn"
Temperature.Collect.Source(1).Compute(5).Column=5

// Translate the Status
// JSONIndex;CtrlAddress;Type;ID;PatrolStatus;StatusInformation;Value;
Temperature.Collect.Source(1).Compute(6).Type="Translate"
Temperature.Collect.Source(1).Compute(6).Column=5
Temperature.Collect.Source(1).Compute(6).TranslationTable="ShelfSensorTranslationTable"

// ValueTable
// JSONIndex;CtrlAddress;Type;ID;PatrolStatus;StatusInformation;Value;
Temperature.Collect.ValueTable=%Temperature.Collect.Source(1)%
Temperature.Collect.DeviceID=ValueTable.Column(4)
Temperature.Collect.Temperature=ValueTable.Column(7)
Temperature.Collect.Status=ValueTable.Column(5)
Temperature.Collect.StatusInformation=ValueTable.Column(6)

//
// Fan
//

Fan.Discovery.Source(1)=%Enclosure.Discovery.Source(3)%

// Extract Blade
// JSONIndex;CtrlAddress;Type;ID;Location;
Fan.Discovery.Source(1).Compute(1).Type="Json2Csv"
Fan.Discovery.Source(1).Compute(1).EntryKey="data/ctrlrs/ctrlr_sensors"
Fan.Discovery.Source(1).Compute(1).Properties="../ctrlr_side;/type;/display_name;/location"
Fan.Discovery.Source(1).Compute(1).Separator=";"

// Keep Only Fan
Fan.Discovery.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
Fan.Discovery.Source(1).Compute(2).Column=3
Fan.Discovery.Source(1).Compute(2).ValueList="Fan"

// Duplicate the ID
// JSONIndex;CtrlAddress;Type;ID;ID;Location;
Fan.Discovery.Source(1).Compute(3).Type="DuplicateColumn"
Fan.Discovery.Source(1).Compute(3).Column=4

// Concat the CtrlAddress to the DeviceID
// JSONIndex;CtrlAddress;Type;DeviceID;DisplayID;Location;
Fan.Discovery.Source(1).Compute(4).Type="LeftConcat"
Fan.Discovery.Source(1).Compute(4).Column=4
Fan.Discovery.Source(1).Compute(4).String="-"

Fan.Discovery.Source(1).Compute(5).Type="LeftConcat"
Fan.Discovery.Source(1).Compute(5).Column=4
Fan.Discovery.Source(1).Compute(5).String=Column(2)

Fan.Discovery.Source(1).Compute(6).Type="LeftConcat"
Fan.Discovery.Source(1).Compute(6).Column=6
Fan.Discovery.Source(1).Compute(6).String="Location: "

// Instance Table
// JSONIndex;CtrlAddress;Type;DeviceID;DisplayID;Location;
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(4)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(5)
Fan.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(6)
Fan.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(2)
Fan.Discovery.Instance.AttachedToDeviceType="Blade"

// Collect

// Collect is multi-instance (all instances in one shot)
Fan.Collect.Type="MultiInstance"

Fan.Collect.Source(1)=%Enclosure.Collect.Source(1)%

// Extract Blade
// JSONIndex;CtrlAddress;Type;ID;Status;Value;
Fan.Collect.Source(1).Compute(1).Type="Json2Csv"
Fan.Collect.Source(1).Compute(1).EntryKey="data/ctrlrs/ctrlr_sensors"
Fan.Collect.Source(1).Compute(1).Properties="../ctrlr_side;/type;/display_name;/status;/value"
Fan.Collect.Source(1).Compute(1).Separator=";"

// Keep Only Fan
Fan.Collect.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
Fan.Collect.Source(1).Compute(2).Column=3
Fan.Collect.Source(1).Compute(2).ValueList="Fan"

// Concat the CtrlAddress to the DeviceID
// JSONIndex;CtrlAddress;Type;ID;Status;Value;
Fan.Collect.Source(1).Compute(3).Type="LeftConcat"
Fan.Collect.Source(1).Compute(3).Column=4
Fan.Collect.Source(1).Compute(3).String="-"

Fan.Collect.Source(1).Compute(4).Type="LeftConcat"
Fan.Collect.Source(1).Compute(4).Column=4
Fan.Collect.Source(1).Compute(4).String=Column(2)

// Duplicate the Status
// JSONIndex;CtrlAddress;Type;ID;Status;Status;Value;
Fan.Collect.Source(1).Compute(5).Type="DuplicateColumn"
Fan.Collect.Source(1).Compute(5).Column=5

// Translate the Status
// JSONIndex;CtrlAddress;Type;ID;PatrolStatus;StatusInformation;Value;
Fan.Collect.Source(1).Compute(6).Type="Translate"
Fan.Collect.Source(1).Compute(6).Column=5
Fan.Collect.Source(1).Compute(6).TranslationTable="ShelfSensorTranslationTable"

// ValueTable
// JSONIndex;CtrlAddress;Type;ID;PatrolStatus;StatusInformation;Value;
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(4)
Fan.Collect.Speed=ValueTable.Column(7)
Fan.Collect.Status=ValueTable.Column(5)
Fan.Collect.StatusInformation=ValueTable.Column(6)


//
// PowerSupply
//

PowerSupply.Discovery.Source(1)=%Enclosure.Discovery.Source(3)%

// Extract Blade
// JSONIndex;CtrlAddress;Type;ID;Location;
PowerSupply.Discovery.Source(1).Compute(1).Type="Json2Csv"
PowerSupply.Discovery.Source(1).Compute(1).EntryKey="data/chassis_sensors"
PowerSupply.Discovery.Source(1).Compute(1).Properties="../id;/type;/display_name;/location"
PowerSupply.Discovery.Source(1).Compute(1).Separator=";"

// Keep Only PowerSupply
PowerSupply.Discovery.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
PowerSupply.Discovery.Source(1).Compute(2).Column=3
PowerSupply.Discovery.Source(1).Compute(2).ValueList="Power Supply"

// Duplicate the ID
// JSONIndex;CtrlAddress;Type;ID;ID;Location;
PowerSupply.Discovery.Source(1).Compute(3).Type="DuplicateColumn"
PowerSupply.Discovery.Source(1).Compute(3).Column=4

// Concat the CtrlAddress to the DeviceID
// JSONIndex;CtrlAddress;Type;DeviceID;DisplayID;Location;
PowerSupply.Discovery.Source(1).Compute(4).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(4).Column=4
PowerSupply.Discovery.Source(1).Compute(4).String="-"

PowerSupply.Discovery.Source(1).Compute(5).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(5).Column=4
PowerSupply.Discovery.Source(1).Compute(5).String=Column(2)

PowerSupply.Discovery.Source(1).Compute(6).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(6).Column=6
PowerSupply.Discovery.Source(1).Compute(6).String="Location: "

// Instance Table
// JSONIndex;CtrlAddress;Type;DeviceID;DisplayID;Location;
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(4)
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(5)
PowerSupply.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(6)
PowerSupply.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(2)
// PowerSupply.Discovery.Instance.AttachedToDeviceType="Enclosure"

// Collect

// Collect is multi-instance (all instances in one shot)
PowerSupply.Collect.Type="MultiInstance"

PowerSupply.Collect.Source(1)=%Enclosure.Collect.Source(1)%

// Extract Blade
// JSONIndex;CtrlAddress;Type;ID;Status;Value;
PowerSupply.Collect.Source(1).Compute(1).Type="Json2Csv"
PowerSupply.Collect.Source(1).Compute(1).EntryKey="data/chassis_sensors"
PowerSupply.Collect.Source(1).Compute(1).Properties="../id;/type;/display_name;/status;/value"
PowerSupply.Collect.Source(1).Compute(1).Separator=";"

// Keep Only PowerSupply
PowerSupply.Collect.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
PowerSupply.Collect.Source(1).Compute(2).Column=3
PowerSupply.Collect.Source(1).Compute(2).ValueList="Power Supply"

// Concat the CtrlAddress to the DeviceID
// JSONIndex;CtrlAddress;Type;ID;Status;Value;
PowerSupply.Collect.Source(1).Compute(3).Type="LeftConcat"
PowerSupply.Collect.Source(1).Compute(3).Column=4
PowerSupply.Collect.Source(1).Compute(3).String="-"

PowerSupply.Collect.Source(1).Compute(4).Type="LeftConcat"
PowerSupply.Collect.Source(1).Compute(4).Column=4
PowerSupply.Collect.Source(1).Compute(4).String=Column(2)

// Duplicate the Status
// JSONIndex;CtrlAddress;Type;ID;Status;Status;Value;
PowerSupply.Collect.Source(1).Compute(5).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(5).Column=5

// Translate the Status
// JSONIndex;CtrlAddress;Type;ID;PatrolStatus;StatusInformation;Value;
PowerSupply.Collect.Source(1).Compute(6).Type="Translate"
PowerSupply.Collect.Source(1).Compute(6).Column=5
PowerSupply.Collect.Source(1).Compute(6).TranslationTable="ShelfSensorTranslationTable"

// ValueTable
// JSONIndex;CtrlAddress;Type;ID;PatrolStatus;StatusInformation;Value;
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(4)
PowerSupply.Collect.Status=ValueTable.Column(5)
PowerSupply.Collect.StatusInformation=ValueTable.Column(6)

//
// PhysicalDisk
//

// PhysicalDisk Discovery

// Get PhysicalDisk
// Query Array
PhysicalDisk.Discovery.Source(1).Type="HTTP"
PhysicalDisk.Discovery.Source(1).Method="GET"
PhysicalDisk.Discovery.Source(1).URL="/v1/disks/detail"
PhysicalDisk.Discovery.Source(1).ResultContent="body"
PhysicalDisk.Discovery.Source(1).AuthenticationToken=%Enclosure.Discovery.Source(1)%
PhysicalDisk.Discovery.Source(1).Header="X-Auth-Token: %{AUTHENTICATIONTOKEN}"

// Extract PhysicalDisk
// JSONIndex;ID;SerialNumber;ShelfID;Slot;Bank;ShelfLocation;Vendor;Firmware;Size;Model;
PhysicalDisk.Discovery.Source(1).Compute(1).Type="Json2Csv"
PhysicalDisk.Discovery.Source(1).Compute(1).EntryKey="data"
PhysicalDisk.Discovery.Source(1).Compute(1).Properties="/id;/serial;/shelf_id;/slot;/bank;/shelf_location_id;/vendor;/firmware_version;/size;/model;"
PhysicalDisk.Discovery.Source(1).Compute(1).Separator=";"

// Copy Table to See Output of Json2Csv
// JSONIndex;ID;SerialNumber;ShelfID;Slot;Bank;ShelfLocation;Vendor;Firmware;Size;Model;
PhysicalDisk.Discovery.Source(2)=%PhysicalDisk.Discovery.Source(1)%

// Build up the DisplayID
// JSONIndex;ID;SerialNumber;ShelfID;Slot;Bank;DisplayID;Vendor;Firmware;Size;Model;
PhysicalDisk.Discovery.Source(2).Compute(1).Type="LeftConcat"
PhysicalDisk.Discovery.Source(2).Compute(1).Column=7
PhysicalDisk.Discovery.Source(2).Compute(1).String="Shelf: "

PhysicalDisk.Discovery.Source(2).Compute(2).Type="RightConcat"
PhysicalDisk.Discovery.Source(2).Compute(2).Column=7
PhysicalDisk.Discovery.Source(2).Compute(2).String=" - Slot: "

PhysicalDisk.Discovery.Source(2).Compute(3).Type="RightConcat"
PhysicalDisk.Discovery.Source(2).Compute(3).Column=7
PhysicalDisk.Discovery.Source(2).Compute(3).String=Column(5)

PhysicalDisk.Discovery.Source(2).Compute(4).Type="RightConcat"
PhysicalDisk.Discovery.Source(2).Compute(4).Column=7
PhysicalDisk.Discovery.Source(2).Compute(4).String=" - Bank: "

PhysicalDisk.Discovery.Source(2).Compute(5).Type="RightConcat"
PhysicalDisk.Discovery.Source(2).Compute(5).Column=7
PhysicalDisk.Discovery.Source(2).Compute(5).String=Column(6)

// InstanceTable
//    1        2       3           4   5     6    7          8      9      10   11
// JSONIndex;ID;SerialNumber;ShelfID;Slot;Bank;DisplayID;Vendor;Firmware;Size;Model;
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(2)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(2)
PhysicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(7)
PhysicalDisk.Discovery.Instance.SerialNumber=InstanceTable.Column(3)
PhysicalDisk.Discovery.Instance.Vendor=InstanceTable.Column(8)
PhysicalDisk.Discovery.Instance.FirmwareVersion=InstanceTable.Column(9)
PhysicalDisk.Discovery.Instance.Size=InstanceTable.Column(10)
PhysicalDisk.Discovery.Instance.Model=InstanceTable.Column(11)
PhysicalDisk.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
PhysicalDisk.Discovery.Instance.AttachedToDeviceType="Enclosure"
PhysicalDisk.Discovery.Instance.AdditionalInformation1="Type: Storage"

// PhysicalDisk

// Collect

PhysicalDisk.Collect.Type="MultiInstance"

// Get PhysicalDisk
// Query Array
PhysicalDisk.Collect.Source(1).Type="HTTP"
PhysicalDisk.Collect.Source(1).Method="GET"
PhysicalDisk.Collect.Source(1).URL="/v1/disks/detail"
PhysicalDisk.Collect.Source(1).ResultContent="body"
PhysicalDisk.Collect.Source(1).AuthenticationToken=%Enclosure.Discovery.Source(1)%
PhysicalDisk.Collect.Source(1).Header="X-Auth-Token: %{AUTHENTICATIONTOKEN}"

// Extract PhysicalDisk
// JSONIndex;ID;State;RaidState;
PhysicalDisk.Collect.Source(1).Compute(1).Type="Json2Csv"
PhysicalDisk.Collect.Source(1).Compute(1).EntryKey="data"
PhysicalDisk.Collect.Source(1).Compute(1).Properties="/id;/state;/raid_state;"
PhysicalDisk.Collect.Source(1).Compute(1).Separator=";"

// Copy Table to See Output of Json2Csv
// JSONIndex;ID;State;RaidState;
PhysicalDisk.Collect.Source(2)=%PhysicalDisk.Collect.Source(1)%

// Combine State and Raid state For both copies
// JSONIndex;ID;CombinedState;StatusInformation;
PhysicalDisk.Collect.Source(2).Compute(1).Type="RightConcat"
PhysicalDisk.Collect.Source(2).Compute(1).Column=3
PhysicalDisk.Collect.Source(2).Compute(1).String="|"

PhysicalDisk.Collect.Source(2).Compute(2).Type="RightConcat"
PhysicalDisk.Collect.Source(2).Compute(2).Column=3
PhysicalDisk.Collect.Source(2).Compute(2).String=Column(4)

PhysicalDisk.Collect.Source(2).Compute(3).Type="Replace"
PhysicalDisk.Collect.Source(2).Compute(3).Column=4
PhysicalDisk.Collect.Source(2).Compute(3).Replace=Column(4)
PhysicalDisk.Collect.Source(2).Compute(3).ReplaceBy=Column(3)

// Built Status Information
PhysicalDisk.Collect.Source(2).Compute(4).Type="Replace"
PhysicalDisk.Collect.Source(2).Compute(4).Column=4
PhysicalDisk.Collect.Source(2).Compute(4).Replace="|"
PhysicalDisk.Collect.Source(2).Compute(4).ReplaceBy=" - Raid State: "

PhysicalDisk.Collect.Source(2).Compute(5).Type="LeftConcat"
PhysicalDisk.Collect.Source(2).Compute(5).Column=4
PhysicalDisk.Collect.Source(2).Compute(5).String="State: "

// Tanslate Status code into OK/WARN/ALARM (for the Status parameter)
// JSONIndex;ID;StatusArray;StatusInformation;
PhysicalDisk.Collect.Source(2).Compute(6).Type="ArrayTranslate"
PhysicalDisk.Collect.Source(2).Compute(6).Column=3
PhysicalDisk.Collect.Source(2).Compute(6).TranslationTable="PhysicalDiskStatusTranslationTable"

// The StatusTranslationTable
// State
PhysicalDiskStatusTranslationTable("valid")="OK"
PhysicalDiskStatusTranslationTable("in use")="OK"
PhysicalDiskStatusTranslationTable("failed")="ALARM"
PhysicalDiskStatusTranslationTable("absent")="ALARM"
PhysicalDiskStatusTranslationTable("removed")="ALARM"
PhysicalDiskStatusTranslationTable("void")="WARN"
PhysicalDiskStatusTranslationTable("t_fail")="ALARM"
PhysicalDiskStatusTranslationTable("foreign")="WARN"
// Raid State
PhysicalDiskStatusTranslationTable("N/A")="UNKNOWN"
PhysicalDiskStatusTranslationTable("okay")="OK"
PhysicalDiskStatusTranslationTable("resynchronizing")="WARN"
PhysicalDiskStatusTranslationTable("spare")="OK"
PhysicalDiskStatusTranslationTable("faulty")="ALARM"
PhysicalDiskStatusTranslationTable(Default)="UNKNOWN"

// Consolodate the Status Codes into a Single Status
// JSONIndex;ID;StatusArray;StatusInformation;
PhysicalDisk.Collect.Source(2).Compute(7).Type="Convert"
PhysicalDisk.Collect.Source(2).Compute(7).Column=3
PhysicalDisk.Collect.Source(2).Compute(7).ConversionType="Array2SimpleStatus"

// ValueTable = Source(2)
// JSONIndex;ID;StatusArray;StatusInformation;
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(2)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(2)
PhysicalDisk.Collect.Status=ValueTable.Column(3)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(4)

//
// OtherDevice
//

OtherDevice.Discovery.Source(1)=%Enclosure.Discovery.Source(3)%

// Extract Blade
// JSONIndex;CtrlAddress;Status;ID;PortType;
OtherDevice.Discovery.Source(1).Compute(1).Type="Json2Csv"
OtherDevice.Discovery.Source(1).Compute(1).EntryKey="data/ctrlrs/port_info"
OtherDevice.Discovery.Source(1).Compute(1).Properties="../ctrlr_side;/port_status;/port_name;/port_type"
OtherDevice.Discovery.Source(1).Compute(1).Separator=";"

// Exclude Disconnected Devices
OtherDevice.Discovery.Source(1).Compute(2).Type="ExcludeMatchingLines"
OtherDevice.Discovery.Source(1).Compute(2).Column=3
OtherDevice.Discovery.Source(1).Compute(2).ValueList="disconnected"

// Duplicate the ID
// JSONIndex;CtrlAddress;Status;ID;ID;PortType;
OtherDevice.Discovery.Source(1).Compute(3).Type="DuplicateColumn"
OtherDevice.Discovery.Source(1).Compute(3).Column=4

// Concat the CtrlAddress to the DeviceID
// JSONIndex;CtrlAddress;Status;DeviceID;DisplayID;PortType;
OtherDevice.Discovery.Source(1).Compute(4).Type="LeftConcat"
OtherDevice.Discovery.Source(1).Compute(4).Column=4
OtherDevice.Discovery.Source(1).Compute(4).String="-"

OtherDevice.Discovery.Source(1).Compute(5).Type="LeftConcat"
OtherDevice.Discovery.Source(1).Compute(5).Column=4
OtherDevice.Discovery.Source(1).Compute(5).String=Column(2)

OtherDevice.Discovery.Source(1).Compute(6).Type="LeftConcat"
OtherDevice.Discovery.Source(1).Compute(6).Column=6
OtherDevice.Discovery.Source(1).Compute(6).String="Port Type: "

// Instance Table
// JSONIndex;CtrlAddress;Status;DeviceID;DisplayID;PortType;
OtherDevice.Discovery.InstanceTable=%OtherDevice.Discovery.Source(1)%
OtherDevice.Discovery.Instance.DeviceID=InstanceTable.Column(4)
OtherDevice.Discovery.Instance.DisplayID=InstanceTable.Column(5)
OtherDevice.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(6)
OtherDevice.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(2)
OtherDevice.Discovery.Instance.AttachedToDeviceType="Blade"
OtherDevice.Discovery.Instance.DeviceType="SASPort"

// Collect

// Collect is multi-instance (all instances in one shot)
OtherDevice.Collect.Type="MultiInstance"

OtherDevice.Collect.Source(1)=%Enclosure.Collect.Source(1)%

// Extract Blade
// JSONIndex;CtrlAddress;Status;ID;
OtherDevice.Collect.Source(1).Compute(1).Type="Json2Csv"
OtherDevice.Collect.Source(1).Compute(1).EntryKey="data/ctrlrs/port_info"
OtherDevice.Collect.Source(1).Compute(1).Properties="../ctrlr_side;/port_status;/port_name"
OtherDevice.Collect.Source(1).Compute(1).Separator=";"

// Concat the CtrlAddress to the DeviceID
// JSONIndex;CtrlAddress;Status;ID;
OtherDevice.Collect.Source(1).Compute(2).Type="LeftConcat"
OtherDevice.Collect.Source(1).Compute(2).Column=4
OtherDevice.Collect.Source(1).Compute(2).String="-"

OtherDevice.Collect.Source(1).Compute(3).Type="LeftConcat"
OtherDevice.Collect.Source(1).Compute(3).Column=4
OtherDevice.Collect.Source(1).Compute(3).String=Column(2)

// Duplicate the Status
// JSONIndex;CtrlAddress;Status;Status;ID;
OtherDevice.Collect.Source(1).Compute(4).Type="DuplicateColumn"
OtherDevice.Collect.Source(1).Compute(4).Column=3

// Translate the Status
// JSONIndex;CtrlAddress;PatrolStatus;Status;ID;
OtherDevice.Collect.Source(1).Compute(5).Type="Translate"
OtherDevice.Collect.Source(1).Compute(5).Column=3
OtherDevice.Collect.Source(1).Compute(5).TranslationTable="SASPortTranslationTable"

SASPortTranslationTable("connected")="OK"
SASPortTranslationTable("disconnected")="ALARM"
SASPortTranslationTable(Default)="WARN"

// ValueTable
// JSONIndex;CtrlAddress;PatrolStatus;Status;ID;
OtherDevice.Collect.ValueTable=%OtherDevice.Collect.Source(1)%
OtherDevice.Collect.DeviceID=ValueTable.Column(5)
OtherDevice.Collect.Status=ValueTable.Column(3)
OtherDevice.Collect.StatusInformation=ValueTable.Column(4)

//
// NetworkCard
//

// Discovery

// Get NetworkCard
// Query Array
NetworkCard.Discovery.Source(1).Type="HTTP"
NetworkCard.Discovery.Source(1).Method="GET"
NetworkCard.Discovery.Source(1).URL="/v1/fibre_channel_interfaces/detail"
NetworkCard.Discovery.Source(1).ResultContent="body"
NetworkCard.Discovery.Source(1).AuthenticationToken=%Enclosure.Discovery.Source(1)%
NetworkCard.Discovery.Source(1).Header="X-Auth-Token: %{AUTHENTICATIONTOKEN}"

// Convert the JSON
// JSONIndex;ControllerName;PortName;address;
NetworkCard.Discovery.Source(1).Compute(1).Type="Json2Csv"
NetworkCard.Discovery.Source(1).Compute(1).EntryKey="data/link_info"
NetworkCard.Discovery.Source(1).Compute(1).Properties="../controller_name;../fc_port_name;../wwpn"
NetworkCard.Discovery.Source(1).Compute(1).Separator=";"

// Add the address Type & activateStatus
// JSONIndex;ControllerName;PortName;address;addresstype;activateStatus;
NetworkCard.Discovery.Source(1).Compute(2).Type="RightConcat"
NetworkCard.Discovery.Source(1).Compute(2).Column=4
NetworkCard.Discovery.Source(1).Compute(2).String=";WWN;1"

// Get NetworkCard
// Query Array
NetworkCard.Discovery.Source(2).Type="HTTP"
NetworkCard.Discovery.Source(2).Method="GET"
NetworkCard.Discovery.Source(2).URL="/v1/network_interfaces/detail"
NetworkCard.Discovery.Source(2).ResultContent="body"
NetworkCard.Discovery.Source(2).AuthenticationToken=%Enclosure.Discovery.Source(1)%
NetworkCard.Discovery.Source(2).Header="X-Auth-Token: %{AUTHENTICATIONTOKEN}"

// Convert the JSON
// JSONIndex;ControllerName;PortName;address;
NetworkCard.Discovery.Source(2).Compute(1).Type="Json2Csv"
NetworkCard.Discovery.Source(2).Compute(1).EntryKey="data"
NetworkCard.Discovery.Source(2).Compute(1).Properties="/controller_name;/name;/mac"
NetworkCard.Discovery.Source(2).Compute(1).Separator=";"

// Add the address Type & activateStatus
// JSONIndex;ControllerName;PortName;address;addresstype;activateStatus;
NetworkCard.Discovery.Source(2).Compute(2).Type="RightConcat"
NetworkCard.Discovery.Source(2).Compute(2).Column=4
NetworkCard.Discovery.Source(2).Compute(2).String=";MAC;"

// Union 2 and 3
// JSONIndex;ControllerName;PortName;address;addresstype;activateStatus;
NetworkCard.Discovery.Source(3).Type="TableUnion"
NetworkCard.Discovery.Source(3).Table1=%NetworkCard.Discovery.Source(1)%
NetworkCard.Discovery.Source(3).Table2=%NetworkCard.Discovery.Source(2)%

// Duplicate the Port Name
// JSONIndex;ControllerName;PortName;PortName;address;addresstype;activateStatus;
NetworkCard.Discovery.Source(3).Compute(1).Type="DuplicateColumn"
NetworkCard.Discovery.Source(3).Compute(1).Column=3

// Add the Controller Name to the Device ID
// JSONIndex;ControllerName;DeviceName;DisplayName;address;addresstype;activateStatus;
NetworkCard.Discovery.Source(3).Compute(2).Type="LeftConcat"
NetworkCard.Discovery.Source(3).Compute(2).Column=3
NetworkCard.Discovery.Source(3).Compute(2).String="-"

NetworkCard.Discovery.Source(3).Compute(3).Type="LeftConcat"
NetworkCard.Discovery.Source(3).Compute(3).Column=3
NetworkCard.Discovery.Source(3).Compute(3).String=Column(2)

// InstanceTable = Source(4)
// JSONIndex;ControllerName;DeviceName;DisplayName;address;addresstype;activateStatus;
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(3)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(3)
NetworkCard.Discovery.Instance.DisplayID=InstanceTable.Column(4)
NetworkCard.Discovery.Instance.PhysicalAddress=InstanceTable.Column(5)
NetworkCard.Discovery.Instance.PhysicalAddressType=InstanceTable.Column(6)
NetworkCard.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(2)
NetworkCard.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(7)
NetworkCard.Discovery.Instance.AttachedToDeviceType="Blade"

// Collect

// Collect is multi-instance (all instances in one shot)
NetworkCard.Collect.Type="MultiInstance"

// Get NetworkCard
// Query Array
NetworkCard.Collect.Source(1).Type="HTTP"
NetworkCard.Collect.Source(1).Method="GET"
NetworkCard.Collect.Source(1).URL="/v1/fibre_channel_interfaces/detail"
NetworkCard.Collect.Source(1).ResultContent="body"
NetworkCard.Collect.Source(1).AuthenticationToken=%Enclosure.Discovery.Source(1)%
NetworkCard.Collect.Source(1).Header="X-Auth-Token: %{AUTHENTICATIONTOKEN}"

// Convert the JSON
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;
NetworkCard.Collect.Source(1).Compute(1).Type="Json2Csv"
NetworkCard.Collect.Source(1).Compute(1).EntryKey="data/link_info"
NetworkCard.Collect.Source(1).Compute(1).Properties="../controller_name;../fc_port_name;/link_speed;/link_status;/operational_status"
NetworkCard.Collect.Source(1).Compute(1).Separator=";"

// Remove text from the speed
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;
NetworkCard.Collect.Source(1).Compute(2).Type="Replace"
NetworkCard.Collect.Source(1).Compute(2).Column=4
NetworkCard.Collect.Source(1).Compute(2).Replace="plat_fc_link_speed_"
NetworkCard.Collect.Source(1).Compute(2).ReplaceBy=""

NetworkCard.Collect.Source(1).Compute(3).Type="Replace"
NetworkCard.Collect.Source(1).Compute(3).Column=4
NetworkCard.Collect.Source(1).Compute(3).Replace="G"
NetworkCard.Collect.Source(1).Compute(3).ReplaceBy="000"

// Remove text from the linkstatus
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;
NetworkCard.Collect.Source(1).Compute(4).Type="Replace"
NetworkCard.Collect.Source(1).Compute(4).Column=5
NetworkCard.Collect.Source(1).Compute(4).Replace="plat_fc_link_status_"
NetworkCard.Collect.Source(1).Compute(4).ReplaceBy=""

// Remove text from the status
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;
NetworkCard.Collect.Source(1).Compute(5).Type="Replace"
NetworkCard.Collect.Source(1).Compute(5).Column=6
NetworkCard.Collect.Source(1).Compute(5).Replace="plat_fc_operational_status_"
NetworkCard.Collect.Source(1).Compute(5).ReplaceBy=""

// Get NetworkCard
// Query Array
NetworkCard.Collect.Source(2).Type="HTTP"
NetworkCard.Collect.Source(2).Method="GET"
NetworkCard.Collect.Source(2).URL="/v1/network_interfaces/detail"
NetworkCard.Collect.Source(2).ResultContent="body"
NetworkCard.Collect.Source(2).AuthenticationToken=%Enclosure.Discovery.Source(1)%
NetworkCard.Collect.Source(2).Header="X-Auth-Token: %{AUTHENTICATIONTOKEN}"

// Convert the JSON
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;
NetworkCard.Collect.Source(2).Compute(1).Type="Json2Csv"
NetworkCard.Collect.Source(2).Compute(1).EntryKey="data"
NetworkCard.Collect.Source(2).Compute(1).Properties="/controller_name;/name;/link_speed;/link_status"
NetworkCard.Collect.Source(2).Compute(1).Separator=";"

// Add the address Type
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;
NetworkCard.Collect.Source(2).Compute(2).Type="RightConcat"
NetworkCard.Collect.Source(2).Compute(2).Column=5
NetworkCard.Collect.Source(2).Compute(2).String=";"

// Remove text from the speed
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;
NetworkCard.Collect.Source(2).Compute(3).Type="Replace"
NetworkCard.Collect.Source(2).Compute(3).Column=4
NetworkCard.Collect.Source(2).Compute(3).Replace="link_speed_"
NetworkCard.Collect.Source(2).Compute(3).ReplaceBy=""

NetworkCard.Collect.Source(2).Compute(4).Type="Replace"
NetworkCard.Collect.Source(2).Compute(4).Column=4
NetworkCard.Collect.Source(2).Compute(4).Replace="G"
NetworkCard.Collect.Source(2).Compute(4).ReplaceBy="000"

NetworkCard.Collect.Source(2).Compute(5).Type="Replace"
NetworkCard.Collect.Source(2).Compute(5).Column=4
NetworkCard.Collect.Source(2).Compute(5).Replace="M"
NetworkCard.Collect.Source(2).Compute(5).ReplaceBy=""

// Remove text from the linkStatus
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;
NetworkCard.Collect.Source(2).Compute(6).Type="Replace"
NetworkCard.Collect.Source(2).Compute(6).Column=5
NetworkCard.Collect.Source(2).Compute(6).Replace="link_status_"
NetworkCard.Collect.Source(2).Compute(6).ReplaceBy=""

// Union 2 and 3
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;
NetworkCard.Collect.Source(3).Type="TableUnion"
NetworkCard.Collect.Source(3).Table1=%NetworkCard.Collect.Source(1)%
NetworkCard.Collect.Source(3).Table2=%NetworkCard.Collect.Source(2)%

// Add the Controller Name to the Device ID
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;
NetworkCard.Collect.Source(3).Compute(1).Type="LeftConcat"
NetworkCard.Collect.Source(3).Compute(1).Column=3
NetworkCard.Collect.Source(3).Compute(1).String="-"

NetworkCard.Collect.Source(3).Compute(2).Type="LeftConcat"
NetworkCard.Collect.Source(3).Compute(2).Column=3
NetworkCard.Collect.Source(3).Compute(2).String=Column(2)

// Translate Link Status
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;
NetworkCard.Collect.Source(3).Compute(3).Type="Translate"
NetworkCard.Collect.Source(3).Compute(3).Column=5
NetworkCard.Collect.Source(3).Compute(3).TranslationTable="LinkStatusTranslationTable"

LinkStatusTranslationTable("up")="OK"
LinkStatusTranslationTable("down")="WARN"
LinkStatusTranslationTable(Default)="UNKNOWN"

// Translate Link Status
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;portstatusinformation;
NetworkCard.Collect.Source(3).Compute(4).Type="DuplicateColumn"
NetworkCard.Collect.Source(3).Compute(4).Column=6

// Translate Link Status
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;portstatusinformation;
NetworkCard.Collect.Source(3).Compute(5).Type="Translate"
NetworkCard.Collect.Source(3).Compute(5).Column=6
NetworkCard.Collect.Source(3).Compute(5).TranslationTable="PortStatusTranslationTable"

PortStatusTranslationTable("operational")="OK"
PortStatusTranslationTable(Default)="WARN"

// Value Table
// JSONIndex;ControllerName;PortName;linkspeed;linkstatus;portstatus;portstatusinformation;
NetworkCard.Collect.ValueTable=%NetworkCard.Collect.Source(3)%
NetworkCard.Collect.DeviceID=ValueTable.Column(3)
NetworkCard.Collect.LinkStatus=ValueTable.Column(5)
NetworkCard.Collect.LinkSpeed=ValueTable.Column(4)
NetworkCard.Collect.Status=ValueTable.Column(6)
NetworkCard.Collect.StatusInformation=ValueTable.Column(7)
