//
//
//                 C O N N E C T O R
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//                  MS_HW_IBMAIXHBA.hdf
//
//      Supports: IBM AIX machines
//		Monitors: HBA
//      Connects to: different AIX standard tools
//
//

//
// HEADER
//

hdf.DisplayName="IBM AIX - HBA"
hdf.TypicalPlatform="IBM POWER"
hdf.ReliesOn="IBM AIX system commands (lsdev, lsattr, fcstat, etc.)"
hdf.Comments="Provides hardware status information for the fiber channel HBA cards on IBM AIX systems."
hdf.Version="1.0"
hdf.RemoteSupport="true"
hdf.AppliesToOS="RS6000"

// Sudo-able commands
//Sudo(1).Command="/usr/sbin/fcstat"

//
// DETECTION
//

// OS should be AIX (whatever version)
Detection.Criteria(1).Type="OS"
Detection.Criteria(1).KeepOnly="RS6000"

// The command fcstat must be installed
// (installed by default with AIX 5.3 (Technology Level 5) and AIX 5.2 ML08, whatever that means)
// The fcstat file is installed with the devices.common.IBM.fc.rte fileset
Detection.Criteria(2).Type="OSCommand"
Detection.Criteria(2).CommandLine="/bin/ls /usr/sbin/fcstat"
Detection.Criteria(2).ExpectedResult="^/usr/sbin/fcstat$"

// The system must have some fcsX devices
Detection.Criteria(3).Type="OSCommand"
Detection.Criteria(3).CommandLine="/usr/sbin/lsdev -Cc adapter"
Detection.Criteria(3).ExpectedResult="^fcs[0-9] "


//
// Network cards
//

//
// Discovery

// Source(2) = output of embedded script 1
// DeviceID;Model;WWN;SerialNumber;PortType;Speed;
NetworkCard.Discovery.Source(1).Type="OsCommand"
NetworkCard.Discovery.Source(1).CommandLine="/bin/sh %EmbeddedFile(1)%"
NetworkCard.Discovery.Source(1).KeepOnlyRegExp="^MSHW;"
NetworkCard.Discovery.Source(1).Separators=";"
NetworkCard.Discovery.Source(1).SelectColumns="2,3,4,5,6,7"

// Add "HBA FC Port (" on the left of PortType and ")" on its right
NetworkCard.Discovery.Source(1).Compute(1).Type="LeftConcat"
NetworkCard.Discovery.Source(1).Compute(1).Column=5
NetworkCard.Discovery.Source(1).Compute(1).String="HBA FC Port ("

NetworkCard.Discovery.Source(1).Compute(2).Type="RightConcat"
NetworkCard.Discovery.Source(1).Compute(2).Column=5
NetworkCard.Discovery.Source(1).Compute(2).String=")"

// InstanceTable = Source(1)
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(1)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(1)
NetworkCard.Discovery.Instance.Model=InstanceTable.Column(2)
NetworkCard.Discovery.Instance.PhysicalAddress=InstanceTable.Column(3)
NetworkCard.Discovery.Instance.PhysicalAddressType="WWN"
NetworkCard.Discovery.Instance.SerialNumber=InstanceTable.Column(4)
NetworkCard.Discovery.Instance.DeviceType=InstanceTable.Column(5)
NetworkCard.Discovery.Instance.Bandwidth=InstanceTable.Column(6)


//
// Collect

// Collect type is multi-instance
NetworkCard.Collect.Type="MonoInstance"

// Source(1) = output of fcstat %hbaID%
// Moved to Embedded file (3)
// NetworkCard.Collect.Source(1).CommandLine="/usr/sbin/fcstat %NetworkCard.Collect.DeviceID%"
NetworkCard.Collect.Source(1).Type="OsCommand"
NetworkCard.Collect.Source(1).CommandLine="/bin/sh %EmbeddedFile(2)% %NetworkCard.Collect.DeviceID%"
NetworkCard.Collect.Source(1).KeepOnlyRegExp="^MSHW;"
NetworkCard.Collect.Source(1).Separators=";"
NetworkCard.Collect.Source(1).SelectColumns="2,3,4,5,6,7,8,9"

// Value table = Source(1)
NetworkCard.Collect.ValueTable=%NetworkCard.Collect.Source(1)%
//NetworkCard.Collect.Status=ValueTable.Column(1)
NetworkCard.Collect.LinkStatus=ValueTable.Column(1)
NetworkCard.Collect.LinkSpeed=ValueTable.Column(2)
NetworkCard.Collect.ErrorCount=ValueTable.Column(3)
NetworkCard.Collect.ReceivedPackets=ValueTable.Column(4)
NetworkCard.Collect.TransmittedPackets=ValueTable.Column(5)
NetworkCard.Collect.ReceivedBytes=ValueTable.Column(6)
NetworkCard.Collect.TransmittedBytes=ValueTable.Column(7)





////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(1) = shell script that lists the HBA
///    with all of their characteristics
///
/////////////////////////////////////////////////////////
EmbeddedFile(1):
#!/bin/sh

LSDEV=/usr/sbin/lsdev
LSDEVARGS="-C -c adapter -F name"

LSCFG=/usr/sbin/lscfg
LSCFGARGS="-vp -l "

FCSTAT="/usr/sbin/fcstat"
FCSTATARGS=

#LSDEV=cat
#LSDEVARGS=/tmp/lsdevfcs0

#LSCFG=cat
#LSCFGARGS=/tmp/lscfg

#FCSTAT=cat
#FCSTATARGS=/tmp/fcstat

for HBA in `$LSDEV $LSDEVARGS|/usr/bin/grep "^fcs[0-9][0-9]*$"`
do
	HBAMODEL=`$LSCFG $LSCFGARGS$HBA |
			  /bin/tr "." " " |
			  /usr/bin/awk '/^ *Model: / { printf $2; for (i=3 ; i<NF ; i++) { printf " " $i; } printf "\n"; }'`

	if [ $( /usr/sbin/lsdev -p $HBA | grep fscsi | grep Avai | wc -l ) -ne 0 ]; then
		if [ $( ( /usr/sbin/lspath ) | grep $(/usr/sbin/lsdev -p $HBA -r name) | grep -v hdiskpower | grep Enab | wc -l ) -o $( ( /usr/sbin/lsdev -Cc tape ) | grep $(lsdev -p $HBA |  grep fscsi | awk '{print $3}') | grep Avai | wc -l ) -ne 0 ]; then
			$FCSTAT $FCSTATARGS$HBA | /usr/bin/awk -v hbaID=$HBA -v hbaModel="$HBAMODEL" 'BEGIN {
	 		#SETTING THIS TO "1" INSTEAD OF ZERO AS A TEMPORARY FIX.
				foundValidInformation = 1
			}
			/^FIBRE CHANNEL STATISTICS REPORT:/ {
				foundValidInformation = 1;
			}
			/^ *Port Speed \(running\): +[0-9\.]+ GBIT/ {
				speed = $4 * 1000
			}
			/^ *Port Type: / {
				portType = $3
				for (i=4 ; i<NF ; i++)
				{
					portType = portType " " $i
				}
			}
			/^ *Port WWN: / {
				wwnAddress = $3
			}
			/^ *World Wide Port Name: / {
				wwnAddress = $5
			}
			/^ *Serial Number: / {
				serialNumber = $3
			}
			END {
				gsub("0x", "", wwnAddress)
				gsub("0X", "", wwnAddress)
				if (foundValidInformation == 1)
				{
					print "MSHW;" hbaID ";" hbaModel ";" wwnAddress ";" serialNumber ";" portType ";" speed ";"
				}
			}'
		else
    		       echo "MSHW;"$HBA";"$HBAMODEL";;;Unmonitored - No Child Devices;;"
    		fi
	else
		echo "MSHW;"$HBA";"$HBAMODEL";;;Unplumbed;;"
	fi
done
EmbeddedFile(1).End
////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(2) = awk script that takes the output
///    of entstat and report its status, link status and errors
///
/////////////////////////////////////////////////////////
EmbeddedFile(2):
# if [ $( ( lsdev -Cc disk; lsdev -Cc tape ) | grep $(lsdev -p $1 | grep fscsi | awk '{print $3}') | grep -v hdiskpower | grep Avai | wc -l ) -ne 0 ]; then
FSC=$(/usr/sbin/lsdev -p $1 -r name |/usr/bin/grep fscsi )

# Manage Multipathing
if [  $((/usr/sbin/lspath -p $FSC -s Enabled ; /usr/sbin/lsdev -p $FSC |grep Available)| /usr/bin/grep -v hdiskpower  | /usr/bin/wc -l) -ne 0 ]; then
   /usr/sbin/fcstat $1 | awk '
              BEGIN {
                    nicStatus = "";
                    errorFrames = 0;
                    dumpFrames = 0;
                    receivedFrames = 0;
                    transmittedFrames = 0;
                    linkStatus = "WARN";
                    inputBytes = 0;
                    outputBytes = 0;
                    speed = "";
                    }
              ($1 == "Frames:") {
                                 transmittedFrames = $2
                                 receivedFrames = $3
                                }
              ($1 == "Error" && $2 == "Frames:") {
                                                  errorFrames = $3
                                                 }
              ($1 == "Dumped" && $2 == "Frames:") {
                                                   dumpFrames = $3
                                                  }
              /^ *Port Speed \(running\): +[0-9]+ GBIT/ {
                                                         linkStatus = "OK"
                                                         speed = $4 * 1000
                                                        }
              /^ +Input Bytes: +[0-9]+ *$/ {
                                            inputBytes = inputBytes + $3
                                           }
              /^ +Output Bytes: +[0-9]+ *$/ {
                                             outputBytes = outputBytes + $3
                                            }
              END {
                   totalErrors = errorFrames + dumpFrames;
                   printf("MSHW;%s;%.0f;%.0f;%.0f;%.0f;%.0f;%.0f;\n", linkStatus, speed, totalErrors, receivedFrames, transmittedFrames, inputBytes, outputBytes);
                  }
                  '
  else
      echo "MSHW;WARN;;;;;;;"
fi
EmbeddedFile(2).End
////////////////////////////////////////////////////////////////////
