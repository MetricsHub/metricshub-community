//
//
//                  C O N N E C T O R
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//            MS_HW_IbmNetfinityManager.hdf
//
//      Supports: IBM Netfinity Manager 5.20.x under Windows
//
//

// HEADER

hdf.DisplayName="IBM Netfinity Manager 5.20.x - Disks"
hdf.TypicalPlatform="IBM Netfinity"
hdf.ReliesOn="IBM Netfinity Manager 5.20.x"
hdf.Version="1.0"
hdf.Comments="This connector provides IBM ServerRAID monitoring through the IBM Netfinity Manager Services SNMP sub-agent which supports almost all old IBM servers (Netfinity) under Windows."
hdf.RemoteSupport="true"
hdf.AppliesToOS="NT"

// DETECTION

// Check that there is something behing the SNMP OID: ....ibm(2).ibmProd(6).netFinity(71).DmiMibs(200).NetFinitySystemsMIB(1).dmtfGroups(1).tRaidAdapterInformation(38).eRaidAdapterInformation(1)
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.2.6.71.200.1.1.38.1"


//
//  DISK CONTROLLERS
//

//
// Discovery

// Source(1) = the tRaidAdapterInformation SNMP table
// DeviceID;AdapterIndex
DiskController.Discovery.Source(1).Type="SnmpTable"
DiskController.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.2.6.71.200.1.1.38.1"
DiskController.Discovery.Source(1).SnmpTableSelectColumns="ID,1"

// InstanceTable = Source(1)
DiskController.Discovery.InstanceTable=%DiskController.Discovery.Source(1)%
DiskController.Discovery.Instance.Vendor="IBM"
DiskController.Discovery.Instance.Model="ServeRAID"
DiskController.Discovery.Instance.ControllerNumber=InstanceTable.Column(2)
DiskController.Discovery.Instance.DeviceID=InstanceTable.Column(1)

//
// No collect for the disk controllers


//
//  PHYSICAL DISKS
//

//
// Discovery

// Source(1) = the tRaidPhysicalDriveInformation SNMP table
// DeviceID;ControllerNumber;SizeKB
PhysicalDisk.Discovery.Source(1).Type="SnmpTable"
PhysicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.2.6.71.200.1.1.40.1"
PhysicalDisk.Discovery.Source(1).SnmpTableSelectColumns="ID,2,3"

// Multiply the size column by 1024 to obtain bytes
// DeviceID;ControllerNumber;Size
PhysicalDisk.Discovery.Source(1).Compute(1).Type="Multiply"
PhysicalDisk.Discovery.Source(1).Compute(1).Column="3"
PhysicalDisk.Discovery.Source(1).Compute(1).MultiplyBy="1024"

// InstanceTable = Source(1)
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(1)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PhysicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(2)
PhysicalDisk.Discovery.Instance.Size=InstanceTable.Column(3)

//
// Collect

// Collect-type = mono-instance
PhysicalDisk.Collect.Type="MultiInstance"

// Source(1) = the tRaidPhysicalDriveInformation SNMP table
// ID;a40RaidAdapterIndex;a40ChannelNumber;a40TargetNumber
PhysicalDisk.Collect.Source(1).Type="SnmpTable"
PhysicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.2.6.71.200.1.1.40.1"
PhysicalDisk.Collect.Source(1).SnmpTableSelectColumns="ID,2,4,5"

// Build a string like "Physical Disk (Adapter 1, Channel 1, Device 6) Status"
// from the AdapterIndex, ChannelNumber and TargetNumber numbers
// This will match with the a40AttributeName of the tNetfinityAttributeGroups table
// ID;a4AttributeName;a40ChannelNumber;a40TargetNumber
PhysicalDisk.Collect.Source(1).Compute(1).Type="LeftConcat"
PhysicalDisk.Collect.Source(1).Compute(1).Column="2"
PhysicalDisk.Collect.Source(1).Compute(1).String="Physical Disk (Adapter "

PhysicalDisk.Collect.Source(1).Compute(2).Type="RightConcat"
PhysicalDisk.Collect.Source(1).Compute(2).Column="2"
PhysicalDisk.Collect.Source(1).Compute(2).String=", Channel "

PhysicalDisk.Collect.Source(1).Compute(3).Type="RightConcat"
PhysicalDisk.Collect.Source(1).Compute(3).Column="2"
PhysicalDisk.Collect.Source(1).Compute(3).String=Column(3)

PhysicalDisk.Collect.Source(1).Compute(4).Type="RightConcat"
PhysicalDisk.Collect.Source(1).Compute(4).Column="2"
PhysicalDisk.Collect.Source(1).Compute(4).String=", Device "

PhysicalDisk.Collect.Source(1).Compute(5).Type="RightConcat"
PhysicalDisk.Collect.Source(1).Compute(5).Column="2"
PhysicalDisk.Collect.Source(1).Compute(5).String=Column(4)

PhysicalDisk.Collect.Source(1).Compute(6).Type="RightConcat"
PhysicalDisk.Collect.Source(1).Compute(6).Column="2"
PhysicalDisk.Collect.Source(1).Compute(6).String=") Status"

// Source(2) = the tNetfinityAttributeGroups table
// a4AttributeName;a4CurrentValueTextual
PhysicalDisk.Collect.Source(2).Type="SnmpTable"
PhysicalDisk.Collect.Source(2).SnmpTableOid="1.3.6.1.4.1.2.6.71.200.2.1.4.1"
PhysicalDisk.Collect.Source(2).SnmpTableSelectColumns="4,5"

// Source(3) = table joint between Source(1) and Source(2) on the a4AttributeName
// ID;a4AttributeName;a40ChannelNumber;a40TargetNumber;a4AttributeName;a4CurrentValueTextual
PhysicalDisk.Collect.Source(3).Type="TableJoint"
PhysicalDisk.Collect.Source(3).LeftTable=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.Source(3).RightTable=%PhysicalDisk.Collect.Source(2)%
PhysicalDisk.Collect.Source(3).LeftKeyColumn="2"
PhysicalDisk.Collect.Source(3).RightKeyColumn="1"

// Duplicate the a4CurrentValueTextual column
// ID;a4AttributeName;a40ChannelNumber;a40TargetNumber;a4AttributeName;a4CurrentValueTextual;a4CurrentValueTextual
PhysicalDisk.Collect.Source(3).Compute(1).Type="DuplicateColumn"
PhysicalDisk.Collect.Source(3).Compute(1).Column="6"

// Translate the first a4CurrentValueTextual into a PATROL status
// ID;a4AttributeName;a40ChannelNumber;a40TargetNumber;a4AttributeName;PATROLStatus;a4CurrentValueTextual
PhysicalDisk.Collect.Source(3).Compute(2).Type="Translate"
PhysicalDisk.Collect.Source(3).Compute(2).Column="6"
PhysicalDisk.Collect.Source(3).Compute(2).TranslationTable="PhysicalDiskStatusTranslationTable"

// The PhysicalDiskStatusTranslationTable
PhysicalDiskStatusTranslationTable("Online")="OK"
PhysicalDiskStatusTranslationTable("Hot Spare")="OK"
PhysicalDiskStatusTranslationTable("Defunct")="ALARM"
PhysicalDiskStatusTranslationTable("PFA")="WARN"
PhysicalDiskStatusTranslationTable("Standby")="OK"
PhysicalDiskStatusTranslationTable("Defunct Hot Spare")="WARN"
PhysicalDiskStatusTranslationTable("Standby Hot Spare")="OK"
PhysicalDiskStatusTranslationTable("Ready")="OK"
PhysicalDiskStatusTranslationTable("Rebuild")="WARN"
PhysicalDiskStatusTranslationTable(Default)="UNKNOWN"

// Translate the second status column into a more readable PATROL status
// PATROLstatus;StatusInformation;
PhysicalDisk.Collect.Source(3).Compute(3).Type="Translate"
PhysicalDisk.Collect.Source(3).Compute(3).Column="7"
PhysicalDisk.Collect.Source(3).Compute(3).TranslationTable="PhysicalDiskStatusInformationTranslationTable"

// The PhysicalDiskStatusInformationTranslationTable
PhysicalDiskStatusInformationTranslationTable("Online")=""
PhysicalDiskStatusInformationTranslationTable("Hot Spare")="Hot Spare"
PhysicalDiskStatusInformationTranslationTable("Defunct")="Defunct"
PhysicalDiskStatusInformationTranslationTable("PFA")="Predicted failure"
PhysicalDiskStatusInformationTranslationTable("Standby")="Standby"
PhysicalDiskStatusInformationTranslationTable("Defunct Hot Spare")="Defunct Hot Spare"
PhysicalDiskStatusInformationTranslationTable("Standby Hot Spare")="Standby Hot Spare"
PhysicalDiskStatusInformationTranslationTable("Ready")="Ready"
PhysicalDiskStatusInformationTranslationTable("Rebuild")="Rebuild"
PhysicalDiskStatusInformationTranslationTable(Default)="Unknown Status"

// ValueTable = Source(1)
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(3)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(1)
PhysicalDisk.Collect.Status=ValueTable.Column(6)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(7)

//
// LOGICAL DISKS
//

//
// Discovery

// Source(1) = the tRaidVirtualDrivesInformation
// DeviceID;ControllerNumber;SizeKB
LogicalDisk.Discovery.Source(1).Type="SnmpTable"
LogicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.2.6.71.200.1.1.39.1"
LogicalDisk.Discovery.Source(1).SnmpTableSelectColumns="ID,2,4"

// Multiply the size by 1024 to obtain bytes
// DeviceID;ControllerNumber;Size
LogicalDisk.Discovery.Source(1).Compute(1).Type="Multiply"
LogicalDisk.Discovery.Source(1).Compute(1).Column="3"
LogicalDisk.Discovery.Source(1).Compute(1).MultiplyBy="1024"

// InstanceTable = Source(1)
LogicalDisk.Discovery.InstanceTable=%LogicalDisk.Discovery.Source(1)%
LogicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
LogicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(2)
LogicalDisk.Discovery.Instance.Size=InstanceTable.Column(3)

//
// Collect

// Collect type is: mono-instance
LogicalDisk.Collect.Type="MultiInstance"

// Source(1) = the tRaidVirtualDrivesInformation table
// DeviceID;a39RaidVirtualDriveIndex;a39RaidAdapterIndex
LogicalDisk.Collect.Source(1).Type="SnmpTable"
LogicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.2.6.71.200.1.1.39.1"
LogicalDisk.Collect.Source(1).SnmpTableSelectColumns="ID,1,2"

// Build a string like "System Drive x (Adapter y) Status"
// from the Drive Index and the Adapter Index
// This string will match with entries in the tNetfinityAttributeGroups table
// DeviceID;AttributeName;RaidIndex
LogicalDisk.Collect.Source(1).Compute(1).Type="LeftConcat"
LogicalDisk.Collect.Source(1).Compute(1).Column="2"
LogicalDisk.Collect.Source(1).Compute(1).String="System Drive "

LogicalDisk.Collect.Source(1).Compute(2).Type="RightConcat"
LogicalDisk.Collect.Source(1).Compute(2).Column="2"
LogicalDisk.Collect.Source(1).Compute(2).String=" (Adapter "

LogicalDisk.Collect.Source(1).Compute(3).Type="RightConcat"
LogicalDisk.Collect.Source(1).Compute(3).Column="2"
LogicalDisk.Collect.Source(1).Compute(3).String=Column(3)

LogicalDisk.Collect.Source(1).Compute(4).Type="RightConcat"
LogicalDisk.Collect.Source(1).Compute(4).Column="2"
LogicalDisk.Collect.Source(1).Compute(4).String=") Status"

// Source(2) = the tNetfinityAttributeGroups table
// a4AttributeName;a4CurrentValueTextual
LogicalDisk.Collect.Source(2).Type="SnmpTable"
LogicalDisk.Collect.Source(2).SnmpTableOid="1.3.6.1.4.1.2.6.71.200.2.1.4.1"
LogicalDisk.Collect.Source(2).SnmpTableSelectColumns="4,5"

// Source(3) = table jointure between Source(1) and Source(2)
// The key is the AttributeName (that is hopefully unique...)
// DeviceID;AttributeName;RaidIndex;a4AttributeName;a4CurrentValueTextual
LogicalDisk.Collect.Source(3).Type="TableJoint"
LogicalDisk.Collect.Source(3).LeftTable=%LogicalDisk.Collect.Source(1)%
LogicalDisk.Collect.Source(3).RightTable=%LogicalDisk.Collect.Source(2)%
LogicalDisk.Collect.Source(3).LeftKeyColumn="2"
LogicalDisk.Collect.Source(3).RightKeyColumn="1"

// Duplicate the CurrentValueTextual column
// DeviceID;AttributeName;RaidIndex;a4AttributeName;a4CurrentValueTextual;a4CurrentValueTextual
LogicalDisk.Collect.Source(3).Compute(1).Type="DuplicateColumn"
LogicalDisk.Collect.Source(3).Compute(1).Column="5"

// Translate the first CurrentValueTextual into a PATROL Status
// DeviceID;AttributeName;RaidIndex;a4AttributeName;PATROLStatus;a4CurrentValueTextual
LogicalDisk.Collect.Source(3).Compute(2).Type="Translate"
LogicalDisk.Collect.Source(3).Compute(2).Column="5"
LogicalDisk.Collect.Source(3).Compute(2).TranslationTable="LogicalDiskStatusTranslationTable"

// Translate the second CurrentValueTextual into a more readable string
// DeviceID;AttributeName;RaidIndex;a4AttributeName;PATROLStatus;StatusInformation
LogicalDisk.Collect.Source(3).Compute(3).Type="Translate"
LogicalDisk.Collect.Source(3).Compute(3).Column="6"
LogicalDisk.Collect.Source(3).Compute(3).TranslationTable="LogicalDiskStatusInformationTranslationTable"

// The ValueTable = Source(3)
LogicalDisk.Collect.ValueTable=%LogicalDisk.Collect.Source(3)%
LogicalDisk.Collect.DeviceID=ValueTable.Column(1)
LogicalDisk.Collect.Status=ValueTable.Column(5)
LogicalDisk.Collect.StatusInformation=ValueTable.Column(6)

//  The LogicalDiskStatusTranslationTable
LogicalDiskStatusTranslationTable("Online")="OK"
LogicalDiskStatusTranslationTable("Critical")="WARN"
LogicalDiskStatusTranslationTable("Offline")="ALARM"
LogicalDiskStatusTranslationTable(Default)="UNKNOWN"

// The LogicalDiskStatusInformationTranslationTable
LogicalDiskStatusInformationTranslationTable("Online")=""
LogicalDiskStatusInformationTranslationTable("Critical")="Critical"
LogicalDiskStatusInformationTranslationTable("Offline")="Offline"
LogicalDiskStatusInformationTranslationTable(Default)="Unknown Status"

