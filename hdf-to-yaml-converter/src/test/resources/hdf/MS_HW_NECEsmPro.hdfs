//
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by MASAI Systems (c)
//
//                   MS_HW_NECESMPRO
//
//      Supports: NEC Express5800 Servers through NEC ESMPRO
//
//
//

// HEADER

hdf.DisplayName="NEC ESMPRO Agent"
hdf.TypicalPlatform="NEC Express5800"
hdf.ReliesOn="NEC ESMPRO Agent"
hdf.Version="1.0"
hdf.Comments="This connector provides hardware monitoring through the NEC ESMPRO Agent which supports almost all NEC Express5800 and some BULL NovaScale servers running Windows and Linux."
hdf.RemoteSupport="true"
hdf.AppliesToOS="NT,Linux"

// DETECTION

Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.119.2.2.4.4.1.2"


// Enclosure : computer

// Get the model name
Enclosure.Discovery.Source(1).Type="SnmpTable"
Enclosure.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.119.2.2.4.4.1.2"
Enclosure.Discovery.Source(1).SnmpTableSelectColumns="1,3"

Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Instance.DeviceID="Computer01"
Enclosure.Discovery.Instance.Vendor=InstanceTable.Column(2)
Enclosure.Discovery.Instance.Model=InstanceTable.Column(1)
Enclosure.Discovery.Instance.Type="Computer"

// CPU

// CPU discovery
CPU.Discovery.Source(1).Type="SnmpTable"
CPU.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.119.2.2.4.4.2.2.1.22.1"

// ID,Vendor,Model,Speed
CPU.Discovery.Source(1).SnmpTableSelectColumns="ID,2,3,4"

// Translate memory vendor
CPU.Discovery.Source(1).Compute(1).Type="Translate"
CPU.Discovery.Source(1).Compute(1).Column="2"
CPU.Discovery.Source(1).Compute(1).TranslationTable="cpuVendorTranslationTable"

CPU.Discovery.InstanceTable=%CPU.Discovery.Source(1)%
CPU.Discovery.Instance.DeviceID=InstanceTable.Column(1)
CPU.Discovery.Instance.Vendor=InstanceTable.Column(2)
CPU.Discovery.Instance.Model=InstanceTable.Column(3)
CPU.Discovery.Instance.MaximumSpeed=InstanceTable.Column(4)

cpuVendorTranslationTable(1)=""
cpuVendorTranslationTable(2)=""
cpuVendorTranslationTable(3)="Intel"
cpuVendorTranslationTable(4)="Mips"
cpuVendorTranslationTable(default)=""

// CPU collect
CPU.Collect.Type="MonoInstance"
CPU.Collect.Source(1).Type="SnmpGet"
CPU.Collect.Source(1).SnmpOid="1.3.6.1.4.1.119.2.2.4.4.2.2.1.22.1.12.%CPU.Collect.DeviceID%"

// Duplicate this status, because we will translate it two times
CPU.Collect.Source(1).Compute(1).Type="DuplicateColumn"
CPU.Collect.Source(1).Compute(1).Column="1"

CPU.Collect.Source(1).Compute(2).Type="Translate"
CPU.Collect.Source(1).Compute(2).Column="1"
CPU.Collect.Source(1).Compute(2).TranslationTable="GenericStatusTranslationTable"

CPU.Collect.Source(1).Compute(3).Type="Translate"
CPU.Collect.Source(1).Compute(3).Column="2"
CPU.Collect.Source(1).Compute(3).TranslationTable="GenericStatusInformationTranslationTable"

// ValueTable = Source(1)
cpu.Collect.ValueTable=%CPU.Collect.Source(1)%
cpu.Collect.Status=ValueTable.Column(1)
cpu.Collect.StatusInformation=ValueTable.Column(2)

// MEMORY

// Memory discovery
Memory.Discovery.Source(1).Type="SnmpTable"
Memory.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.119.2.2.4.4.4.2.1.9.1"

// ID,Type,Size
Memory.Discovery.Source(1).SnmpTableSelectColumns="ID,3,4"

// Remove modules for which we have no size
Memory.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
Memory.Discovery.Source(1).Compute(1).Column="3"
Memory.Discovery.Source(1).Compute(1).RegExp="^0$"

// Convert memory size to MB
Memory.Discovery.Source(1).Compute(2).Type="Divide"
Memory.Discovery.Source(1).Compute(2).Column="3"
Memory.Discovery.Source(1).Compute(2).DivideBy="1024"

// Translate memory type
Memory.Discovery.Source(1).Compute(3).Type="Translate"
Memory.Discovery.Source(1).Compute(3).Column="2"
Memory.Discovery.Source(1).Compute(3).TranslationTable="memoryTypeTranslationTable"

Memory.Discovery.InstanceTable=%Memory.Discovery.Source(1)%
Memory.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Memory.Discovery.Instance.Type=InstanceTable.Column(2)
Memory.Discovery.Instance.Size=InstanceTable.Column(3)

// Memory collect
Memory.Collect.Type="MonoInstance"
Memory.Collect.Source(1).Type="SnmpGet"
Memory.Collect.Source(1).SnmpOid="1.3.6.1.4.1.119.2.2.4.4.4.2.1.9.1.5.%Memory.Collect.DeviceID%"

Memory.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Memory.Collect.Source(1).Compute(1).Column="1"

Memory.Collect.Source(1).Compute(2).Type="Translate"
Memory.Collect.Source(1).Compute(2).Column="1"
Memory.Collect.Source(1).Compute(2).TranslationTable="GenericStatusTranslationTable"

Memory.Collect.Source(1).Compute(3).Type="Translate"
Memory.Collect.Source(1).Compute(3).Column="2"
Memory.Collect.Source(1).Compute(3).TranslationTable="GenericStatusInformationTranslationTable"

Memory.Collect.ValueTable=%Memory.Collect.Source(1)%
Memory.Collect.Status=ValueTable.Column(1)
Memory.Collect.StatusInformation=ValueTable.Column(2)

memoryTypeTranslationTable(1)=""
memoryTypeTranslationTable(2)=""
memoryTypeTranslationTable(3)="SIMM"
memoryTypeTranslationTable(4)="DIMM"

// TEMPERATURES

// Temperature discovery
Temperature.Discovery.Source(1).Type="SnmpTable"
Temperature.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.119.2.2.4.4.10.2.1.2.1"
Temperature.Discovery.Source(1).SnmpTableSelectColumns="ID,2,6,11,15"
Temperature.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Temperature.Discovery.Source(1).Compute(1).Column="3"
Temperature.Discovery.Source(1).Compute(1).ValueList="3"

// Remove "-1" thresholds
Temperature.Discovery.Source(1).Compute(2).Type="Replace"
Temperature.Discovery.Source(1).Compute(2).Column="4"
Temperature.Discovery.Source(1).Compute(2).Replace="-1"
Temperature.Discovery.Source(1).Compute(2).ReplaceBy=""
Temperature.Discovery.Source(1).Compute(3).Type="Replace"
Temperature.Discovery.Source(1).Compute(3).Column="5"
Temperature.Discovery.Source(1).Compute(3).Replace="-1"
Temperature.Discovery.Source(1).Compute(3).ReplaceBy=""

Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Temperature.Discovery.Instance.TemperatureType=InstanceTable.Column(2)
Temperature.Discovery.Instance.WarningThreshold=InstanceTable.Column(4)
Temperature.Discovery.Instance.AlarmThreshold=InstanceTable.Column(5)

// Temperature collect
Temperature.Collect.Type="MonoInstance"
Temperature.Collect.Source(1).Type="SnmpGet"
Temperature.Collect.Source(1).SnmpOid="1.3.6.1.4.1.119.2.2.4.4.10.2.1.2.1.3.%Temperature.Collect.DeviceID%"
Temperature.Collect.ValueTable=%Temperature.Collect.Source(1)%
Temperature.Collect.Temperature=ValueTable.Column(1)

// FANS

// Fan discovery
Fan.Discovery.Source(1).Type="SnmpTable"
Fan.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.119.2.2.4.4.10.2.3.2.1"
Fan.Discovery.Source(1).SnmpTableSelectColumns="ID,2,4"
Fan.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Fan.Discovery.Source(1).Compute(1).Column="3"
Fan.Discovery.Source(1).Compute(1).ValueList="3"

Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.FanType=InstanceTable.Column(2)

// Fan collect
Fan.Collect.Type="MonoInstance"
Fan.Collect.Source(1).Type="SnmpGet"
Fan.Collect.Source(1).SnmpOid="1.3.6.1.4.1.119.2.2.4.4.10.2.3.2.1.3.%Fan.Collect.DeviceID%"

Fan.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Fan.Collect.Source(1).Compute(1).Column="1"
Fan.Collect.Source(1).Compute(2).Type="DuplicateColumn"
Fan.Collect.Source(1).Compute(2).Column="1"

Fan.Collect.Source(1).Compute(3).Type="Translate"
Fan.Collect.Source(1).Compute(3).Column="2"
Fan.Collect.Source(1).Compute(3).TranslationTable="GenericStatusTranslationTable"

Fan.Collect.Source(1).Compute(4).Type="Translate"
Fan.Collect.Source(1).Compute(4).Column="3"
Fan.Collect.Source(1).Compute(4).TranslationTable="GenericStatusInformationTranslationTable"

Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.Status=ValueTable.Column(2)
Fan.Collect.StatusInformation=ValueTable.Column(3)

GenericStatusTranslationTable(3)="OK"
GenericStatusTranslationTable(4)="WARN"
GenericStatusTranslationTable(5)="ALARM"
GenericStatusTranslationTable(6)="ALARM"
GenericStatusTranslationTable(7)="OK"
GenericStatusTranslationTable(8)="WARN"
GenericStatusTranslationTable(9)="OK"
GenericStatusTranslationTable(10)="ALARM"
GenericStatusTranslationTable(Default)="UNKNOWN"

GenericStatusInformationTranslationTable(3)=""
GenericStatusInformationTranslationTable(4)="Warning"
GenericStatusInformationTranslationTable(5)="Fatal"
GenericStatusInformationTranslationTable(6)="Non-recoverable"
GenericStatusInformationTranslationTable(7)="In test"
GenericStatusInformationTranslationTable(8)="Degraded"
GenericStatusInformationTranslationTable(9)="Disabled"
GenericStatusInformationTranslationTable(10)="Down"
GenericStatusInformationTranslationTable(Default)="UNKNOWN"

// VOLTAGES

// Voltage discovery
Voltage.Discovery.Source(1).Type="SnmpTable"
Voltage.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.119.2.2.4.4.10.2.2.2.1"
Voltage.Discovery.Source(1).SnmpTableSelectColumns="ID,2,5,11,19"
Voltage.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Voltage.Discovery.Source(1).Compute(1).Column="3"
Voltage.Discovery.Source(1).Compute(1).ValueList="3"

// Remove "-1" thresholds
Voltage.Discovery.Source(1).Compute(2).Type="RightConcat"
Voltage.Discovery.Source(1).Compute(2).Column="4"
Voltage.Discovery.Source(1).Compute(2).String="A"
Voltage.Discovery.Source(1).Compute(3).Type="RightConcat"
Voltage.Discovery.Source(1).Compute(3).Column="5"
Voltage.Discovery.Source(1).Compute(3).String="A"

Voltage.Discovery.Source(1).Compute(4).Type="Replace"
Voltage.Discovery.Source(1).Compute(4).Column="4"
Voltage.Discovery.Source(1).Compute(4).Replace="-1A"
Voltage.Discovery.Source(1).Compute(4).ReplaceBy=""
Voltage.Discovery.Source(1).Compute(5).Type="Replace"
Voltage.Discovery.Source(1).Compute(5).Column="5"
Voltage.Discovery.Source(1).Compute(5).Replace="-1A"
Voltage.Discovery.Source(1).Compute(5).ReplaceBy=""

Voltage.Discovery.Source(1).Compute(6).Type="Replace"
Voltage.Discovery.Source(1).Compute(6).Column="4"
Voltage.Discovery.Source(1).Compute(6).Replace="A"
Voltage.Discovery.Source(1).Compute(6).ReplaceBy=""
Voltage.Discovery.Source(1).Compute(7).Type="Replace"
Voltage.Discovery.Source(1).Compute(7).Column="5"
Voltage.Discovery.Source(1).Compute(7).Replace="A"
Voltage.Discovery.Source(1).Compute(7).ReplaceBy=""

Voltage.Discovery.InstanceTable=%Voltage.Discovery.Source(1)%
Voltage.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Voltage.Discovery.Instance.VoltageType=InstanceTable.Column(2)
Voltage.Discovery.Instance.UpperThreshold=InstanceTable.Column(4)
Voltage.Discovery.Instance.LowerThreshold=InstanceTable.Column(5)

// Voltage collect
Voltage.Collect.Type="MonoInstance"
Voltage.Collect.Source(1).Type="SnmpGet"
Voltage.Collect.Source(1).SnmpOid="1.3.6.1.4.1.119.2.2.4.4.10.2.2.2.1.3.%Voltage.Collect.DeviceID%"
Voltage.Collect.ValueTable=%Voltage.Collect.Source(1)%
Voltage.Collect.Voltage=ValueTable.Column(1)


// POWER SUPPLIES

// Power supply discovery
PowerSupply.Discovery.Source(1).Type="SnmpTable"
PowerSupply.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.119.2.2.4.4.11.2.3.3.1"
PowerSupply.Discovery.Source(1).SnmpTableSelectColumns="1"

PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)

// Power supply collect
PowerSupply.Collect.Type="MonoInstance"
PowerSupply.Collect.Source(1).Type="SnmpGet"
PowerSupply.Collect.Source(1).SnmpOid="1.3.6.1.4.1.119.2.2.4.4.11.2.3.3.1.2.%PowerSupply.Collect.DeviceID%"

PowerSupply.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(1).Column="1"
PowerSupply.Collect.Source(1).Compute(2).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(2).Column="1"

PowerSupply.Collect.Source(1).Compute(3).Type="Translate"
PowerSupply.Collect.Source(1).Compute(3).Column="2"
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="GenericStatusTranslationTable"

PowerSupply.Collect.Source(1).Compute(4).Type="Translate"
PowerSupply.Collect.Source(1).Compute(4).Column="3"
PowerSupply.Collect.Source(1).Compute(4).TranslationTable="GenericStatusInformationTranslationTable"

PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)