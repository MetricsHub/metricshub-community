////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//               by Sentry Software (c)
//
//
//      Supports: IBM FlashSystem 700/800
//                Connects to IBM FlashSystems
//


//
// Header
//

hdf.DisplayName="IBM FlashSystem 700/800"
hdf.TypicalPlatform="IBM FlashSystem"
hdf.ReliesOn="IBM FlashSystem 700/800 SNMP Agent"
hdf.Version="1.0"
hdf.Comments="This connector discovers the enclosure(s) and the disks of IBM FlashSystem 700/800s as well as the various environment sensors (temperatures, fans, power supplies). It relies on the SNMP protocol."
hdf.RemoteSupport="true"
hdf.LocalSupport="false"
hdf.AppliesToOS="Storage"

//
// Detection
//

// Verify that there is an IBM FlashSystem
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.8378.10.1"

// Enclosure

// Discovery

// Source(1) = systemType
// Version
Enclosure.Discovery.Source(1).Type="SnmpGet"
Enclosure.Discovery.Source(1).SnmpOid="1.3.6.1.4.1.8378.10.1.1"

// Source(2) = version
// Model
Enclosure.Discovery.Source(2).Type="SnmpGet"
Enclosure.Discovery.Source(2).SnmpOid="1.3.6.1.4.1.8378.10.1.0"

// Combine the two tables
// Model;Version;
Enclosure.Discovery.Source(2).Compute(1).Type="RightConcat"
Enclosure.Discovery.Source(2).Compute(1).Column=1
Enclosure.Discovery.Source(2).Compute(1).String=%Enclosure.Discovery.Source(1)%

Enclosure.Discovery.Source(2).Compute(2).Type="LeftConcat"
Enclosure.Discovery.Source(2).Compute(2).Column=2
Enclosure.Discovery.Source(2).Compute(2).String="FirmwareVersion: "


// Instance Table
// Model;Version;
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(2)%
Enclosure.Discovery.Instance.DeviceID="IBM FlashSystem"
Enclosure.Discovery.Instance.Model=InstanceTable.Column(1)
Enclosure.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(2)
Enclosure.Discovery.Instance.Type="Storage"

//
// Collect

// Collect type is mono-instance
Enclosure.Collect.Type="MultiInstance"

// Source (1) Overall Status
// Status
Enclosure.Collect.Source(1).Type="SnmpGet"
Enclosure.Collect.Source(1).SnmpOid="1.3.6.1.4.1.8378.10.1.3"

// Duplicate the Status column
// Status;Status;
Enclosure.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Enclosure.Collect.Source(1).Compute(1).Column=1

// Translate the first status column into a PATROLStatus
// PATROLStatus;Status;
Enclosure.Collect.Source(1).Compute(2).Type="Translate"
Enclosure.Collect.Source(1).Compute(2).Column=1
Enclosure.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

// The StatusTranslationTable
StatusTranslationTable("commError")="UNKNOWN"
StatusTranslationTable("Good")="OK"
StatusTranslationTable("Warning")="WARN"
StatusTranslationTable("Error")="WARN"
StatusTranslationTable("notPresent")="WARN"
StatusTranslationTable("test")="WARN"
StatusTranslationTable(Default)="ALARM"

// Translate the second status column into a more readable string
// PATROLStatus;StatusInformation;
Enclosure.Collect.Source(1).Compute(3).Type="Translate"
Enclosure.Collect.Source(1).Compute(3).Column=2
Enclosure.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

// The StatusInformationTranslationTable
StatusInformationTranslationTable("commError")="Communication Error"
StatusInformationTranslationTable("Good")=""
StatusInformationTranslationTable("Warning")="Warning"
StatusInformationTranslationTable("Error")="Error"
StatusInformationTranslationTable("notPresent")="Missing"
StatusInformationTranslationTable("test")="In Test Mode"
StatusInformationTranslationTable(Default)="Status not recognized"

// Value Table
// PATROLStatus;StatusInformation;
Enclosure.Collect.ValueTable=%Enclosure.Collect.Source(1)%
Enclosure.Collect.DeviceID="IBM FlashSystem"
Enclosure.Collect.Status=ValueTable.Column(1)
Enclosure.Collect.StatusInformation=ValueTable.Column(2)


//
// Fans
//

//
// Discovery

// Source(1) = Fan Table
// ID;Name;Units;
Fan.Discovery.Source(1).Type="SnmpTable"
Fan.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.1.6.0.1"
Fan.Discovery.Source(1).SnmpTableSelectColumns="ID,3,5"

// Duplicate the Units
// ID;Name;Units;Units;
Fan.Discovery.Source(1).Compute(1).Type="DuplicateColumn"
Fan.Discovery.Source(1).Compute(1).Column=3

// "Translate" The units.  This way it will only be
// ID;Name;SpeedActivation;Units;
Fan.Discovery.Source(1).Compute(2).Type="Translate"
Fan.Discovery.Source(1).Compute(2).Column=3
Fan.Discovery.Source(1).Compute(2).TranslationTable="rpmTranslationTable"

rpmTranslationTable("rpm")="speedActivated"
rpmTranslationTable(Default)=""

// "Translate" The units.  This way it will only be
// ID;Name;SpeedActivation;SpeedPercentActivation;
Fan.Discovery.Source(1).Compute(3).Type="Translate"
Fan.Discovery.Source(1).Compute(3).Column=4
Fan.Discovery.Source(1).Compute(3).TranslationTable="percentTranslationTable"

percentTranslationTable("percent")="speedPercentActivated"
percentTranslationTable(Default)=""

// Remove "Speed" and "Health" from the Name
// ID;Name;SpeedActivation;SpeedPercentActivation;
Fan.Discovery.Source(1).Compute(4).Type="Replace"
Fan.Discovery.Source(1).Compute(4).Column=2
Fan.Discovery.Source(1).Compute(4).Replace=" Speed"
Fan.Discovery.Source(1).Compute(4).ReplaceBy=""

Fan.Discovery.Source(1).Compute(5).Type="Replace"
Fan.Discovery.Source(1).Compute(5).Column=2
Fan.Discovery.Source(1).Compute(5).Replace=" Health"
Fan.Discovery.Source(1).Compute(5).ReplaceBy=""

// InstanceTable = Source(1)
// ID;Name;SpeedActivation;SpeedPercentActivation;
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(2)
Fan.Discovery.Instance.ParameterActivation.Speed=InstanceTable.Column(3)
Fan.Discovery.Instance.ParameterActivation.SpeedPercent=InstanceTable.Column(4)

//
// Collect

// Collect type is multi-instance
Fan.Collect.Type="MultiInstance"

// Source(1) = Fan Table
// ID;Value;Units;State;
Fan.Collect.Source(1).Type="SnmpTable"
Fan.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.1.6.0.1"
Fan.Collect.Source(1).SnmpTableSelectColumns="ID,4,5,6"

// Copy and keep only RPM
// ID;Value;Units;State;
Fan.Collect.Source(2)=%Fan.Collect.Source(1)%

// Keep only RPM
Fan.Collect.Source(2).Compute(1).Type="KeepOnlyMatchingLines"
Fan.Collect.Source(2).Compute(1).Column=3
Fan.Collect.Source(2).Compute(1).ValueList="RPM"

// Copy and keep only RPM
// ID;Percent;Speed;Units;State;
Fan.Collect.Source(2).Compute(2).Type="LeftConcat"
Fan.Collect.Source(2).Compute(2).Column=2
Fan.Collect.Source(2).Compute(2).String=";"

// Copy and keep only RPM
// ID;Value;Units;State;
Fan.Collect.Source(3)=%Fan.Collect.Source(1)%

// Keep only RPM
Fan.Collect.Source(3).Compute(1).Type="KeepOnlyMatchingLines"
Fan.Collect.Source(3).Compute(1).Column=3
Fan.Collect.Source(3).Compute(1).ValueList="percent"

// Copy and keep only RPM
// ID;Percent;Speed;Units;State;
Fan.Collect.Source(3).Compute(2).Type="RightConcat"
Fan.Collect.Source(3).Compute(2).Column=2
Fan.Collect.Source(3).Compute(2).String=";"

// Union the two collects
// ID;Percent;Speed;Units;State;
Fan.Collect.Source(4).Type="TableUnion"
Fan.Collect.Source(4).Table1=%Fan.Collect.Source(2)%
Fan.Collect.Source(4).Table2=%Fan.Collect.Source(3)%

// Duplicate the Status column
// ID;Percent;Speed;Units;State;State;
Fan.Collect.Source(4).Compute(1).Type="DuplicateColumn"
Fan.Collect.Source(4).Compute(1).Column=5

// Translate the first status column into a PATROLStatus
// ID;Percent;Speed;Units;PatrolStatus;State;
Fan.Collect.Source(4).Compute(2).Type="Translate"
Fan.Collect.Source(4).Compute(2).Column=5
Fan.Collect.Source(4).Compute(2).TranslationTable="StatusTranslationTable"

// Translate the second status column into a more readable string
// ID;Percent;Speed;Units;PatrolStatus;StatusInformation;
Fan.Collect.Source(4).Compute(3).Type="Translate"
Fan.Collect.Source(4).Compute(3).Column=6
Fan.Collect.Source(4).Compute(3).TranslationTable="StatusInformationTranslationTable"

// ValueTable = Source(4)
// ID;Percent;Speed;Units;PatrolStatus;StatusInformation;
Fan.Collect.ValueTable=%Fan.Collect.Source(4)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(5)
Fan.Collect.StatusInformation=ValueTable.Column(6)
Fan.Collect.Speed=ValueTable.Column(3)
Fan.Collect.SpeedPercent=ValueTable.Column(2)

//
// Temperatures
//

//
// Discovery

// Source(1) = Temperature Table
// ID;Type;Name;Units;
Temperature.Discovery.Source(1).Type="SnmpTable"
Temperature.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.1.6.1.1"
Temperature.Discovery.Source(1).SnmpTableSelectColumns="ID,2,3,5"

// "Translate" The units.  This way it will only be
// ID;Type;Name;TemperatureActivation;
Temperature.Discovery.Source(1).Compute(1).Type="Translate"
Temperature.Discovery.Source(1).Compute(1).Column=4
Temperature.Discovery.Source(1).Compute(1).TranslationTable="temperatureTranslationTable"

temperatureTranslationTable("C")="temperatureActivation"
temperatureTranslationTable(Default)=""

// Remove "Temperature" from the Name
// ID;Type;Name;TemperatureActivation;
Temperature.Discovery.Source(1).Compute(2).Type="Replace"
Temperature.Discovery.Source(1).Compute(2).Column=3
Temperature.Discovery.Source(1).Compute(2).Replace="Temperature"
Temperature.Discovery.Source(1).Compute(2).ReplaceBy=""

Temperature.Discovery.Source(1).Compute(3).Type="Replace"
Temperature.Discovery.Source(1).Compute(3).Column=3
Temperature.Discovery.Source(1).Compute(3).Replace="temperature"
Temperature.Discovery.Source(1).Compute(3).ReplaceBy=""

// Add the Name to the Type
// ID;DisplayID;Name;TemperatureActivation;
Temperature.Discovery.Source(1).Compute(4).Type="RightConcat"
Temperature.Discovery.Source(1).Compute(4).Column=2
Temperature.Discovery.Source(1).Compute(4).String=" "

Temperature.Discovery.Source(1).Compute(5).Type="RightConcat"
Temperature.Discovery.Source(1).Compute(5).Column=2
Temperature.Discovery.Source(1).Compute(5).String=Column(3)

// InstanceTable = Source(1)
// ID;DisplayID;Name;TemperatureActivation;
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Temperature.Discovery.Instance.DisplayID=InstanceTable.Column(2)
Temperature.Discovery.Instance.ParameterActivation.Temperature=InstanceTable.Column(4)

//
// Collect

// Collect type is multi-instance
Temperature.Collect.Type="MultiInstance"

// Source(1) = Temperature Table
// ID;Value;State;
Temperature.Collect.Source(1).Type="SnmpTable"
Temperature.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.1.6.1.1"
Temperature.Collect.Source(1).SnmpTableSelectColumns="ID,4,6"

// Duplicate the Status column
// ID;Value;State;State;
Temperature.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Temperature.Collect.Source(1).Compute(1).Column=3

// Translate the first status column into a PATROLStatus
// ID;Value;PatrolStatus;State;
Temperature.Collect.Source(1).Compute(2).Type="Translate"
Temperature.Collect.Source(1).Compute(2).Column=3
Temperature.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

// Translate the second status column into a more readable string
// ID;Value;PatrolStatus;StatusInformation;
Temperature.Collect.Source(1).Compute(3).Type="Translate"
Temperature.Collect.Source(1).Compute(3).Column=4
Temperature.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

// ValueTable = Source(1)
// ID;Value;PatrolStatus;StatusInformation;
Temperature.Collect.ValueTable=%Temperature.Collect.Source(1)%
Temperature.Collect.DeviceID=ValueTable.Column(1)
Temperature.Collect.Status=ValueTable.Column(3)
Temperature.Collect.StatusInformation=ValueTable.Column(4)
Temperature.Collect.Temperature=ValueTable.Column(2)

//
// PowerSupplys
//

//
// Discovery

// Source(1) = PowerSupply Table
// ID;Name;Units;Type;
PowerSupply.Discovery.Source(1).Type="SnmpTable"
PowerSupply.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.1.6.2.1"
PowerSupply.Discovery.Source(1).SnmpTableSelectColumns="ID,3,5,2"

// Keep only "boolean" i.e. power supply information
// ID;Name;Units;Type;
PowerSupply.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
PowerSupply.Discovery.Source(1).Compute(1).Column=3
PowerSupply.Discovery.Source(1).Compute(1).ValueList="boolean"

// Remove "Fault Detected" from the Name
// ID;Name;Units;Type;
PowerSupply.Discovery.Source(1).Compute(2).Type="Replace"
PowerSupply.Discovery.Source(1).Compute(2).Column=2
PowerSupply.Discovery.Source(1).Compute(2).Replace=" Fault Detected"
PowerSupply.Discovery.Source(1).Compute(2).ReplaceBy=""

// Add the Name to the Type
// ID;Name;Units;Type;
PowerSupply.Discovery.Source(1).Compute(3).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(3).Column=2
PowerSupply.Discovery.Source(1).Compute(3).String=" "

PowerSupply.Discovery.Source(1).Compute(4).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(4).Column=2
PowerSupply.Discovery.Source(1).Compute(4).String=Column(4)

// InstanceTable = Source(1)
// ID;Name;Units;
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(2)

//
// Collect

// Collect type is multi-instance
PowerSupply.Collect.Type="MultiInstance"

// Source(1) = PowerSupply Table
// ID;State;
PowerSupply.Collect.Source(1).Type="SnmpTable"
PowerSupply.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.1.6.2.1"
PowerSupply.Collect.Source(1).SnmpTableSelectColumns="ID,6"

// Duplicate the Status column
// ID;State;State;
PowerSupply.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(1).Column=2

// Translate the first status column into a PATROLStatus
// ID;PatrolStatus;State;
PowerSupply.Collect.Source(1).Compute(2).Type="Translate"
PowerSupply.Collect.Source(1).Compute(2).Column=2
PowerSupply.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

// Translate the second status column into a more readable string
// ID;PatrolStatus;StatusInformation;
PowerSupply.Collect.Source(1).Compute(3).Type="Translate"
PowerSupply.Collect.Source(1).Compute(3).Column=3
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

// ValueTable = Source(1)
// ID;PatrolStatus;StatusInformation;
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)


//
// Voltages
//

//
// Discovery

// Source(1) = Power Supply Table
// ID;Name;Units;Type;
Voltage.Discovery.Source(1).Type="SnmpTable"
Voltage.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.1.6.2.1"
Voltage.Discovery.Source(1).SnmpTableSelectColumns="ID,3,5,2"

// Source(2) = Battery Table
// ID;Name;Units;Type;
Voltage.Discovery.Source(2).Type="SnmpTable"
Voltage.Discovery.Source(2).SnmpTableOid="1.3.6.1.4.1.8378.10.1.6.3.1"
Voltage.Discovery.Source(2).SnmpTableSelectColumns="ID,3,5,2"

// Add a prefix to differentiate it from Power Supply Voltages
// ID;Name;Units;Type;
Voltage.Discovery.Source(2).Compute(1).Type="LeftConcat"
Voltage.Discovery.Source(2).Compute(1).Column=1
Voltage.Discovery.Source(2).Compute(1).String="Batt"

// Union the two sources
// ID;Name;Units;Type;
Voltage.Discovery.Source(3).Type="TableUnion"
Voltage.Discovery.Source(3).Table1=%Voltage.Discovery.Source(1)%
Voltage.Discovery.Source(3).Table2=%Voltage.Discovery.Source(2)%

// Keep only "volts" i.e. voltage information
// ID;Name;Units;Type;
Voltage.Discovery.Source(3).Compute(1).Type="KeepOnlyMatchingLines"
Voltage.Discovery.Source(3).Compute(1).Column=3
Voltage.Discovery.Source(3).Compute(1).ValueList="Volts"

// Remove "Temperature" from the Name
// ID;Name;Units;Type;
Voltage.Discovery.Source(3).Compute(2).Type="Replace"
Voltage.Discovery.Source(3).Compute(2).Column=2
Voltage.Discovery.Source(3).Compute(2).Replace=" Voltage"
Voltage.Discovery.Source(3).Compute(2).ReplaceBy=""

// Add the Name to the Type
// ID;Name;Units;Type;
Voltage.Discovery.Source(3).Compute(3).Type="LeftConcat"
Voltage.Discovery.Source(3).Compute(3).Column=2
Voltage.Discovery.Source(3).Compute(3).String=" "

Voltage.Discovery.Source(3).Compute(4).Type="LeftConcat"
Voltage.Discovery.Source(3).Compute(4).Column=2
Voltage.Discovery.Source(3).Compute(4).String=Column(4)

// InstanceTable = Source(1)
// ID;Name;Units;
Voltage.Discovery.InstanceTable=%Voltage.Discovery.Source(3)%
Voltage.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Voltage.Discovery.Instance.DisplayID=InstanceTable.Column(2)

//
// Collect

// Collect type is multi-instance
Voltage.Collect.Type="MultiInstance"

// Source(1) = Voltage Table
// ID;State;
Voltage.Collect.Source(1).Type="SnmpTable"
Voltage.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.1.6.2.1"
Voltage.Collect.Source(1).SnmpTableSelectColumns="ID,6"

// Source(2) = Battery Table
// ID;State;
Voltage.Collect.Source(2).Type="SnmpTable"
Voltage.Collect.Source(2).SnmpTableOid="1.3.6.1.4.1.8378.10.1.6.3.1"
Voltage.Collect.Source(2).SnmpTableSelectColumns="ID,6"

// Add a prefix to differentiate it from Power Supply Voltages
// ID;Name;Units;Type;
Voltage.Collect.Source(2).Compute(1).Type="LeftConcat"
Voltage.Collect.Source(2).Compute(1).Column=1
Voltage.Collect.Source(2).Compute(1).String="Batt"


// Union the two sources
// ID;State;
Voltage.Collect.Source(3).Type="TableUnion"
Voltage.Collect.Source(3).Table1=%Voltage.Collect.Source(1)%
Voltage.Collect.Source(3).Table2=%Voltage.Collect.Source(2)%

// Duplicate the Status column
// ID;State;State;
Voltage.Collect.Source(3).Compute(1).Type="DuplicateColumn"
Voltage.Collect.Source(3).Compute(1).Column=2

// Translate the first status column into a PATROLStatus
// ID;PatrolStatus;State;
Voltage.Collect.Source(3).Compute(2).Type="Translate"
Voltage.Collect.Source(3).Compute(2).Column=2
Voltage.Collect.Source(3).Compute(2).TranslationTable="StatusTranslationTable"

// Translate the second status column into a more readable string
// ID;PatrolStatus;StatusInformation;
Voltage.Collect.Source(3).Compute(3).Type="Translate"
Voltage.Collect.Source(3).Compute(3).Column=3
Voltage.Collect.Source(3).Compute(3).TranslationTable="StatusInformationTranslationTable"

// ValueTable = Source(1)
// ID;PatrolStatus;StatusInformation;
Voltage.Collect.ValueTable=%Voltage.Collect.Source(3)%
Voltage.Collect.DeviceID=ValueTable.Column(1)
Voltage.Collect.Status=ValueTable.Column(2)
Voltage.Collect.StatusInformation=ValueTable.Column(3)

//
// Batterys
//

//
// Discovery

// Source(1) = Battery Table
// ID;Name;Units;
Battery.Discovery.Source(1).Type="SnmpTable"
Battery.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.1.6.3.1"
Battery.Discovery.Source(1).SnmpTableSelectColumns="ID,3,5"

// Keep only "boolean" i.e. battery information
// ID;Name;Units;
Battery.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Battery.Discovery.Source(1).Compute(1).Column=3
Battery.Discovery.Source(1).Compute(1).ValueList="boolean"

// Keep only "healths"
// ID;Name;Units;
Battery.Discovery.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
Battery.Discovery.Source(1).Compute(2).Column=2
Battery.Discovery.Source(1).Compute(2).RegExp="Health"


// InstanceTable = Source(1)
// ID;Name;Units;
Battery.Discovery.InstanceTable=%Battery.Discovery.Source(1)%
Battery.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Battery.Discovery.Instance.DisplayID=InstanceTable.Column(2)

//
// Collect

// Collect type is multi-instance
Battery.Collect.Type="MultiInstance"

// Source(1) = Battery Table
// ID;State;
Battery.Collect.Source(1).Type="SnmpTable"
Battery.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.1.6.3.1"
Battery.Collect.Source(1).SnmpTableSelectColumns="ID,6"

// Duplicate the Status column
// ID;State;State;
Battery.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Battery.Collect.Source(1).Compute(1).Column=2

// Translate the first status column into a PATROLStatus
// ID;Value;PatrolStatus;State;
Battery.Collect.Source(1).Compute(2).Type="Translate"
Battery.Collect.Source(1).Compute(2).Column=2
Battery.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

// Translate the second status column into a more readable string
// ID;Value;PatrolStatus;StatusInformation;
Battery.Collect.Source(1).Compute(3).Type="Translate"
Battery.Collect.Source(1).Compute(3).Column=3
Battery.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

// ValueTable = Source(1)
// ID;Value;PatrolStatus;StatusInformation;
Battery.Collect.ValueTable=%Battery.Collect.Source(1)%
Battery.Collect.DeviceID=ValueTable.Column(1)
Battery.Collect.Status=ValueTable.Column(2)
Battery.Collect.StatusInformation=ValueTable.Column(3)

//
// PhysicalDisks
//

//
// Discovery

// Source(1) = PhysicalDisk Table
// ID;Name;Size;
PhysicalDisk.Discovery.Source(1).Type="SnmpTable"
PhysicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.4.1"
PhysicalDisk.Discovery.Source(1).SnmpTableSelectColumns="ID,2,6"

// Convert MiB to bytes
// ID;Name;Size;
PhysicalDisk.Discovery.Source(1).Compute(1).Type="Multiply"
PhysicalDisk.Discovery.Source(1).Compute(1).Column=3
PhysicalDisk.Discovery.Source(1).Compute(1).MultiplyBy=1048576

// InstanceTable = Source(1)
// ID;Name;Size;
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(1)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PhysicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(2)
PhysicalDisk.Discovery.Instance.Size=InstanceTable.Column(3)

//
// Collect

// Collect type is multi-instance
PhysicalDisk.Collect.Type="MultiInstance"

// Source(1) = PhysicalDisk Table
// ID;State;
PhysicalDisk.Collect.Source(1).Type="SnmpTable"
PhysicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.4.1"
PhysicalDisk.Collect.Source(1).SnmpTableSelectColumns="ID,4"

// Duplicate the Status column
// ID;State;State;
PhysicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PhysicalDisk.Collect.Source(1).Compute(1).Column=2

// Translate the first status column into a PATROLStatus
// ID;Value;PatrolStatus;State;
PhysicalDisk.Collect.Source(1).Compute(2).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(2).Column=2
PhysicalDisk.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

// Translate the second status column into a more readable string
// ID;Value;PatrolStatus;StatusInformation;
PhysicalDisk.Collect.Source(1).Compute(3).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(3).Column=3
PhysicalDisk.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

// ValueTable = Source(1)
// ID;Value;PatrolStatus;StatusInformation;
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(1)
PhysicalDisk.Collect.Status=ValueTable.Column(2)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(3)


//
// NetworkCards
//

//
// Discovery

// Source(1) = FC Port Table
// ID;PortID;
NetworkCard.Discovery.Source(1).Type="SnmpTable"
NetworkCard.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.2.1"
NetworkCard.Discovery.Source(1).SnmpTableSelectColumns="2,7"

// Add the PortIDType
// ID;PortID;PortIDType;
NetworkCard.Discovery.Source(1).Compute(1).Type="RightConcat"
NetworkCard.Discovery.Source(1).Compute(1).Column=2
NetworkCard.Discovery.Source(1).Compute(1).String=";WWN"

// Source(2) = iB Table
// ID;PortID;
NetworkCard.Discovery.Source(2).Type="SnmpTable"
NetworkCard.Discovery.Source(2).SnmpTableOid="1.3.6.1.4.1.8378.10.3.1"
NetworkCard.Discovery.Source(2).SnmpTableSelectColumns="2,6"

// Add the PortIDType
// ID;PortID;PortIDType;
NetworkCard.Discovery.Source(2).Compute(1).Type="RightConcat"
NetworkCard.Discovery.Source(2).Compute(1).Column=2
NetworkCard.Discovery.Source(2).Compute(1).String=";GUID"

// Union the two discovery
// ID;PortID;PortIDType;
NetworkCard.Discovery.Source(3).Type="TableUnion"
NetworkCard.Discovery.Source(3).Table1=%NetworkCard.Discovery.Source(1)%
NetworkCard.Discovery.Source(3).Table2=%NetworkCard.Discovery.Source(2)%


// InstanceTable = Source(1)
// ID;PortID;PortIDType;
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(3)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(1)
NetworkCard.Discovery.Instance.DisplayID=InstanceTable.Column(1)
NetworkCard.Discovery.Instance.PhysicalAddress=InstanceTable.Column(2)
NetworkCard.Discovery.Instance.PhysicalAddressType=InstanceTable.Column(3)

//
// Collect

// Collect type is multi-instance
NetworkCard.Collect.Type="MultiInstance"

// Source(1) = FC Port Table
// ID;LinkStatus;Speed;
NetworkCard.Collect.Source(1).Type="SnmpTable"
NetworkCard.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.8378.10.2.1"
NetworkCard.Collect.Source(1).SnmpTableSelectColumns="2,5,9"

// Source(2) = iB Table
// ID;LinkStatus;Speed;
NetworkCard.Collect.Source(2).Type="SnmpTable"
NetworkCard.Collect.Source(2).SnmpTableOid="1.3.6.1.4.1.8378.10.3.1"
NetworkCard.Collect.Source(2).SnmpTableSelectColumns="2,5,8"

// Union the two Collect
// ID;LinkStatus;Speed;
NetworkCard.Collect.Source(3).Type="TableUnion"
NetworkCard.Collect.Source(3).Table1=%NetworkCard.Collect.Source(1)%
NetworkCard.Collect.Source(3).Table2=%NetworkCard.Collect.Source(2)%

// Replace the GB units with 000
// ID;LinkStatus;Speed;
NetworkCard.Collect.Source(3).Compute(1).Type="Replace"
NetworkCard.Collect.Source(3).Compute(1).Column=3
NetworkCard.Collect.Source(3).Compute(1).Replace="Gb"
NetworkCard.Collect.Source(3).Compute(1).ReplaceBy="000"

// Replace the Mb units with ""
// ID;LinkStatus;Speed;
NetworkCard.Collect.Source(3).Compute(2).Type="Replace"
NetworkCard.Collect.Source(3).Compute(2).Column=3
NetworkCard.Collect.Source(3).Compute(2).Replace="Mb"
NetworkCard.Collect.Source(3).Compute(2).ReplaceBy=""

// Translate the link status
// ID;LinkStatus;Speed;
NetworkCard.Collect.Source(3).Compute(3).Type="Translate"
NetworkCard.Collect.Source(3).Compute(3).Column=2
NetworkCard.Collect.Source(3).Compute(3).TranslationTable="linkTranslationTable"

// The StatusTranslationTable
linkTranslationTable("None")="UNKNOWN"
linkTranslationTable("No Light")="WARN"
linkTranslationTable("Offline")="WARN"
linkTranslationTable("Online")="OK"
linkTranslationTable("Disabled")="WARN"
linkTranslationTable(Default)=""


// ValueTable = Source(3)
// ID;LinkStatus;Speed;
NetworkCard.Collect.ValueTable=%NetworkCard.Collect.Source(3)%
NetworkCard.Collect.DeviceID=ValueTable.Column(1)
NetworkCard.Collect.LinkStatus=ValueTable.Column(2)
NetworkCard.Collect.LinkSpeed=ValueTable.Column(3)
