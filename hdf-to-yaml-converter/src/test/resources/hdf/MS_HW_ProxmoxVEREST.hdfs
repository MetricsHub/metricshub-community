////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                    Hardware Sentry
//
//                 by Sentry Software (c)
//
//
//      Supports: Proxmox Hypervisors
//                Connects to Proxmox VE REST API
//
//

//
// Header
//

hdf.DisplayName="Promox Virtual Environment (REST)"
hdf.TypicalPlatform="Proxmox Hypervisors"
hdf.ReliesOn="Proxmox VE REST API version V6.4-14 or higher"
hdf.Version="1.0"
hdf.Comments="This connector provides VM monitoring for Proxmox hypervisors via Proxmox VE REST api"
hdf.RemoteSupport="true"
hdf.LocalSupport="false"
hdf.AppliesToOS="Linux,OOB"

//
// DETECTION
// Hardware Sentry v10.3.00+

Detection.Criteria(1).Type="KMVersion"
Detection.Criteria(1).Version="10.3.00"

// Check that the address / port is correct

Detection.Criteria(2).Type="HTTP"
Detection.Criteria(2).Method="GET"
Detection.Criteria(2).URL="/"
Detection.Criteria(2).Header="Content-Type: application/json"
Detection.Criteria(2).ExpectedResult="Proxmox Virtual Environment"
Detection.Criteria(2).ErrorMessage="Unable to connect to Proxmox Virtual Environment. Check port (default port is 8006) and hostname."

// Source (1) = Get ticket
// Ticket in JSON format

VM.Discovery.Source(1).Type="HTTP"
VM.Discovery.Source(1).Method="POST"
VM.Discovery.Source(1).URL="/api2/json/access/ticket"
VM.Discovery.Source(1).Body=EmbeddedFile(2)
VM.Discovery.Source(1).Header="Content-Type: application/json"

// Extract ticket
// JsonIndex; ticket

VM.Discovery.Source(1).Compute(1).Type="Json2Csv"
VM.Discovery.Source(1).Compute(1).EntryKey="/data"
VM.Discovery.Source(1).Compute(1).Properties="/ticket"

// Keep only ticket
// ticket;

VM.Discovery.Source(1).Compute(2).Type="KeepColumns"
VM.Discovery.Source(1).Compute(2).ColumnNumbers=2

// Source(2) = Get qemu VM information

VM.Discovery.Source(2).Type="HTTP"
VM.Discovery.Source(2).Method="GET"
VM.Discovery.Source(2).URL="/api2/json/nodes/%{HOSTNAME}/qemu/"
VM.Discovery.Source(2).ResultContent="body"
VM.Discovery.Source(2).AuthenticationToken=%VM.Discovery.Source(1)%
VM.Discovery.Source(2).Header=EmbeddedFile(1)

// Extract VM hostnames and vcpus
// JSONIndex; hostname; vcpus;

VM.Discovery.Source(2).Compute(1).Type="Json2Csv"
VM.Discovery.Source(2).Compute(1).EntryKey="/data"
VM.Discovery.Source(2).Compute(1).Properties="/name;/cpus;"

// Keep only lines with VMs
// JSONIndex; hostname; vcpus;

VM.Discovery.Source(2).Compute(2).Type="KeepOnlyMatchingLines"
VM.Discovery.Source(2).Compute(2).Column=2
VM.Discovery.Source(2).Compute(2).RegExp="."

// Source(3) = Get lxc VM information

VM.Discovery.Source(3).Type="HTTP"
VM.Discovery.Source(3).Method="GET"
VM.Discovery.Source(3).URL="/api2/json/nodes/%{HOSTNAME}/lxc/"
VM.Discovery.Source(3).ResultContent="body"
VM.Discovery.Source(3).AuthenticationToken=%VM.Discovery.Source(1)%
VM.Discovery.Source(3).Header=EmbeddedFile(1)

// Extract VM hostnames and vcpus
// JSONIndex; hostname; vcpus;

VM.Discovery.Source(3).Compute(1).Type="Json2Csv"
VM.Discovery.Source(3).Compute(1).EntryKey="/data"
VM.Discovery.Source(3).Compute(1).Properties="/name;/cpus;"

// Keep only lines with VMs
// JSONIndex; hostname; vcpus;

VM.Discovery.Source(3).Compute(2).Type="KeepOnlyMatchingLines"
VM.Discovery.Source(3).Compute(2).Column=2
VM.Discovery.Source(3).Compute(2).RegExp="."

// Source(4) = Union of Source(2) and Source (3)

VM.Discovery.Source(4).Type="TableUnion"
VM.Discovery.Source(4).Table1=%VM.Discovery.Source(2)%
VM.Discovery.Source(4).Table2=%VM.Discovery.Source(3)%

// Instance tableID
// JSONIndex; hostname; vcpus;

VM.Discovery.InstanceTable=%VM.Discovery.Source(4)%
VM.Discovery.Instance.DeviceID=InstanceTable.Column(2)
VM.Discovery.Instance.DisplayID=InstanceTable.Column(2)
VM.Discovery.Instance.Hostname=InstanceTable.Column(2)
VM.Discovery.Instance.ParameterActivation.PowerConsumption=InstanceTable.Column(3)

// Collect

VM.Collect.Type="MultiInstance"

// Source(1) = Get qemu VM collected data

VM.Collect.Source(1).Type="HTTP"
VM.Collect.Source(1).Method="GET"
VM.Collect.Source(1).URL="/api2/json/nodes/%{HOSTNAME}/qemu/"
VM.Collect.Source(1).ResultContent="body"
VM.Collect.Source(1).AuthenticationToken=%VM.Discovery.Source(1)%
VM.Collect.Source(1).Header=EmbeddedFile(1)

// Extract VM collected data
// JSONIndex; hostname; vcpus; status;

VM.Collect.Source(1).Compute(1).Type="Json2Csv"
VM.Collect.Source(1).Compute(1).EntryKey="/data"
VM.Collect.Source(1).Compute(1).Properties="/name;/cpus;/status;"

// Source(2) = Get lxc VM collected data

VM.Collect.Source(2).Type="HTTP"
VM.Collect.Source(2).Method="GET"
VM.Collect.Source(2).URL="/api2/json/nodes/%{HOSTNAME}/lxc/"
VM.Collect.Source(2).ResultContent="body"
VM.Collect.Source(2).AuthenticationToken=%VM.Discovery.Source(1)%
VM.Collect.Source(2).Header=EmbeddedFile(1)

// Extract VM collected data
// JSONIndex; hostname; vcpus; status;

VM.Collect.Source(2).Compute(1).Type="Json2Csv"
VM.Collect.Source(2).Compute(1).EntryKey="/data"
VM.Collect.Source(2).Compute(1).Properties="/name;/cpus;/status;"

// Source(3) = Union of source(1) and source(2)

VM.Collect.Source(3).Type="TableUnion"
VM.Collect.Source(3).Table1=%VM.Collect.Source(1)%
VM.Collect.Source(3).Table2=%VM.Collect.Source(2)%

// Translate status
// JSONIndex; hostname; vcpus; status;

VM.Collect.Source(3).Compute(1).Type="Translate"
VM.Collect.Source(3).Compute(1).Column=4
VM.Collect.Source(3).Compute(1).TranslationTable="StatusTranslationTable"

// ValueTable
// JSONIndex; hostname; vcpus; status;

VM.Collect.ValueTable=%VM.Collect.Source(3)%
VM.Collect.DeviceID=ValueTable.Column(2)
VM.Collect.Powershare=ValueTable.Column(3)
VM.Collect.PowerState=ValueTable.Column(4)

// StatusTranslationTable

StatusTranslationTable("running")="ON"
StatusTranslationTable("stopped")="OFF"
StatusTranslationTable("running (paused)")="SUSPENDED"

/////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(1) = Headers + cookie
/////////////////////////////////////////////////////////
EmbeddedFile(1):
Content-Type: application/json
Cookie: PVEAuthCookie=%{AUTHENTICATIONTOKEN}
EmbeddedFile(1).End
/////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(2) = body
/////////////////////////////////////////////////////////
EmbeddedFile(2):
{
  "password":"%{PASSWORD}",
  "username":"%{USERNAME}"
}
EmbeddedFile(2).End
/////////////////////////////////////////////////////////////////////
