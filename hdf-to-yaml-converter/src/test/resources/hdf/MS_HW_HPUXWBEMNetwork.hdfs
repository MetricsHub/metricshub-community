//
//
//                 C O N N E C T O R
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//                   MS_HW_HPUXWBEMNetwork.hdf
//
//      Supports: HP-UX machines
//		  Monitors: HP Integrity BL860c i2, BL870c i2 & BL890c i2 Server Blades, rx2800 i2 and HP Integrity Superdome 2
//    Connects to:  HP-UW integrated WBEM Service
//

//
// HEADER
//

hdf.DisplayName="HP-UX - Network (WBEM)"
hdf.TypicalPlatform="HP 9000,HP Integrity,HP SuperDome"
hdf.ReliesOn="HP-UX WBEM Provider"
hdf.Comments=""
hdf.Version="1.0"
hdf.RemoteSupport="true"
hdf.AppliesToOS="HP"
hdf.Comments="Provides the monitoring of the network interfaces in HP-UX servers through the HP-UX WBEM Provider."
// hdf.Supersedes=

// Checking the version of ESXi
Detection.Criteria(1).Type="WBEM"
Detection.Criteria(1).WbemNameSpace="root/cimv2"
Detection.Criteria(1).WbemQuery="SELECT DeviceID FROM HPUX_Processor"

// Network Cards (Physical Ethernet)


// Source(1) = HPUX_EthernetPort
// DeviceID,Speed,Description,PermanentAddress,OperationalStatus
NetworkCard.Discovery.Source(1).Type="WBEM"
NetworkCard.Discovery.Source(1).WbemQuery="SELECT DeviceID,Speed,Description,PermanentAddress,OperationalStatus FROM HPUX_EthernetPort"
NetworkCard.Discovery.Source(1).WbemNameSpace=root/cimv2

// Convert Speed from bps to Mbps (divide by 1000000)
// DeviceID,Speed,Description,PermanentAddress,OperationalStatus
NetworkCard.Discovery.Source(1).Compute(1).Type="Divide"
NetworkCard.Discovery.Source(1).Compute(1).Column=2
NetworkCard.Discovery.Source(1).Compute(1).DivideBy=1000000

// Removed as "Stopped Ports" are the only way to detect link downs.
// Keep only activated ports (Exclude "Stopped" Ports)
// DeviceID,Speed,Description,PermanentAddress,OperationalStatus
// NetworkCard.Discovery.Source(1).Compute(2).Type="ExcludeMatchingLines"
// NetworkCard.Discovery.Source(1).Compute(2).Column=5
// NetworkCard.Discovery.Source(1).Compute(2).ValueList="10|"

// InstanceTable = Source(1)
// DeviceID,Speed,Description,PermanentAddress,OperationalStatus
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(1)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(1)
NetworkCard.Discovery.Instance.BandWidth=InstanceTable.Column(2)
NetworkCard.Discovery.Instance.PhysicalAddress=InstanceTable.Column(4)
NetworkCard.Discovery.Instance.PhysicalAddressType="MAC"
NetworkCard.Discovery.Instance.Model=InstanceTable.Column(3)

//
// Collect

// The NetworkCard collect is a "MultiInstance" collect
NetworkCard.Collect.Type="MultiInstance"

// Source(1) = HPUX_EthernetPort
// DeviceID,Speed,OperationalStatus
NetworkCard.Collect.Source(1).Type="WBEM"
NetworkCard.Collect.Source(1).WbemQuery="SELECT DeviceID,Speed,OperationalStatus FROM HPUX_EthernetPort"
NetworkCard.Collect.Source(1).WbemNameSpace=root/cimv2

// Duplicate the "OperationalStatusArray" column
// DeviceID,Speed,OperationalStatus
NetworkCard.Collect.Source(1).Compute(1).Type="DuplicateColumn"
NetworkCard.Collect.Source(1).Compute(1).Column=3

// Duplicate the "OperationalStatusArray" column
// DeviceID,Speed,OperationalStatus,OperationalStatus
NetworkCard.Collect.Source(1).Compute(2).Type="DuplicateColumn"
NetworkCard.Collect.Source(1).Compute(2).Column=4

// Then we translate DMTF's OperationStatus code into OK/WARN/ALARM (for the Status parameter)
// DeviceID,Speed,PATROLStatusArray,OperationalStatus,OperationalStatus
NetworkCard.Collect.Source(1).Compute(3).Type="ArrayTranslate"
NetworkCard.Collect.Source(1).Compute(3).Column=3
NetworkCard.Collect.Source(1).Compute(3).TranslationTable="DMTFOperationStatusTranslationTable"

// And finally, we translate DMTF's OperationalStatus code into a more readable status string
// DeviceID,Speed,PATROLStatusArray,StatusInformation,OperationalStatus
NetworkCard.Collect.Source(1).Compute(4).Type="ArrayTranslate"
NetworkCard.Collect.Source(1).Compute(4).Column=4
NetworkCard.Collect.Source(1).Compute(4).TranslationTable="DMTFOperationStatusInformationTranslationTable"
NetworkCard.Collect.Source(1).Compute(4).ResultSeparator=" - "

// Convert PATROLStatusArray to a simple (unique) PATROLStatus
// DeviceID,Speed,PATROLStatus,StatusInformation,OperationalStatus
NetworkCard.Collect.Source(1).Compute(5).Type="Convert"
NetworkCard.Collect.Source(1).Compute(5).Column=3
NetworkCard.Collect.Source(1).Compute(5).ConversionType="Array2SimpleStatus"

// Convert Speed from bps to Mbps (divide by 1000000)
// DeviceID,Speed,PATROLStatus,StatusInformation,OperationalStatus
NetworkCard.Collect.Source(1).Compute(6).Type="Divide"
NetworkCard.Collect.Source(1).Compute(6).Column=2
NetworkCard.Collect.Source(1).Compute(6).DivideBy=1000000

// Translate the Op Status to Link Status.  This only works if the card is "ok" or "stopeed".  Any other state and Link Status is unknown.
// DeviceID,Speed,PATROLStatus,StatusInformation,LinkStatus
NetworkCard.Collect.Source(1).Compute(7).Type="ArrayTranslate"
NetworkCard.Collect.Source(1).Compute(7).Column=5
NetworkCard.Collect.Source(1).Compute(7).TranslationTable="OperationsStatusToLinkStatusTranslationTable"

// The OperationsStatusToLinkStatusTranslationTable
OperationsStatusToLinkStatusTranslationTable(10)="WARN"
OperationsStatusToLinkStatusTranslationTable(2)="OK"

// ValueTable = Source(1)
NetworkCard.Collect.ValueTable=%NetworkCard.Collect.Source(1)%
NetworkCard.Collect.DeviceID=ValueTable.Column(1)
NetworkCard.Collect.Status=ValueTable.Column(3)
NetworkCard.Collect.StatusInformation=ValueTable.Column(4)
NetworkCard.Collect.LinkStatus=ValueTable.Column(5)
NetworkCard.Collect.LinkSpeed=ValueTable.Column(2)


// The DMTFOperationStatusTranslationTable
DMTFOperationStatusTranslationTable(2)="OK"
DMTFOperationStatusTranslationTable(3)="WARN"
DMTFOperationStatusTranslationTable(4)="WARN"
DMTFOperationStatusTranslationTable(5)="WARN"
DMTFOperationStatusTranslationTable(6)="ALARM"
DMTFOperationStatusTranslationTable(7)="ALARM"
DMTFOperationStatusTranslationTable(8)="WARN"
DMTFOperationStatusTranslationTable(9)="WARN"
// DMTFOperationStatusTranslationTable(10)="ALARM"
DMTFOperationStatusTranslationTable(11)="WARN"
DMTFOperationStatusTranslationTable(12)="ALARM"
DMTFOperationStatusTranslationTable(13)="ALARM"
DMTFOperationStatusTranslationTable(14)="ALARM"
DMTFOperationStatusTranslationTable(15)="OK"
DMTFOperationStatusTranslationTable(16)="WARN"
DMTFOperationStatusTranslationTable(17)="OK"
DMTFOperationStatusTranslationTable(18)="OK"
DMTFOperationStatusTranslationTable(Default)="UNKNOWN"

// The DMTFOperationStatusInformationTranslationTable
DMTFOperationStatusInformationTranslationTable(2)=""
DMTFOperationStatusInformationTranslationTable(3)="Degraded"
DMTFOperationStatusInformationTranslationTable(4)="Stressed"
DMTFOperationStatusInformationTranslationTable(5)="Predicted Failure"
DMTFOperationStatusInformationTranslationTable(6)="Error"
DMTFOperationStatusInformationTranslationTable(7)="Non-Recoverable Error"
DMTFOperationStatusInformationTranslationTable(8)="Starting"
DMTFOperationStatusInformationTranslationTable(9)="Stopping"
DMTFOperationStatusInformationTranslationTable(10)="Stopped"
DMTFOperationStatusInformationTranslationTable(11)="In Service"
DMTFOperationStatusInformationTranslationTable(12)="No Contact"
DMTFOperationStatusInformationTranslationTable(13)="Lost Communication"
DMTFOperationStatusInformationTranslationTable(14)="Aborted"
DMTFOperationStatusInformationTranslationTable(15)="Dormant"
DMTFOperationStatusInformationTranslationTable(16)="Supporting Entity in Error"
DMTFOperationStatusInformationTranslationTable(17)="Completed"
DMTFOperationStatusInformationTranslationTable(18)="Power Mode"
DMTFOperationStatusInformationTranslationTable(Default)=""
