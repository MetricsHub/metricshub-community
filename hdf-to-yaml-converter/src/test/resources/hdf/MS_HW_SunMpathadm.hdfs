//
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//                MS_HW_SunMpathadm.hdf
//
//      Supports: any Solaris machine with MPIO enabled
//
//


// HEADER

hdf.DisplayName="Oracle/Sun Solaris - mpathadm"
hdf.TypicalPlatform="Any system with mpathadm"
hdf.ReliesOn="Solaris Mpathadm utility"
hdf.Version="1.0"
hdf.Comments="This connector provides the monitoring of LUNs on all Solaris 10.2 or later systems through the mpathadm utility."
hdf.RemoteSupport="true"
hdf.AppliesToOS="Solaris"

// SUDO-able commands
//
Sudo(1).Command="/usr/sbin/mpathadm"

//
// DETECTION
//

// Test the mpathadm command
Detection.Criteria(1).Type="OSCommand"
Detection.Criteria(1).CommandLine="%{SUDO:/usr/sbin/mpathadm} /usr/sbin/mpathadm list lu"
Detection.Criteria(1).ExpectedResult="/dev/rdsk"


//
// LUNS
//

//
// Discovery

// Get the list of Ports and attributes from EF1
//
LUN.Discovery.Source(1).Type="OsCommand"
LUN.Discovery.Source(1).CommandLine="/bin/sh %EmbeddedFile(1)%"

// AWK it
// LUNID;ArrayName;NAAID;
LUN.Discovery.Source(1).Compute(1).Type="Awk"
LUN.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
LUN.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
LUN.Discovery.Source(1).Compute(1).Separators=";"
LUN.Discovery.Source(1).Compute(1).SelectColumns="2,3,4"

// InstanceTable = Source(1)
// LUNID;ArrayName;NAAID;
LUN.Discovery.InstanceTable=%LUN.Discovery.Source(1)%
LUN.Discovery.Instance.DeviceID=InstanceTable.Column(3)
LUN.Discovery.Instance.DisplayID=InstanceTable.Column(3)
LUN.Discovery.Instance.ArrayName=InstanceTable.Column(2)
LUN.Discovery.Instance.LocalDeviceName=InstanceTable.Column(1)

//
// COLLECT

// Collect type is multi-instance
LUN.Collect.Type="MultiInstance"

// Get the list of Ports from multipath -l
//
LUN.Collect.Source(1).Type="OsCommand"
LUN.Collect.Source(1).CommandLine="%{SUDO:/usr/sbin/mpathadm} /usr/sbin/mpathadm list lu"

// AWK it
// LUNID;OperationalPathCount;PathCountInformation;
LUN.Collect.Source(1).Compute(1).Type="Awk"
LUN.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(3)
LUN.Collect.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
LUN.Collect.Source(1).Compute(1).Separators=";"
LUN.Collect.Source(1).Compute(1).SelectColumns="2,3,4"

// Join the collect with the discovery to get the NAAID
// LUNID;OperationalPathCount;PathCountInformation;
LUN.Collect.Source(2).Type="TableJoint"
LUN.Collect.Source(2).LeftTable=%LUN.Collect.Source(1)%
LUN.Collect.Source(2).RightTable=%LUN.Discovery.Source(1)%
LUN.Collect.Source(2).LeftKeyColumn=1
LUN.Collect.Source(2).RightKeyColumn=1

// ValueTable = Source(2)
// LUNID;OperationalPathCount;PathCountInformation;LUNID;ArrayName;NAAID;
LUN.Collect.ValueTable=%LUN.Collect.Source(2)%
LUN.Collect.DeviceID=ValueTable.Column(6)
LUN.Collect.AvailablePathCount=ValueTable.Column(2)
LUN.Collect.AvailablePathInformation=ValueTable.Column(3)

/////////////////////////////////////////////////////////////
///
///    Embedded File 1
///
///    Shell Script to list all LUNS and their attributes
///
///
/////////////////////////////////////////////////////////////
EmbeddedFile(1):
#!/bin/sh

# First of all, make sure the thing speaks english
LANG=C
export LANG

LunList=`%{SUDO:/usr/sbin/mpathadm} /usr/sbin/mpathadm list lu | grep /dev/rdsk/`
for Lun in $LunList; do
     %{SUDO:/usr/sbin/mpathadm} /usr/sbin/mpathadm show lu $Lun
     done
EmbeddedFile(1).End
///////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
///
///    Embedded File 2
///
///    AWK script that takes the output of Source (1) - Embedded File 1
///        MSHW;LUNID;ArrayName;NAAID;
///
/////////////////////////////////////////////////////////////
EmbeddedFile(2):
tolower($0) ~ /^logical unit:/ {LUNID = $NF}
$1 ~ /Vendor:/ {Vendor = $0 ; gsub (/ +Vendor: +/,"",Vendor ) ; ArrayName = Vendor }
$1 ~ /Product:/ {Product= $0 ; gsub (/ +Product: +/,"",Product) ; ArrayName = ArrayName " " Product}
$1 ~ /Revision:/ {Revision= $0 ; gsub (/ +Revision: +/,"",Revision) ; ArrayName = ArrayName " " Revision}
$1 ~ /Name:/ && LUNID != "" {NAAID = $NF
#                                     MSHW;LUNID;ArrayName;NAAID;
                            print "MSHW;" LUNID ";" ArrayName ";" NAAID ";"
                            LUNID = "" ; NAAID = "" ;
                            }
EmbeddedFile(2).End
///////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
///
///    Embedded File 3
///
///    AWK script that takes output of mpathadm list lu and returns path count
///        MSHW;LUNID;AvailablePathCount;PathCountInformation;
///
/////////////////////////////////////////////////////////////
EmbeddedFile(3):
$1 ~ "/dev/rdsk" {LUNID = $1}
$0 ~ /Total Path Count/ {TotalPathCount = $NF }
$0 ~ /Operational Path Count/ {OperationalPathCount = $NF
                               PathCountInformation = OperationalPathCount " out of " TotalPathCount " operational. "
#                                  MSHW;LUNID;OperationalPathCount;PathCountInformation;
                               print "MSHW;" LUNID ";" OperationalPathCount ";" PathCountInformation ";"
                              }
EmbeddedFile(3).End
///////////////////////////////////////////////////////////////
