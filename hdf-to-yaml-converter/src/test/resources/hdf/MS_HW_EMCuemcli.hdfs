//
//
//                 C O N N E C T O R
//
//                       f o r
//
//                 Hardware Sentry
//
//              by Sentry Software (c)
//
//                  UEMCLI connector
//
//      Supports:  EMC VNXe Storage System
//
//      Connects to:  UEMCLI local command line utiity
//
//

//
// HEADER

hdf.DisplayName="EMC uemcli (VNXe)"
hdf.TypicalPlatform="EMC VNXe"
hdf.ReliesOn="uemcli"
hdf.Version="1.0"
hdf.Comments="This connector provides hardware monitoring for EMC VNXe Storage Systems through the uemcli command line utility."
hdf.AppliesToOS="Storage"
hdf.RemoteSupport="true"
hdf.LocalSupport="false"

// Only for type storage
Detection.Criteria(1).Type="OS"
Detection.Criteria(1).KeepOnly="Storage"

// Checks that SMCLI is on the local machine - in Portal smcli is run from the RSM
Detection.Criteria(2).Type="OSCommand"
Detection.Criteria(2).CommandLine="uemcli -version | more"
Detection.Criteria(2).ExecuteLocally=1
Detection.Criteria(2).ForceSerialization=1
Detection.Criteria(2).ExpectedResult="Version:"
Detection.Criteria(2).ErrorMessage="uemcli not installed or not in path."

// Checks that SMCLI returns a physical disk
Detection.Criteria(3).Type="OSCommand"
Detection.Criteria(3).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /sys/general show | more"
Detection.Criteria(3).ExecuteLocally=1
Detection.Criteria(3).ForceSerialization=1
Detection.Criteria(3).ExpectedResult="Model"
Detection.Criteria(3).ErrorMessage="uemcli could not connect or did not find a system."

//
//
// ENCLOSURES
//

//
// Discovery

// Source(1) = the output of uemcli
Enclosure.Discovery.Source(1).Type="OsCommand"
Enclosure.Discovery.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /sys/general show -detail | more"
Enclosure.Discovery.Source(1).ExecuteLocally=1
Enclosure.Discovery.Source(1).ForceSerialization=1
Enclosure.Discovery.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// SystemID;SystemName;Model;SerialNumber;HealthValue;
Enclosure.Discovery.Source(1).Compute(1).Type="Awk"
Enclosure.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(1)
Enclosure.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
Enclosure.Discovery.Source(1).Compute(1).Separators=";"
Enclosure.Discovery.Source(1).Compute(1).SelectColumns="2,3,4,5,6"

// The discovery table
// SystemID;SystemName;Model;SerialNumber;HealthValue;
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Enclosure.Discovery.Instance.DisplayID=InstanceTable.Column(2)
Enclosure.Discovery.Instance.Vendor="EMC"
Enclosure.Discovery.Instance.Model=InstanceTable.Column(3)
Enclosure.Discovery.Instance.SerialNumber=InstanceTable.Column(4)
Enclosure.Discovery.Instance.Type="Storage"

// Collect

// Collect type: MultiInstance
Enclosure.Collect.Type="MultiInstance"

// Source(1) = uemcli
Enclosure.Collect.Source(1).Type="OSCommand"
Enclosure.Collect.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /sys/general show | more"
Enclosure.Collect.Source(1).ExecuteLocally=1
Enclosure.Collect.Source(1).ForceSerialization=1
Enclosure.Collect.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// SystemID;HealthValue;
Enclosure.Collect.Source(1).Compute(1).Type="Awk"
Enclosure.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(1)
Enclosure.Collect.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
Enclosure.Collect.Source(1).Compute(1).Separators=";"
Enclosure.Collect.Source(1).Compute(1).SelectColumns="2,6"

// Duplicate the Health Value

Enclosure.Collect.Source(1).Compute(2).Type="DuplicateColumn"
Enclosure.Collect.Source(1).Compute(2).Column=2

// Now translate into OK/Warning/Alarm
// SystemID;PatrolStatus;HealthValue;
Enclosure.Collect.Source(1).Compute(3).Type="Translate"
Enclosure.Collect.Source(1).Compute(3).Column="2"
Enclosure.Collect.Source(1).Compute(3).TranslationTable="statusTranslationTable"

// Now translate Status information
// SystemID;PatrolStatus;StatusInformation;
Enclosure.Collect.Source(1).Compute(4).Type="Translate"
Enclosure.Collect.Source(1).Compute(4).Column="3"
Enclosure.Collect.Source(1).Compute(4).TranslationTable="statusInformationTranslationTable"

// The value table
Enclosure.Collect.ValueTable=%Enclosure.Collect.Source(1)%
Enclosure.Collect.DeviceID=ValueTable.Column(1)
Enclosure.Collect.Status=ValueTable.Column(2)
Enclosure.Collect.StatusInformation=ValueTable.Column(3)

//
//
// BatteryS
//

//
// Discovery

// Source(1) = the output of uemcli
Battery.Discovery.Source(1).Type="OsCommand"
Battery.Discovery.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/bat show -detail | more"
Battery.Discovery.Source(1).ExecuteLocally=1
Battery.Discovery.Source(1).ForceSerialization=1
Battery.Discovery.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;
Battery.Discovery.Source(1).Compute(1).Type="Awk"
Battery.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
Battery.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
Battery.Discovery.Source(1).Compute(1).Separators=";"
Battery.Discovery.Source(1).Compute(1).SelectColumns="2,3,4"

// Remove BAT_ from the DeviceName
// DeviceID;DeviceName;HealthValue;
Battery.Discovery.Source(1).Compute(2).Type="Replace"
Battery.Discovery.Source(1).Compute(2).Column=2
Battery.Discovery.Source(1).Compute(2).Replace="BAT_"
Battery.Discovery.Source(1).Compute(2).ReplaceBy=""

// The discovery table
// DeviceID;DeviceName;HealthValue;
Battery.Discovery.InstanceTable=%Battery.Discovery.Source(1)%
Battery.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Battery.Discovery.Instance.DisplayID=InstanceTable.Column(2)

// Collect

// Collect type: MultiInstance
Battery.Collect.Type="MultiInstance"

// Source(1) = uemcli
Battery.Collect.Source(1).Type="OSCommand"
Battery.Collect.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept  /env/bat show | more"
Battery.Collect.Source(1).ExecuteLocally=1
Battery.Collect.Source(1).ForceSerialization=1
Battery.Collect.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;HealthValue;
Battery.Collect.Source(1).Compute(1).Type="Awk"
Battery.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
Battery.Collect.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
Battery.Collect.Source(1).Compute(1).Separators=";"
Battery.Collect.Source(1).Compute(1).SelectColumns="2,4"

// Duplicate the Health Value

Battery.Collect.Source(1).Compute(2).Type="DuplicateColumn"
Battery.Collect.Source(1).Compute(2).Column=2

// Now translate into OK/Warning/Alarm
// SystemID;PatrolStatus;HealthValue;
Battery.Collect.Source(1).Compute(3).Type="Translate"
Battery.Collect.Source(1).Compute(3).Column="2"
Battery.Collect.Source(1).Compute(3).TranslationTable="statusTranslationTable"

// Now translate Status information
// SystemID;PatrolStatus;StatusInformation;
Battery.Collect.Source(1).Compute(4).Type="Translate"
Battery.Collect.Source(1).Compute(4).Column="3"
Battery.Collect.Source(1).Compute(4).TranslationTable="statusInformationTranslationTable"

// The value table
Battery.Collect.ValueTable=%Battery.Collect.Source(1)%
Battery.Collect.DeviceID=ValueTable.Column(1)
Battery.Collect.Status=ValueTable.Column(2)
Battery.Collect.StatusInformation=ValueTable.Column(3)


//
//
// MemoryS
//

//
// Discovery

// Source(1) = the output of uemcli
Memory.Discovery.Source(1).Type="OsCommand"
Memory.Discovery.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/mm show -detail | more"
Memory.Discovery.Source(1).ExecuteLocally=1
Memory.Discovery.Source(1).ForceSerialization=1
Memory.Discovery.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;
Memory.Discovery.Source(1).Compute(1).Type="Awk"
Memory.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
Memory.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
Memory.Discovery.Source(1).Compute(1).Separators=";"
Memory.Discovery.Source(1).Compute(1).SelectColumns="2,3,4"

// Remove MM_ from the DeviceName
// DeviceID;DeviceName;HealthValue;
Memory.Discovery.Source(1).Compute(2).Type="Replace"
Memory.Discovery.Source(1).Compute(2).Column=2
Memory.Discovery.Source(1).Compute(2).Replace="MM_"
Memory.Discovery.Source(1).Compute(2).ReplaceBy=""

// The discovery table
// DeviceID;DeviceName;HealthValue;
Memory.Discovery.InstanceTable=%Memory.Discovery.Source(1)%
Memory.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Memory.Discovery.Instance.DisplayID=InstanceTable.Column(2)

// Collect

// Collect type: MultiInstance
Memory.Collect.Type="MultiInstance"

// Source(1) = uemcli
Memory.Collect.Source(1).Type="OSCommand"
Memory.Collect.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/mm show | more"
Memory.Collect.Source(1).ExecuteLocally=1
Memory.Collect.Source(1).ForceSerialization=1
Memory.Collect.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;HealthValue;
Memory.Collect.Source(1).Compute(1).Type="Awk"
Memory.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
Memory.Collect.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
Memory.Collect.Source(1).Compute(1).Separators=";"
Memory.Collect.Source(1).Compute(1).SelectColumns="2,4"

// Duplicate the Health Value

Memory.Collect.Source(1).Compute(2).Type="DuplicateColumn"
Memory.Collect.Source(1).Compute(2).Column=2

// Now translate into OK/Warning/Alarm
// SystemID;PatrolStatus;HealthValue;
Memory.Collect.Source(1).Compute(3).Type="Translate"
Memory.Collect.Source(1).Compute(3).Column="2"
Memory.Collect.Source(1).Compute(3).TranslationTable="statusTranslationTable"

// Now translate Status information
// SystemID;PatrolStatus;StatusInformation;
Memory.Collect.Source(1).Compute(4).Type="Translate"
Memory.Collect.Source(1).Compute(4).Column="3"
Memory.Collect.Source(1).Compute(4).TranslationTable="statusInformationTranslationTable"

// The value table
Memory.Collect.ValueTable=%Memory.Collect.Source(1)%
Memory.Collect.DeviceID=ValueTable.Column(1)
Memory.Collect.Status=ValueTable.Column(2)
Memory.Collect.StatusInformation=ValueTable.Column(3)

//
//
// PowerSupplyS
//

//
// Discovery

// Source(1) = the output of uemcli
PowerSupply.Discovery.Source(1).Type="OsCommand"
PowerSupply.Discovery.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept  /env/ps show -detail | more"
PowerSupply.Discovery.Source(1).ExecuteLocally=1
PowerSupply.Discovery.Source(1).ForceSerialization=1
PowerSupply.Discovery.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;
PowerSupply.Discovery.Source(1).Compute(1).Type="Awk"
PowerSupply.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
PowerSupply.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
PowerSupply.Discovery.Source(1).Compute(1).Separators=";"
PowerSupply.Discovery.Source(1).Compute(1).SelectColumns="2,3,4"

// Remove POW_ from the DeviceName
// DeviceID;DeviceName;HealthValue;
PowerSupply.Discovery.Source(1).Compute(2).Type="Replace"
PowerSupply.Discovery.Source(1).Compute(2).Column=2
PowerSupply.Discovery.Source(1).Compute(2).Replace="POW_"
PowerSupply.Discovery.Source(1).Compute(2).ReplaceBy=""

// The discovery table
// DeviceID;DeviceName;HealthValue;
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(2)

// Collect

// Collect type: MultiInstance
PowerSupply.Collect.Type="MultiInstance"

// Source(1) = uemcli
PowerSupply.Collect.Source(1).Type="OSCommand"
PowerSupply.Collect.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/ps show | more"
PowerSupply.Collect.Source(1).ExecuteLocally=1
PowerSupply.Collect.Source(1).ForceSerialization=1
PowerSupply.Collect.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;HealthValue;
PowerSupply.Collect.Source(1).Compute(1).Type="Awk"
PowerSupply.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
PowerSupply.Collect.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
PowerSupply.Collect.Source(1).Compute(1).Separators=";"
PowerSupply.Collect.Source(1).Compute(1).SelectColumns="2,4"

// Duplicate the Health Value

PowerSupply.Collect.Source(1).Compute(2).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(2).Column=2

// Now translate into OK/Warning/Alarm
// SystemID;PatrolStatus;HealthValue;
PowerSupply.Collect.Source(1).Compute(3).Type="Translate"
PowerSupply.Collect.Source(1).Compute(3).Column="2"
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="statusTranslationTable"

// Now translate Status information
// SystemID;PatrolStatus;StatusInformation;
PowerSupply.Collect.Source(1).Compute(4).Type="Translate"
PowerSupply.Collect.Source(1).Compute(4).Column="3"
PowerSupply.Collect.Source(1).Compute(4).TranslationTable="statusInformationTranslationTable"

// The value table
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)

//
//
// OtherDeviceS
//

//
// Discovery

// Source(1) = the output of uemcli
OtherDevice.Discovery.Source(1).Type="OsCommand"
OtherDevice.Discovery.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/iomodule show | more"
OtherDevice.Discovery.Source(1).ExecuteLocally=1
OtherDevice.Discovery.Source(1).ForceSerialization=1
OtherDevice.Discovery.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(1).Compute(1).Type="Awk"
OtherDevice.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
OtherDevice.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
OtherDevice.Discovery.Source(1).Compute(1).Separators=";"
OtherDevice.Discovery.Source(1).Compute(1).SelectColumns="2,3,4"

// Add Device Type and make ID unique
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(1).Compute(2).Type="LeftConcat"
OtherDevice.Discovery.Source(1).Compute(2).Column=1
OtherDevice.Discovery.Source(1).Compute(2).String="IO Module;IO_"

// Remove IO_ from the DeviceName
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(1).Compute(3).Type="Replace"
OtherDevice.Discovery.Source(1).Compute(3).Column=3
OtherDevice.Discovery.Source(1).Compute(3).Replace="IO_"
OtherDevice.Discovery.Source(1).Compute(3).ReplaceBy=""



// Source(2) = the output of uemcli
OtherDevice.Discovery.Source(2).Type="OsCommand"
OtherDevice.Discovery.Source(2).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/dpe show | more"
OtherDevice.Discovery.Source(2).ExecuteLocally=1
OtherDevice.Discovery.Source(2).ForceSerialization=1
OtherDevice.Discovery.Source(2).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(2).Compute(1).Type="Awk"
OtherDevice.Discovery.Source(2).Compute(1).AwkScript=EmbeddedFile(2)
OtherDevice.Discovery.Source(2).Compute(1).KeepOnlyRegExp="^MSHW;"
OtherDevice.Discovery.Source(2).Compute(1).Separators=";"
OtherDevice.Discovery.Source(2).Compute(1).SelectColumns="2,3,4"

// Add Device Type and make ID unique
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(2).Compute(2).Type="LeftConcat"
OtherDevice.Discovery.Source(2).Compute(2).Column=1
OtherDevice.Discovery.Source(2).Compute(2).String="Disk Processor Enclosure;DPE_"

// Remove DPE_ from the DeviceName
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(2).Compute(3).Type="Replace"
OtherDevice.Discovery.Source(2).Compute(3).Column=3
OtherDevice.Discovery.Source(2).Compute(3).Replace="DPE_"
OtherDevice.Discovery.Source(2).Compute(3).ReplaceBy=""

// Source(3) = the output of uemcli
OtherDevice.Discovery.Source(3).Type="OsCommand"
OtherDevice.Discovery.Source(3).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/sp show | more"
OtherDevice.Discovery.Source(3).ExecuteLocally=1
OtherDevice.Discovery.Source(3).ForceSerialization=1
OtherDevice.Discovery.Source(3).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(3).Compute(1).Type="Awk"
OtherDevice.Discovery.Source(3).Compute(1).AwkScript=EmbeddedFile(2)
OtherDevice.Discovery.Source(3).Compute(1).KeepOnlyRegExp="^MSHW;"
OtherDevice.Discovery.Source(3).Compute(1).Separators=";"
OtherDevice.Discovery.Source(3).Compute(1).SelectColumns="2,3,4"

// Add Device Type and make ID unique
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(3).Compute(2).Type="LeftConcat"
OtherDevice.Discovery.Source(3).Compute(2).Column=1
OtherDevice.Discovery.Source(3).Compute(2).String="Storage Processor;SP_"

// Remove SP_ from the DeviceName
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(3).Compute(3).Type="Replace"
OtherDevice.Discovery.Source(3).Compute(3).Column=3
OtherDevice.Discovery.Source(3).Compute(3).Replace="SP_"
OtherDevice.Discovery.Source(3).Compute(3).ReplaceBy=""



// Source(4) = the output of uemcli
OtherDevice.Discovery.Source(4).Type="OsCommand"
OtherDevice.Discovery.Source(4).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/dae show | more"
OtherDevice.Discovery.Source(4).ExecuteLocally=1
OtherDevice.Discovery.Source(4).ForceSerialization=1
OtherDevice.Discovery.Source(4).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(4).Compute(1).Type="Awk"
OtherDevice.Discovery.Source(4).Compute(1).AwkScript=EmbeddedFile(2)
OtherDevice.Discovery.Source(4).Compute(1).KeepOnlyRegExp="^MSHW;"
OtherDevice.Discovery.Source(4).Compute(1).Separators=";"
OtherDevice.Discovery.Source(4).Compute(1).SelectColumns="2,3,4"

// Add Device Type and make ID unique
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(4).Compute(2).Type="LeftConcat"
OtherDevice.Discovery.Source(4).Compute(2).Column=1
OtherDevice.Discovery.Source(4).Compute(2).String="Disk Array Enclosure;DAE_"

// Remove DAE_ from the DeviceName
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(4).Compute(3).Type="Replace"
OtherDevice.Discovery.Source(4).Compute(3).Column=3
OtherDevice.Discovery.Source(4).Compute(3).Replace="DAE_"
OtherDevice.Discovery.Source(4).Compute(3).ReplaceBy=""



// Source(5) = the output of uemcli
OtherDevice.Discovery.Source(5).Type="OsCommand"
OtherDevice.Discovery.Source(5).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/ccard show | more"
OtherDevice.Discovery.Source(5).ExecuteLocally=1
OtherDevice.Discovery.Source(5).ForceSerialization=1
OtherDevice.Discovery.Source(5).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(5).Compute(1).Type="Awk"
OtherDevice.Discovery.Source(5).Compute(1).AwkScript=EmbeddedFile(2)
OtherDevice.Discovery.Source(5).Compute(1).KeepOnlyRegExp="^MSHW;"
OtherDevice.Discovery.Source(5).Compute(1).Separators=";"
OtherDevice.Discovery.Source(5).Compute(1).SelectColumns="2,3,4"

// Add Device Type and make ID unique
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(5).Compute(2).Type="LeftConcat"
OtherDevice.Discovery.Source(5).Compute(2).Column=1
OtherDevice.Discovery.Source(5).Compute(2).String="Cache Card;EHM_"

// Remove EHM_ from the DeviceName
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(5).Compute(3).Type="Replace"
OtherDevice.Discovery.Source(5).Compute(3).Column=3
OtherDevice.Discovery.Source(5).Compute(3).Replace="EHM_"
OtherDevice.Discovery.Source(5).Compute(3).ReplaceBy=""




// Source(6) = the output of uemcli
OtherDevice.Discovery.Source(6).Type="OsCommand"
OtherDevice.Discovery.Source(6).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/lcc show | more"
OtherDevice.Discovery.Source(6).ExecuteLocally=1
OtherDevice.Discovery.Source(6).ForceSerialization=1
OtherDevice.Discovery.Source(6).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(6).Compute(1).Type="Awk"
OtherDevice.Discovery.Source(6).Compute(1).AwkScript=EmbeddedFile(2)
OtherDevice.Discovery.Source(6).Compute(1).KeepOnlyRegExp="^MSHW;"
OtherDevice.Discovery.Source(6).Compute(1).Separators=";"
OtherDevice.Discovery.Source(6).Compute(1).SelectColumns="2,3,4"

// Add Device Type and make ID unique
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(6).Compute(2).Type="LeftConcat"
OtherDevice.Discovery.Source(6).Compute(2).Column=1
OtherDevice.Discovery.Source(6).Compute(2).String="Link Control Card;LCC_"

// Remove LCC_ from the DeviceName
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(6).Compute(3).Type="Replace"
OtherDevice.Discovery.Source(6).Compute(3).Column=3
OtherDevice.Discovery.Source(6).Compute(3).Replace="LCC_"
OtherDevice.Discovery.Source(6).Compute(3).ReplaceBy=""


// Join all this into one table..
// DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.Source(7).Type="TableUnion"
OtherDevice.Discovery.Source(7).Table1=%OtherDevice.Discovery.Source(1)%
OtherDevice.Discovery.Source(7).Table2=%OtherDevice.Discovery.Source(2)%
OtherDevice.Discovery.Source(7).Table3=%OtherDevice.Discovery.Source(3)%
OtherDevice.Discovery.Source(7).Table4=%OtherDevice.Discovery.Source(4)%

OtherDevice.Discovery.Source(8).Type="TableUnion"
OtherDevice.Discovery.Source(8).Table1=%OtherDevice.Discovery.Source(7)%
OtherDevice.Discovery.Source(8).Table2=%OtherDevice.Discovery.Source(5)%
OtherDevice.Discovery.Source(8).Table3=%OtherDevice.Discovery.Source(6)%

// The discovery table
// DeviceType;DeviceID;DeviceName;HealthValue;
OtherDevice.Discovery.InstanceTable=%OtherDevice.Discovery.Source(8)%
OtherDevice.Discovery.Instance.DeviceType=InstanceTable.Column(1)
OtherDevice.Discovery.Instance.DeviceID=InstanceTable.Column(2)
OtherDevice.Discovery.Instance.DisplayID=InstanceTable.Column(3)

// Collect

// Collect type: MultiInstance
OtherDevice.Collect.Type="MultiInstance"

// Source(1) = uemcli
OtherDevice.Collect.Source(1).Type="OSCommand"
OtherDevice.Collect.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/iomodule show | more"
OtherDevice.Collect.Source(1).ExecuteLocally=1
OtherDevice.Collect.Source(1).ForceSerialization=1
OtherDevice.Collect.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;HealthValue;
OtherDevice.Collect.Source(1).Compute(1).Type="Awk"
OtherDevice.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
OtherDevice.Collect.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
OtherDevice.Collect.Source(1).Compute(1).Separators=";"
OtherDevice.Collect.Source(1).Compute(1).SelectColumns="2,4"

// Make ID unique
// DeviceID;HealthValue;
OtherDevice.Collect.Source(1).Compute(2).Type="LeftConcat"
OtherDevice.Collect.Source(1).Compute(2).Column=1
OtherDevice.Collect.Source(1).Compute(2).String="IO_"



// Source(2) = uemcli
OtherDevice.Collect.Source(2).Type="OSCommand"
OtherDevice.Collect.Source(2).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/dpe show | more"
OtherDevice.Collect.Source(2).ExecuteLocally=1
OtherDevice.Collect.Source(2).ForceSerialization=1
OtherDevice.Collect.Source(2).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;HealthValue;
OtherDevice.Collect.Source(2).Compute(1).Type="Awk"
OtherDevice.Collect.Source(2).Compute(1).AwkScript=EmbeddedFile(2)
OtherDevice.Collect.Source(2).Compute(1).KeepOnlyRegExp="^MSHW;"
OtherDevice.Collect.Source(2).Compute(1).Separators=";"
OtherDevice.Collect.Source(2).Compute(1).SelectColumns="2,4"

// Make ID unique
// DeviceID;HealthValue;
OtherDevice.Collect.Source(2).Compute(2).Type="LeftConcat"
OtherDevice.Collect.Source(2).Compute(2).Column=1
OtherDevice.Collect.Source(2).Compute(2).String="DPE_"



// Source(3) = uemcli
OtherDevice.Collect.Source(3).Type="OSCommand"
OtherDevice.Collect.Source(3).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/sp show | more"
OtherDevice.Collect.Source(3).ExecuteLocally=1
OtherDevice.Collect.Source(3).ForceSerialization=1
OtherDevice.Collect.Source(3).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;HealthValue;
OtherDevice.Collect.Source(3).Compute(1).Type="Awk"
OtherDevice.Collect.Source(3).Compute(1).AwkScript=EmbeddedFile(2)
OtherDevice.Collect.Source(3).Compute(1).KeepOnlyRegExp="^MSHW;"
OtherDevice.Collect.Source(3).Compute(1).Separators=";"
OtherDevice.Collect.Source(3).Compute(1).SelectColumns="2,4"

// Make ID unique
// DeviceID;HealthValue;
OtherDevice.Collect.Source(3).Compute(2).Type="LeftConcat"
OtherDevice.Collect.Source(3).Compute(2).Column=1
OtherDevice.Collect.Source(3).Compute(2).String="SP_"

// Source(4) = uemcli
OtherDevice.Collect.Source(4).Type="OSCommand"
OtherDevice.Collect.Source(4).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/dae show | more"
OtherDevice.Collect.Source(4).ExecuteLocally=1
OtherDevice.Collect.Source(4).ForceSerialization=1
OtherDevice.Collect.Source(4).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;HealthValue;
OtherDevice.Collect.Source(4).Compute(1).Type="Awk"
OtherDevice.Collect.Source(4).Compute(1).AwkScript=EmbeddedFile(2)
OtherDevice.Collect.Source(4).Compute(1).KeepOnlyRegExp="^MSHW;"
OtherDevice.Collect.Source(4).Compute(1).Separators=";"
OtherDevice.Collect.Source(4).Compute(1).SelectColumns="2,4"

// Make ID unique
// DeviceID;HealthValue;
OtherDevice.Collect.Source(4).Compute(2).Type="LeftConcat"
OtherDevice.Collect.Source(4).Compute(2).Column=1
OtherDevice.Collect.Source(4).Compute(2).String="DAE_"



// Source(5) = uemcli
OtherDevice.Collect.Source(5).Type="OSCommand"
OtherDevice.Collect.Source(5).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/ccard show | more"
OtherDevice.Collect.Source(5).ExecuteLocally=1
OtherDevice.Collect.Source(5).ForceSerialization=1
OtherDevice.Collect.Source(5).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;HealthValue;
OtherDevice.Collect.Source(5).Compute(1).Type="Awk"
OtherDevice.Collect.Source(5).Compute(1).AwkScript=EmbeddedFile(2)
OtherDevice.Collect.Source(5).Compute(1).KeepOnlyRegExp="^MSHW;"
OtherDevice.Collect.Source(5).Compute(1).Separators=";"
OtherDevice.Collect.Source(5).Compute(1).SelectColumns="2,4"

// Make ID unique
// DeviceID;HealthValue;
OtherDevice.Collect.Source(5).Compute(2).Type="LeftConcat"
OtherDevice.Collect.Source(5).Compute(2).Column=1
OtherDevice.Collect.Source(5).Compute(2).String="EHM_"




// Source(6) = uemcli
OtherDevice.Collect.Source(6).Type="OSCommand"
OtherDevice.Collect.Source(6).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/lcc show | more"
OtherDevice.Collect.Source(6).ExecuteLocally=1
OtherDevice.Collect.Source(6).ForceSerialization=1
OtherDevice.Collect.Source(6).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;HealthValue;
OtherDevice.Collect.Source(6).Compute(1).Type="Awk"
OtherDevice.Collect.Source(6).Compute(1).AwkScript=EmbeddedFile(2)
OtherDevice.Collect.Source(6).Compute(1).KeepOnlyRegExp="^MSHW;"
OtherDevice.Collect.Source(6).Compute(1).Separators=";"
OtherDevice.Collect.Source(6).Compute(1).SelectColumns="2,4"

// Make ID unique
// DeviceID;HealthValue;
OtherDevice.Collect.Source(6).Compute(2).Type="LeftConcat"
OtherDevice.Collect.Source(6).Compute(2).Column=1
OtherDevice.Collect.Source(6).Compute(2).String="LCC_"

// Join all this into one table..
// DeviceID;HealthValue;
OtherDevice.Collect.Source(7).Type="TableUnion"
OtherDevice.Collect.Source(7).Table1=%OtherDevice.Collect.Source(1)%
OtherDevice.Collect.Source(7).Table2=%OtherDevice.Collect.Source(2)%
OtherDevice.Collect.Source(7).Table3=%OtherDevice.Collect.Source(3)%
OtherDevice.Collect.Source(7).Table4=%OtherDevice.Collect.Source(4)%

OtherDevice.Collect.Source(8).Type="TableUnion"
OtherDevice.Collect.Source(8).Table1=%OtherDevice.Collect.Source(7)%
OtherDevice.Collect.Source(8).Table2=%OtherDevice.Collect.Source(5)%
OtherDevice.Collect.Source(8).Table3=%OtherDevice.Collect.Source(6)%

// Duplicate the Health Value
OtherDevice.Collect.Source(8).Compute(1).Type="DuplicateColumn"
OtherDevice.Collect.Source(8).Compute(1).Column=2

// Now translate into OK/Warning/Alarm
// SystemID;PatrolStatus;HealthValue;
OtherDevice.Collect.Source(8).Compute(2).Type="Translate"
OtherDevice.Collect.Source(8).Compute(2).Column="2"
OtherDevice.Collect.Source(8).Compute(2).TranslationTable="statusTranslationTable"

// Now translate Status information
// SystemID;PatrolStatus;StatusInformation;
OtherDevice.Collect.Source(8).Compute(3).Type="Translate"
OtherDevice.Collect.Source(8).Compute(3).Column="3"
OtherDevice.Collect.Source(8).Compute(3).TranslationTable="statusInformationTranslationTable"

// The value table
OtherDevice.Collect.ValueTable=%OtherDevice.Collect.Source(8)%
OtherDevice.Collect.DeviceID=ValueTable.Column(1)
OtherDevice.Collect.Status=ValueTable.Column(2)
OtherDevice.Collect.StatusInformation=ValueTable.Column(3)

//
//
// FanS
//

//
// Discovery

// Source(1) = the output of uemcli
Fan.Discovery.Source(1).Type="OsCommand"
Fan.Discovery.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/fan show -detail | more"
Fan.Discovery.Source(1).ExecuteLocally=1
Fan.Discovery.Source(1).ForceSerialization=1
Fan.Discovery.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;
Fan.Discovery.Source(1).Compute(1).Type="Awk"
Fan.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
Fan.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
Fan.Discovery.Source(1).Compute(1).Separators=";"
Fan.Discovery.Source(1).Compute(1).SelectColumns="2,3,4"

// Remove Fan from the DeviceName
// DeviceID;DeviceName;HealthValue;
Fan.Discovery.Source(1).Compute(2).Type="Replace"
Fan.Discovery.Source(1).Compute(2).Column=2
Fan.Discovery.Source(1).Compute(2).Replace="Fan_"
Fan.Discovery.Source(1).Compute(2).ReplaceBy=""

// The discovery table
// DeviceID;DeviceName;HealthValue;
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(2)

// Collect

// Collect type: MultiInstance
Fan.Collect.Type="MultiInstance"

// Source(1) = uemcli
Fan.Collect.Source(1).Type="OSCommand"
Fan.Collect.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/fan show | more"
Fan.Collect.Source(1).ExecuteLocally=1
Fan.Collect.Source(1).ForceSerialization=1
Fan.Collect.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;HealthValue;
Fan.Collect.Source(1).Compute(1).Type="Awk"
Fan.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
Fan.Collect.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
Fan.Collect.Source(1).Compute(1).Separators=";"
Fan.Collect.Source(1).Compute(1).SelectColumns="2,4"

// Duplicate the Health Value

Fan.Collect.Source(1).Compute(2).Type="DuplicateColumn"
Fan.Collect.Source(1).Compute(2).Column=2

// Now translate into OK/Warning/Alarm
// SystemID;PatrolStatus;HealthValue;
Fan.Collect.Source(1).Compute(3).Type="Translate"
Fan.Collect.Source(1).Compute(3).Column="2"
Fan.Collect.Source(1).Compute(3).TranslationTable="statusTranslationTable"

// Now translate Status information
// SystemID;PatrolStatus;StatusInformation;
Fan.Collect.Source(1).Compute(4).Type="Translate"
Fan.Collect.Source(1).Compute(4).Column="3"
Fan.Collect.Source(1).Compute(4).TranslationTable="statusInformationTranslationTable"

// The value table
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(2)
Fan.Collect.StatusInformation=ValueTable.Column(3)

//
//
// PhysicalDiskS
//

//
// Discovery

// Source(1) = the output of uemcli
PhysicalDisk.Discovery.Source(1).Type="OsCommand"
PhysicalDisk.Discovery.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/disk show -detail | more"
PhysicalDisk.Discovery.Source(1).ExecuteLocally=1
PhysicalDisk.Discovery.Source(1).ForceSerialization=1
PhysicalDisk.Discovery.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;Size;Pool;Manufacturer;Model;PartNumber;SerialNumber;Firmware;
PhysicalDisk.Discovery.Source(1).Compute(1).Type="Awk"
PhysicalDisk.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(3)
PhysicalDisk.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
PhysicalDisk.Discovery.Source(1).Compute(1).Separators=";"
PhysicalDisk.Discovery.Source(1).Compute(1).SelectColumns="2,3,4,5,6,7,8,9,10,11"

// Convert from GB to B
// DeviceID;DeviceName;HealthValue;Size;Pool;Manufacturer;Model;PartNumber;SerialNumber;Firmware;
PhysicalDisk.Discovery.Source(1).Compute(2).Type="Multiply"
PhysicalDisk.Discovery.Source(1).Compute(2).Column="4"
PhysicalDisk.Discovery.Source(1).Compute(2).MultiplyBy="1073741824"

// Source(2) = the output of uemcli
PhysicalDisk.Discovery.Source(2).Type="OsCommand"
PhysicalDisk.Discovery.Source(2).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/ssd show -detail | more"
PhysicalDisk.Discovery.Source(2).ExecuteLocally=1
PhysicalDisk.Discovery.Source(2).ForceSerialization=1
PhysicalDisk.Discovery.Source(2).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
//  DeviceID;DeviceName;HealthValue;Size;Pool;Manufacturer;Model;PartNumber;SerialNumber;Firmware;
PhysicalDisk.Discovery.Source(2).Compute(1).Type="Awk"
PhysicalDisk.Discovery.Source(2).Compute(1).AwkScript=EmbeddedFile(3)
PhysicalDisk.Discovery.Source(2).Compute(1).KeepOnlyRegExp="^MSHW;"
PhysicalDisk.Discovery.Source(2).Compute(1).Separators=";"
PhysicalDisk.Discovery.Source(2).Compute(1).SelectColumns="2,3,4,5,6,7,8,9,10,11"

// Convert from GB to B
// DeviceID;DeviceName;HealthValue;Size;Pool;Manufacturer;Model;PartNumber;SerialNumber;Firmware;
PhysicalDisk.Discovery.Source(2).Compute(2).Type="Multiply"
PhysicalDisk.Discovery.Source(2).Compute(2).Column="4"
PhysicalDisk.Discovery.Source(2).Compute(2).MultiplyBy="1073741824"

// Add SSD to the ID
// DeviceID;DeviceName;HealthValue;Size;Pool;Manufacturer;Model;PartNumber;SerialNumber;Firmware;
PhysicalDisk.Discovery.Source(2).Compute(3).Type="LeftConcat"
PhysicalDisk.Discovery.Source(2).Compute(3).Column=1
PhysicalDisk.Discovery.Source(2).Compute(3).String="SSD_"

// Union 1 and 2
// DeviceID;DeviceName;HealthValue;Size;Pool;Manufacturer;Model;PartNumber;SerialNumber;Firmware;
PhysicalDisk.Discovery.Source(3).Type="TableUnion"
PhysicalDisk.Discovery.Source(3).Table1=%PhysicalDisk.Discovery.Source(1)%
PhysicalDisk.Discovery.Source(3).Table2=%PhysicalDisk.Discovery.Source(2)%

// The discovery table
// DeviceID;DeviceName;HealthValue;Size;Pool;Manufacturer;Model;PartNumber;SerialNumber;Firmware;
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(3)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PhysicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(2)
PhysicalDisk.Discovery.Instance.Size=InstanceTable.Column(4)
PhysicalDisk.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(5)
PhysicalDisk.Discovery.Instance.Vendor=InstanceTable.Column(6)
PhysicalDisk.Discovery.Instance.Model=InstanceTable.Column(7)
PhysicalDisk.Discovery.Instance.Additionalinformation2=InstanceTable.Column(8)
PhysicalDisk.Discovery.Instance.SerialNumber=InstanceTable.Column(9)
PhysicalDisk.Discovery.Instance.FirmwareVersion=InstanceTable.Column(10)


// Collect

// Collect type: MultiInstance
PhysicalDisk.Collect.Type="MultiInstance"

// Source(1) = uemcli
PhysicalDisk.Collect.Source(1).Type="OSCommand"
PhysicalDisk.Collect.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/disk show | more"
PhysicalDisk.Collect.Source(1).ExecuteLocally=1
PhysicalDisk.Collect.Source(1).ForceSerialization=1
PhysicalDisk.Collect.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;HealthValue;
PhysicalDisk.Collect.Source(1).Compute(1).Type="Awk"
PhysicalDisk.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(3)
PhysicalDisk.Collect.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
PhysicalDisk.Collect.Source(1).Compute(1).Separators=";"
PhysicalDisk.Collect.Source(1).Compute(1).SelectColumns="2,4"


// Source(1) = uemcli
PhysicalDisk.Collect.Source(2).Type="OSCommand"
PhysicalDisk.Collect.Source(2).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /env/ssd show | more"
PhysicalDisk.Collect.Source(2).ExecuteLocally=1
PhysicalDisk.Collect.Source(2).ForceSerialization=1
PhysicalDisk.Collect.Source(2).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;HealthValue;
PhysicalDisk.Collect.Source(2).Compute(1).Type="Awk"
PhysicalDisk.Collect.Source(2).Compute(1).AwkScript=EmbeddedFile(3)
PhysicalDisk.Collect.Source(2).Compute(1).KeepOnlyRegExp="^MSHW;"
PhysicalDisk.Collect.Source(2).Compute(1).Separators=";"
PhysicalDisk.Collect.Source(2).Compute(1).SelectColumns="2,4"

// Add SSD to the ID
// DeviceID;HealthValue;
PhysicalDisk.Collect.Source(2).Compute(2).Type="LeftConcat"
PhysicalDisk.Collect.Source(2).Compute(2).Column=1
PhysicalDisk.Collect.Source(2).Compute(2).String="SSD_"

// Union 1 and 2
// DeviceID;HealthValue;
PhysicalDisk.Collect.Source(3).Type="TableUnion"
PhysicalDisk.Collect.Source(3).Table1=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.Source(3).Table2=%PhysicalDisk.Collect.Source(2)%


// Duplicate the Health Value
PhysicalDisk.Collect.Source(3).Compute(1).Type="DuplicateColumn"
PhysicalDisk.Collect.Source(3).Compute(1).Column=2

// Now translate into OK/Warning/Alarm
// SystemID;PatrolStatus;HealthValue;
PhysicalDisk.Collect.Source(3).Compute(2).Type="Translate"
PhysicalDisk.Collect.Source(3).Compute(2).Column="2"
PhysicalDisk.Collect.Source(3).Compute(2).TranslationTable="statusTranslationTable"

// Now translate Status information
// SystemID;PatrolStatus;StatusInformation;
PhysicalDisk.Collect.Source(3).Compute(3).Type="Translate"
PhysicalDisk.Collect.Source(3).Compute(3).Column="3"
PhysicalDisk.Collect.Source(3).Compute(3).TranslationTable="statusInformationTranslationTable"

// The value table
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(3)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(1)
PhysicalDisk.Collect.Status=ValueTable.Column(2)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(3)

//
//
// NetworkCardS
//

//
// Discovery

// Source(1) = the output of uemcli
NetworkCard.Discovery.Source(1).Type="OsCommand"
NetworkCard.Discovery.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /net/port/fc show -detail | more"
NetworkCard.Discovery.Source(1).ExecuteLocally=1
NetworkCard.Discovery.Source(1).ForceSerialization=1
NetworkCard.Discovery.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Discovery.Source(1).Compute(1).Type="Awk"
NetworkCard.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(4)
NetworkCard.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
NetworkCard.Discovery.Source(1).Compute(1).Separators=";"
NetworkCard.Discovery.Source(1).Compute(1).SelectColumns="2,3,4,5"

// Add Device Type and make ID unique
// DeviceType;DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Discovery.Source(1).Compute(2).Type="LeftConcat"
NetworkCard.Discovery.Source(1).Compute(2).Column=1
NetworkCard.Discovery.Source(1).Compute(2).String="FC Port;FC_"


// Source(2) = the output of uemcli
NetworkCard.Discovery.Source(2).Type="OsCommand"
NetworkCard.Discovery.Source(2).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /net/port/sas show -detail | more"
NetworkCard.Discovery.Source(2).ExecuteLocally=1
NetworkCard.Discovery.Source(2).ForceSerialization=1
NetworkCard.Discovery.Source(2).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Discovery.Source(2).Compute(1).Type="Awk"
NetworkCard.Discovery.Source(2).Compute(1).AwkScript=EmbeddedFile(4)
NetworkCard.Discovery.Source(2).Compute(1).KeepOnlyRegExp="^MSHW;"
NetworkCard.Discovery.Source(2).Compute(1).Separators=";"
NetworkCard.Discovery.Source(2).Compute(1).SelectColumns="2,3,4,5"

// Add Device Type and make ID unique
// DeviceType;DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Discovery.Source(2).Compute(2).Type="LeftConcat"
NetworkCard.Discovery.Source(2).Compute(2).Column=1
NetworkCard.Discovery.Source(2).Compute(2).String="SAS Port;SAS_"

// Source(3) = the output of uemcli
NetworkCard.Discovery.Source(3).Type="OsCommand"
NetworkCard.Discovery.Source(3).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /net/port/eth show -detail | more"
NetworkCard.Discovery.Source(3).ExecuteLocally=1
NetworkCard.Discovery.Source(3).ForceSerialization=1
NetworkCard.Discovery.Source(3).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Discovery.Source(3).Compute(1).Type="Awk"
NetworkCard.Discovery.Source(3).Compute(1).AwkScript=EmbeddedFile(4)
NetworkCard.Discovery.Source(3).Compute(1).KeepOnlyRegExp="^MSHW;"
NetworkCard.Discovery.Source(3).Compute(1).Separators=";"
NetworkCard.Discovery.Source(3).Compute(1).SelectColumns="2,3,4,5"

// Add Device Type and make ID unique
// DeviceType;DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Discovery.Source(3).Compute(2).Type="LeftConcat"
NetworkCard.Discovery.Source(3).Compute(2).Column=1
NetworkCard.Discovery.Source(3).Compute(2).String="Ethernet Port;ETH_"

// Join all this into one table..
// DeviceType;DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Discovery.Source(4).Type="TableUnion"
NetworkCard.Discovery.Source(4).Table1=%NetworkCard.Discovery.Source(1)%
NetworkCard.Discovery.Source(4).Table2=%NetworkCard.Discovery.Source(2)%
NetworkCard.Discovery.Source(4).Table3=%NetworkCard.Discovery.Source(3)%

// InstanceTable = Source(7)
// DeviceType;DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(4)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(2)
NetworkCard.Discovery.Instance.DisplayID=InstanceTable.Column(3)
NetworkCard.Discovery.Instance.DeviceType=InstanceTable.Column(1)

//
// Collect

// The NetworkCard collect is a "MultiInstance" collect
NetworkCard.Collect.Type="MultiInstance"

// Source(1) = the output of uemcli
NetworkCard.Collect.Source(1).Type="OsCommand"
NetworkCard.Collect.Source(1).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /net/port/fc show -detail | more"
NetworkCard.Collect.Source(1).ExecuteLocally=1
NetworkCard.Collect.Source(1).ForceSerialization=1
NetworkCard.Collect.Source(1).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Collect.Source(1).Compute(1).Type="Awk"
NetworkCard.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(4)
NetworkCard.Collect.Source(1).Compute(1).KeepOnlyRegExp="^MSHW;"
NetworkCard.Collect.Source(1).Compute(1).Separators=";"
NetworkCard.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5"

// Add Device Type and make ID unique
// DeviceType;DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Collect.Source(1).Compute(2).Type="LeftConcat"
NetworkCard.Collect.Source(1).Compute(2).Column=1
NetworkCard.Collect.Source(1).Compute(2).String="FC Port;FC_"


// Source(2) = the output of uemcli
NetworkCard.Collect.Source(2).Type="OsCommand"
NetworkCard.Collect.Source(2).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /net/port/sas show -detail | more"
NetworkCard.Collect.Source(2).ExecuteLocally=1
NetworkCard.Collect.Source(2).ForceSerialization=1
NetworkCard.Collect.Source(2).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Collect.Source(2).Compute(1).Type="Awk"
NetworkCard.Collect.Source(2).Compute(1).AwkScript=EmbeddedFile(4)
NetworkCard.Collect.Source(2).Compute(1).KeepOnlyRegExp="^MSHW;"
NetworkCard.Collect.Source(2).Compute(1).Separators=";"
NetworkCard.Collect.Source(2).Compute(1).SelectColumns="2,3,4,5"

// Add Device Type and make ID unique
// DeviceType;DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Collect.Source(2).Compute(2).Type="LeftConcat"
NetworkCard.Collect.Source(2).Compute(2).Column=1
NetworkCard.Collect.Source(2).Compute(2).String="SAS Port;SAS_"

// Source(3) = the output of uemcli
NetworkCard.Collect.Source(3).Type="OsCommand"
NetworkCard.Collect.Source(3).CommandLine="uemcli -d %{HOSTNAME} -u %{USERNAME} -p %{PASSWORD} -sslPolicy accept /net/port/eth show -detail | more"
NetworkCard.Collect.Source(3).ExecuteLocally=1
NetworkCard.Collect.Source(3).ForceSerialization=1
NetworkCard.Collect.Source(3).TimeOut="60"

// Process uemcli's output through awk EmbeddedFile
// DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Collect.Source(3).Compute(1).Type="Awk"
NetworkCard.Collect.Source(3).Compute(1).AwkScript=EmbeddedFile(4)
NetworkCard.Collect.Source(3).Compute(1).KeepOnlyRegExp="^MSHW;"
NetworkCard.Collect.Source(3).Compute(1).Separators=";"
NetworkCard.Collect.Source(3).Compute(1).SelectColumns="2,3,4,5"

// Add Device Type and make ID unique
// DeviceType;DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Collect.Source(3).Compute(2).Type="LeftConcat"
NetworkCard.Collect.Source(3).Compute(2).Column=1
NetworkCard.Collect.Source(3).Compute(2).String="Ethernet Port;ETH_"

// Join all this into one table..
// DeviceType;DeviceID;DeviceName;HealthValue;Link;
NetworkCard.Collect.Source(4).Type="TableUnion"
NetworkCard.Collect.Source(4).Table1=%NetworkCard.Collect.Source(1)%
NetworkCard.Collect.Source(4).Table2=%NetworkCard.Collect.Source(2)%
NetworkCard.Collect.Source(4).Table3=%NetworkCard.Collect.Source(3)%


// Duplicate the Health Value
// DeviceType;DeviceID;DeviceName;HealthValue;HealthValue;Link;
NetworkCard.Collect.Source(4).Compute(1).Type="DuplicateColumn"
NetworkCard.Collect.Source(4).Compute(1).Column=4

// Now translate into OK/Warning/Alarm
// DeviceType;DeviceID;DeviceName;HealthValue;HealthValue;Link;
NetworkCard.Collect.Source(4).Compute(2).Type="Translate"
NetworkCard.Collect.Source(4).Compute(2).Column=4
NetworkCard.Collect.Source(4).Compute(2).TranslationTable="statusTranslationTable"

// Now translate Status information
// DeviceType;DeviceID;DeviceName;HealthValue;HealthValue;Link;
NetworkCard.Collect.Source(4).Compute(3).Type="Translate"
NetworkCard.Collect.Source(4).Compute(3).Column=5
NetworkCard.Collect.Source(4).Compute(3).TranslationTable="statusInformationTranslationTable"

// The value table
NetworkCard.Collect.ValueTable=%NetworkCard.Collect.Source(4)%
NetworkCard.Collect.DeviceID=ValueTable.Column(2)
NetworkCard.Collect.Status=ValueTable.Column(4)
NetworkCard.Collect.StatusInformation=ValueTable.Column(5)
NetworkCard.Collect.LinkStatus=ValueTable.Column(6)


// The statusTranslationTable
statusTranslationTable(0)="UNKNOWN"
statusTranslationTable(5)="OK"
statusTranslationTable(7)="OK"
statusTranslationTable(10)="WARN"
statusTranslationTable(15)="WARN"
statusTranslationTable(20)="ALARM"
statusTranslationTable(25)="ALARM"
statusTranslationTable(30)="ALARM"
statusTranslationTable(Default)="UNKNOWN"

// The statusInformationTranslationTable
statusInformationTranslationTable(0)="Unknown"
statusInformationTranslationTable(5)=""
statusInformationTranslationTable(7)="OK but some issue present"
statusInformationTranslationTable(10)="Degraded"
statusInformationTranslationTable(15)="Minor Failure"
statusInformationTranslationTable(20)="Major Failure"
statusInformationTranslationTable(25)="Critical Failure"
statusInformationTranslationTable(30)="Non-Recoverable Error"
statusInformationTranslationTable(Default)="Unknown Status"

////////////////////////////////////////////////////////
///    E M B E D D E D   F I L E ! ! !
///    EmbeddedFile = awk script that parse the command output
///
/////////////////////////////////////////////////////////
EmbeddedFile(1):
$1 ~ /[0-9]+:/ && $2 ~ /[Ss]ystem/ && $3 ~ /[Nn]ame/ {
    SystemName = $NF
    SystemID = $1 ; gsub (/:/,"",SystemID) ;
    }

$1 ~ /[Mm]odel/ { Model = $NF}

$1 ~ /[Pp]roduct/ && $2 ~ /[Ss]erial/ && $3 ~ /[Nn]umber/ { SerialNumber = $NF }

$1 ~ /[Hh]ealth/ && $2 ~ /[Ss]tate/ && SystemID != "" {
    HealthValue = $NF ; gsub(/[()]/,"",HealthValue) ;
	  print "MSHW;" SystemID ";" SystemName ";" Model ";" SerialNumber ";" HealthValue ";"
	  SystemID = "" ; SystemName = "" ; Model = "" ; SerialNumber = "" ; HealthValue = "" ;
	  }
EmbeddedFile(1).End


////////////////////////////////////////////////////////
///    E M B E D D E D   F I L E ! ! !
///    EmbeddedFile = awk script that parse the command output
///    (Batteries / Memory Modules)
/////////////////////////////////////////////////////////
EmbeddedFile(2):
$1 ~ /[0-9]+:/ && $2 ~ /[Ii][Dd]/ {
    DeviceID = $1 ;DeviceID = $1 ; gsub (/:/,"",DeviceID) ;
    DisplayID = $NF ;
    }

$1 ~ /[Hh]ealth/ && $2 ~ /[Ss]tate/ && DeviceID != "" {
    HealthValue = $NF ; gsub(/[()]/,"",HealthValue) ;
	  print "MSHW;" DeviceID ";" DisplayID ";" HealthValue ";"
	  DeviceID = "" ; DisplayID = "" ; HealthValue = ""
	  }
EmbeddedFile(2).End


////////////////////////////////////////////////////////
///    E M B E D D E D   F I L E ! ! !
///    EmbeddedFile = awk script that parse the command output
///
/////////////////////////////////////////////////////////
EmbeddedFile(3):
$1 ~ /[0-9]+:/ && $2 ~ /[Ii][Dd]/ {
    DeviceID = $1 ;DeviceID = $1 ; gsub (/:/,"",DeviceID) ;
    DisplayID[DeviceID] = $NF
    }

$1 ~ /[Hh]ealth/ && $2 ~ /[Ss]tate/ {
    HealthValue[DeviceID] = $NF ; gsub(/[()]/,"",HealthValue[DeviceID]) ;
	  }

$1 ~ /[Uu]ser/ && $2 ~ /[Cc]apacity/ { Size[DeviceID] = $4 ; Size[DeviceID] = Size[DeviceID] / 1073741824 }

$1 ~ /[Pp]ool/ && $2 ~ /=/ { Pool[DeviceID] = $0 ; gsub (/.*= ?/,"",Pool[DeviceID]); Pool[DeviceID] = "Pool: " Pool[DeviceID] }

$1 ~ /[Mm]anufacturer/ && $NF !~ /=/ { Manufacturer[DeviceID] = $NF }

$1 ~ /[Mm]odel/ { Model[DeviceID] = $0 ; gsub (/.*= ?/,"",Model[DeviceID]); gsub (/ *$/,"",Model[DeviceID]); }

$1 ~ /[Pp]art/ && $2 ~ /[Nn]umber/ { PartNumber[DeviceID] = $0 ; gsub (/.*= ?/,"",PartNumber[DeviceID]);}

$1 ~ /[Ss]erial/ && $2 ~ /[Nn]umber/ { SerialNumber[DeviceID] = $NF }

$1 ~ /[Ff]irmware/ { Firmware[DeviceID] = $NF }

END { for (DeviceID in DisplayID) {
 	  	if (DeviceID != "" && Size[DeviceID] != "0" ) {
 	  	  print "MSHW;" DeviceID ";" DisplayID[DeviceID] ";" HealthValue[DeviceID] ";" Size[DeviceID] ";"Pool[DeviceID] ";" Manufacturer[DeviceID] ";" Model[DeviceID] ";Part Number: " PartNumber[DeviceID] ";" SerialNumber[DeviceID] ";" Firmware[DeviceID] ";"
	    }
	    }
	  }
EmbeddedFile(3).End

////////////////////////////////////////////////////////
///    E M B E D D E D   F I L E ! ! !
///    EmbeddedFile = awk script that parse the command output
///
/////////////////////////////////////////////////////////
EmbeddedFile(4):
$1 ~ /[0-9]+:/ && $2 ~ /[Ii][Dd]/ {
    DeviceID = $1 ;DeviceID = $1 ; gsub (/:/,"",DeviceID) ;
    DisplayID[DeviceID] = $NF
    }

$1 ~ /[Hh]ealth/ && $2 ~ /[Ss]tate/ { HealthValue[DeviceID] = $NF ; gsub(/[()]/,"",HealthValue[DeviceID]) }

$1 ~ /[Ss]peed/ && $2 ~ /=/ {
	  Speed[DeviceID] = $3 ;
	  if ($NF ~ /[Gg][Bb]/) {Speed[DeviceID] = Speed[DeviceID] * 1000}
	  Link[DeviceID] = "WARN"
	  if ( Speed[DeviceID] > 0 ) { Link[DeviceID] = "OK" }
	  }

END { for (DeviceID in DisplayID) {
 	  	if (DeviceID != "") {
 	  	  print "MSHW;" DeviceID ";" DisplayID[DeviceID] ";" HealthValue[DeviceID] ";" Link[DeviceID] ";"
	    }
	    }
	  }
EmbeddedFile(4).End
