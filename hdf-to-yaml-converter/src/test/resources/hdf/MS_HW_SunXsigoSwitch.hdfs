////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//
//      Supports: Sun Xsigo Switches
//                Connects to a SNMP agent
//				        Improves the monitoring over standard Fiber Alliance Connector
//


//
// Header
//

hdf.DisplayName="Oracle/Sun Xsigo Switch"
hdf.TypicalPlatform="Oracle/Sun Xsigo"
hdf.ReliesOn="Sun Xsigo SNMP Agent"
hdf.Version="1.0"
hdf.Comments="This connector discovers the enclosure and ports of the switch as well as the various environment sensors (temperatures, fans, power supplies, etc.). It relies on the SNMP protocol."
hdf.RemoteSupport="true"
hdf.AppliesToOS="Storage,Network"

// Supersedes the generic MIB-2 based connector
hdf.Supersedes="MS_HW_MIB2.hdf,MS_HW_GenericSwitchEnclosure.hdf"


//
// DETECTION
//

// Need a Xsigo Chassis OID
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.24440.3.1.1.1"

//
// Enclosure
//

// Source(1) = 	xsigoIoDirectorChassis SNMP table
// ChassisID;Vendor;Model;FirmwareVersion;ChassisName;SerialNumber;WWN;
Enclosure.Discovery.Source(1).Type="SnmpTable"
Enclosure.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.24440.3.1.1.1"
Enclosure.Discovery.Source(1).SnmpTableSelectColumns="1,2,4,5,6,9,17"

Enclosure.Discovery.Source(1).Compute(1).Type="LeftConcat"
Enclosure.Discovery.Source(1).Compute(1).Column=7
Enclosure.Discovery.Source(1).Compute(1).String="WWN: "

// InstanceTable = Source(1)
// ChassisID;Vendor;Model;FirmwareVersion;ChassisName;SerialNumber;WWN;
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Enclosure.Discovery.Instance.DisplayID=InstanceTable.Column(5)
Enclosure.Discovery.Instance.Vendor=InstanceTable.Column(2)
Enclosure.Discovery.Instance.Model=InstanceTable.Column(3)
Enclosure.Discovery.Instance.SerialNumber=InstanceTable.Column(6)
Enclosure.Discovery.Instance.BiosVersion=InstanceTable.Column(4)
Enclosure.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(7)
Enclosure.Discovery.Instance.Type="Chassis"

//
// Collect

// Collect type = multi-instance
Enclosure.Collect.Type="MultiInstance"

// Get the Enclosure Status
// ChassisID;State;
Enclosure.Collect.Source(1).Type="SnmpTable"
Enclosure.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.24440.3.1.1.1"
Enclosure.Collect.Source(1).SnmpTableSelectColumns="1,14"

// Duplicate the State
// ChassisID;State;State;
Enclosure.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Enclosure.Collect.Source(1).Compute(1).Column=2

// Translate the first state to a Patrol Status
// ChassisID;PatrolStatus;State;
Enclosure.Collect.Source(1).Compute(2).Type="Translate"
Enclosure.Collect.Source(1).Compute(2).Column=2
Enclosure.Collect.Source(1).Compute(2).TranslationTable="XsigoOperStateTranslationTable"

// Translate the second state to a Status Information
// ChassisID;PatrolStatus;StatusInformation;
Enclosure.Collect.Source(1).Compute(3).Type="Translate"
Enclosure.Collect.Source(1).Compute(3).Column=3
Enclosure.Collect.Source(1).Compute(3).TranslationTable="XsigoOperStateInformationTranslationTable"

// ValueTable = Source(1)
// ID;PatrolStatus;Value;
Enclosure.Collect.ValueTable=%Enclosure.Collect.Source(1)%
Enclosure.Collect.DeviceID=ValueTable.Column(1)
Enclosure.Collect.Status=ValueTable.Column(2)
Enclosure.Collect.StatusInformation=ValueTable.Column(3)

// The XsigoOperStateTranslationTable
XsigoOperStateTranslationTable(1)="WARN"
XsigoOperStateTranslationTable(2)="OK"
XsigoOperStateTranslationTable(3)="OK"
XsigoOperStateTranslationTable(4)="ALARM"
XsigoOperStateTranslationTable(5)="WARN"
XsigoOperStateTranslationTable(6)="WARN"
XsigoOperStateTranslationTable(7)="WARN"
XsigoOperStateTranslationTable(8)="OK"
XsigoOperStateTranslationTable(9)="OK"
XsigoOperStateTranslationTable(10)="WARN"
XsigoOperStateTranslationTable(11)="WARN"
XsigoOperStateTranslationTable(12)="WARN"
XsigoOperStateTranslationTable(13)="OK"
XsigoOperStateTranslationTable(14)="ALARM"
XsigoOperStateTranslationTable(15)="WARN"
XsigoOperStateTranslationTable(16)="ALARM"
XsigoOperStateTranslationTable(17)="ALARM"
XsigoOperStateTranslationTable(18)="WARN"
XsigoOperStateTranslationTable(19)="ALARM"
XsigoOperStateTranslationTable(20)="ALARM"
XsigoOperStateTranslationTable(21)="ALARM"
XsigoOperStateTranslationTable(22)="WARN"
XsigoOperStateTranslationTable(23)="WARN"
XsigoOperStateTranslationTable(24)="ALARM"
XsigoOperStateTranslationTable(25)="ALARM"
XsigoOperStateTranslationTable(26)="WARN"
XsigoOperStateTranslationTable(27)="WARN"
XsigoOperStateTranslationTable(28)="WARN"
XsigoOperStateTranslationTable(29)="OK"
XsigoOperStateTranslationTable(30)="OK"
XsigoOperStateTranslationTable(31)="WARN"
XsigoOperStateTranslationTable(32)="OK"
XsigoOperStateTranslationTable(33)="OK"
XsigoOperStateTranslationTable(34)="WARN"
XsigoOperStateTranslationTable(35)="WARN"
XsigoOperStateTranslationTable(36)="OK"
XsigoOperStateTranslationTable(37)="WARN"
XsigoOperStateTranslationTable(38)="WARN"
XsigoOperStateTranslationTable(39)="WARN"
XsigoOperStateTranslationTable(40)="WARN"
XsigoOperStateTranslationTable(Default)="UNKNOWN"

// The XsigoOperStateInformationTranslationTable
XsigoOperStateInformationTranslationTable(1)="Indeterminate"
XsigoOperStateInformationTranslationTable(2)=""
XsigoOperStateInformationTranslationTable(3)=""
XsigoOperStateInformationTranslationTable(4)="Failed"
XsigoOperStateInformationTranslationTable(5)="Initializing"
XsigoOperStateInformationTranslationTable(6)="Shuttingdown"
XsigoOperStateInformationTranslationTable(7)="Restarting"
XsigoOperStateInformationTranslationTable(8)="Restarted"
XsigoOperStateInformationTranslationTable(9)="Scheduled"
XsigoOperStateInformationTranslationTable(10)="Resource Missing"
XsigoOperStateInformationTranslationTable(11)="Resource Mismatch"
XsigoOperStateInformationTranslationTable(12)="Test In Progress"
XsigoOperStateInformationTranslationTable(13)="TestSucceeded"
XsigoOperStateInformationTranslationTable(14)="TestFailed"
XsigoOperStateInformationTranslationTable(15)="Authenticating"
XsigoOperStateInformationTranslationTable(16)="Authentication Failed"
XsigoOperStateInformationTranslationTable(17)="Insufficient Resources"
XsigoOperStateInformationTranslationTable(18)="Underlying Resource Down"
XsigoOperStateInformationTranslationTable(19)="Underlying Resource Failed"
XsigoOperStateInformationTranslationTable(20)="Underlying Resource Missing"
XsigoOperStateInformationTranslationTable(21)="Underlying Resource Mismatch"
XsigoOperStateInformationTranslationTable(22)="Underlying Resource InTest"
XsigoOperStateInformationTranslationTable(23)="Underlying Resource Authenticating"
XsigoOperStateInformationTranslationTable(24)="Underlying Resource Authentication Failed"
XsigoOperStateInformationTranslationTable(25)="Underlying Resource Insufficient Resources"
XsigoOperStateInformationTranslationTable(26)="Underlying Resource Initializing"
XsigoOperStateInformationTranslationTable(27)="Underlying Resource Shuttingdown"
XsigoOperStateInformationTranslationTable(28)="Partial Failure"
XsigoOperStateInformationTranslationTable(29)="Standby"
XsigoOperStateInformationTranslationTable(30)="Ready"
XsigoOperStateInformationTranslationTable(31)="Resource Unavailable"
XsigoOperStateInformationTranslationTable(32)="Pooled"
XsigoOperStateInformationTranslationTable(33)="Available"
XsigoOperStateInformationTranslationTable(34)="Booting"
XsigoOperStateInformationTranslationTable(35)="Host Driver Mismatch"
XsigoOperStateInformationTranslationTable(36)="Active"
XsigoOperStateInformationTranslationTable(37)="Host Control Path Down"
XsigoOperStateInformationTranslationTable(38)="Removed"
XsigoOperStateInformationTranslationTable(39)="Unassigned"
XsigoOperStateInformationTranslationTable(40)="Uninitialized"
XsigoOperStateInformationTranslationTable(Default)="UNKNOWN"

//
// TEMPERATURES
//

//
// Discovery

// Source(1) = xsigoTemperatureProbeTable
// ID;Name;Location;Threshold;
Temperature.Discovery.Source(1).Type="SnmpTable"
Temperature.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.24440.3.1.1.4.1"
Temperature.Discovery.Source(1).SnmpTableSelectColumns="1,2,3,5"

// Add a dash to the Location
// ID;Name;Location;Threshold;
Temperature.Discovery.Source(1).Compute(1).Type="RightConcat"
Temperature.Discovery.Source(1).Compute(1).Column=3
Temperature.Discovery.Source(1).Compute(1).String="-"

// Replace underscores with dashes
// ID;Name;Location;Threshold;
Temperature.Discovery.Source(1).Compute(2).Type="Replace"
Temperature.Discovery.Source(1).Compute(2).Column=2
Temperature.Discovery.Source(1).Compute(2).Replace="_"
Temperature.Discovery.Source(1).Compute(2).ReplaceBy="-"

// Add the Location to the Name
// ID;Name;Location;Threshold;
Temperature.Discovery.Source(1).Compute(3).Type="RightConcat"
Temperature.Discovery.Source(1).Compute(3).Column=3
Temperature.Discovery.Source(1).Compute(3).String=Column(2)

// InstanceTable = Source(1)
// ID;Name;Location;Threshold;
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Temperature.Discovery.Instance.DisplayID=InstanceTable.Column(3)
Temperature.Discovery.Instance.AlarmThreshold=InstanceTable.Column(4)

//
// Collect

// Collect type = multi-instance
Temperature.Collect.Type="MultiInstance"

// Source(1) = xsigoTemperatureProbeTable SNMP Table
// ID;Value;
Temperature.Collect.Source(1).Type="SnmpTable"
Temperature.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.24440.3.1.1.4.1"
Temperature.Collect.Source(1).SnmpTableSelectColumns="1,4"

// ValueTable = Source(1)
// ID;PatrolStatus;Value;
Temperature.Collect.ValueTable=%Temperature.Collect.Source(1)%
Temperature.Collect.DeviceID=ValueTable.Column(1)
Temperature.Collect.Temperature=ValueTable.Column(2)


//
// FANS
//

//
// Discovery

// Source(1) = xsigoFanTableEntry
// ID;Location;ExpectedSpeed;
Fan.Discovery.Source(1).Type="SnmpTable"
Fan.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.24440.3.1.1.3.1"
Fan.Discovery.Source(1).SnmpTableSelectColumns="1,2,6"

// Remove Fan- from the Location
// ID;Location;ExpectedSpeed;
Fan.Discovery.Source(1).Compute(1).Type="Replace"
Fan.Discovery.Source(1).Compute(1).Column=2
Fan.Discovery.Source(1).Compute(1).Replace="Fan-"
Fan.Discovery.Source(1).Compute(1).ReplaceBy=""

// InstanceTable = Source(1)
// ID;Location;ExpectedSpeed;
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(2)
Fan.Discovery.Instance.WarningThreshold=InstanceTable.Column(3)

//
// Collect

// Collect type = multi-instance
Fan.Collect.Type="MultiInstance"

// Source(1) = xsigoFanTableEntry SNMP Table
// ID;Speed;State;
Fan.Collect.Source(1).Type="SnmpTable"
Fan.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.24440.3.1.1.3.1"
Fan.Collect.Source(1).SnmpTableSelectColumns="1,5,8"

// Duplicate the State
// ID;Speed;State;State;
Fan.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Fan.Collect.Source(1).Compute(1).Column=3

// Translate the first state to a Patrol Status
// ID;Speed;PatrolStatus;State;
Fan.Collect.Source(1).Compute(2).Type="Translate"
Fan.Collect.Source(1).Compute(2).Column=3
Fan.Collect.Source(1).Compute(2).TranslationTable="XsigoOperStateTranslationTable"

// Translate the second state to a Status Information
// ID;Speed;PatrolStatus;StatusInformation;
Fan.Collect.Source(1).Compute(3).Type="Translate"
Fan.Collect.Source(1).Compute(3).Column=4
Fan.Collect.Source(1).Compute(3).TranslationTable="XsigoOperStateInformationTranslationTable"

// ValueTable = Source(1)
// ID;Speed;PatrolStatus;StatusInformation;
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(3)
Fan.Collect.Speed=ValueTable.Column(2)
Fan.Collect.StatusInformation=ValueTable.Column(4)

//
// PowerSupply
//

//
// Discovery

// Source(1) = xsigoPowerSupplyTableEntry
// ID;Location;
PowerSupply.Discovery.Source(1).Type="SnmpTable"
PowerSupply.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.24440.3.1.1.5.1"
PowerSupply.Discovery.Source(1).SnmpTableSelectColumns="1,2"

// Remove Fan- from the Location
// ID;Location;ExpectedSpeed;
PowerSupply.Discovery.Source(1).Compute(1).Type="Replace"
PowerSupply.Discovery.Source(1).Compute(1).Column=2
PowerSupply.Discovery.Source(1).Compute(1).Replace="PowerSupply-"
PowerSupply.Discovery.Source(1).Compute(1).ReplaceBy=""

// InstanceTable = Source(1)
// ID;Location;ExpectedSpeed;
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(2)

//
// Collect

// Collect type = multi-instance
PowerSupply.Collect.Type="MultiInstance"

// Source(1) = xsigoPowerSupplyTableEntry SNMP Table
// ID;State;
PowerSupply.Collect.Source(1).Type="SnmpTable"
PowerSupply.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.24440.3.1.1.5.1"
PowerSupply.Collect.Source(1).SnmpTableSelectColumns="1,7"

// Duplicate the State
// ID;State;State;
PowerSupply.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(1).Column=2

// Translate the first state to a Patrol Status
// ID;PatrolStatus;State;
PowerSupply.Collect.Source(1).Compute(2).Type="Translate"
PowerSupply.Collect.Source(1).Compute(2).Column=2
PowerSupply.Collect.Source(1).Compute(2).TranslationTable="XsigoOperStateTranslationTable"

// Translate the second state to a Status Information
// ID;PatrolStatus;StatusInformation;
PowerSupply.Collect.Source(1).Compute(3).Type="Translate"
PowerSupply.Collect.Source(1).Compute(3).Column=3
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="XsigoOperStateInformationTranslationTable"

// ValueTable = Source(1)
// ID;PatrolStatus;StatusInformation;
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)

//
// OtherDevice
//

//
// Discovery

// Source(1) = xsigoCardTableEntry
// ID;Model;SerialNumber;
OtherDevice.Discovery.Source(1).Type="SnmpTable"
OtherDevice.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.24440.3.1.1.2.1"
OtherDevice.Discovery.Source(1).SnmpTableSelectColumns="1,3,4"

// Add Serial Number: label to AdditionalInformation1
OtherDevice.Discovery.Source(1).Compute(1).Type="LeftConcat"
OtherDevice.Discovery.Source(1).Compute(1).Column=3
OtherDevice.Discovery.Source(1).Compute(1).String="Serial Number: "

// Duplicate column 2 so we can keep additonalLabel for regression
OtherDevice.Discovery.Source(1).Compute(2).Type="DuplicateColumn"
OtherDevice.Discovery.Source(1).Compute(2).Column=2

// Add Model: label to AdditionalInformation2
OtherDevice.Discovery.Source(1).Compute(3).Type="LeftConcat"
OtherDevice.Discovery.Source(1).Compute(3).Column=3
OtherDevice.Discovery.Source(1).Compute(3).String="Model: "

// InstanceTable = Source(1)
// ID;Model;SerialNumber;
OtherDevice.Discovery.InstanceTable=%OtherDevice.Discovery.Source(1)%
OtherDevice.Discovery.Instance.DeviceID=InstanceTable.Column(1)
OtherDevice.Discovery.Instance.DisplayID=InstanceTable.Column(1)
OtherDevice.Discovery.Instance.DeviceType="Slot"
OtherDevice.Discovery.Instance.AdditionalLabel=InstanceTable.Column(2)
OtherDevice.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(3)
OtherDevice.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(4)

//
// Collect

// Collect type = multi-instance
OtherDevice.Collect.Type="MultiInstance"

// Source(1) = xsigoCardTableEntry SNMP Table
// ID;State;
OtherDevice.Collect.Source(1).Type="SnmpTable"
OtherDevice.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.24440.3.1.1.2.1"
OtherDevice.Collect.Source(1).SnmpTableSelectColumns="1,7"

// Duplicate the State
// ID;State;State;
OtherDevice.Collect.Source(1).Compute(1).Type="DuplicateColumn"
OtherDevice.Collect.Source(1).Compute(1).Column=2

// Translate the first state to a Patrol Status
// ID;PatrolStatus;State;
OtherDevice.Collect.Source(1).Compute(2).Type="Translate"
OtherDevice.Collect.Source(1).Compute(2).Column=2
OtherDevice.Collect.Source(1).Compute(2).TranslationTable="XsigoOperStateTranslationTable"

// Translate the second state to a Status Information
// ID;PatrolStatus;StatusInformation;
OtherDevice.Collect.Source(1).Compute(3).Type="Translate"
OtherDevice.Collect.Source(1).Compute(3).Column=3
OtherDevice.Collect.Source(1).Compute(3).TranslationTable="XsigoOperStateInformationTranslationTable"

// ValueTable = Source(1)
// ID;PatrolStatus;StatusInformation;
OtherDevice.Collect.ValueTable=%OtherDevice.Collect.Source(1)%
OtherDevice.Collect.DeviceID=ValueTable.Column(1)
OtherDevice.Collect.Status=ValueTable.Column(2)
OtherDevice.Collect.StatusInformation=ValueTable.Column(3)

//
// NetworkCard
//

//
// Discovery

// Source(1) = xsigoPortTableEntry
// ID;Location;Type;WWPN;
NetworkCard.Discovery.Source(1).Type="SnmpTable"
NetworkCard.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.24440.3.1.1.6.1"
NetworkCard.Discovery.Source(1).SnmpTableSelectColumns="1,2,3,10"

// Translate the Port Type
// ID;Location;Type;WWPN;
NetworkCard.Discovery.Source(1).Compute(1).Type="Translate"
NetworkCard.Discovery.Source(1).Compute(1).Column=3
NetworkCard.Discovery.Source(1).Compute(1).TranslationTable="PortTypeTranslationTable"

// WaveTypeTranslationTable
PortTypeTranslationTable(111)="nwEthernet100Mbport"
PortTypeTranslationTable(112)="nwEthernet1GbPort"
PortTypeTranslationTable(113)="nwEthernet10GbPort"
PortTypeTranslationTable(121)="sanFcPort"
PortTypeTranslationTable(123)="sanFcPort"
PortTypeTranslationTable(131)="ib10GbPort"
PortTypeTranslationTable(Default)=""

// Source(2) = ifMIBObjects SNMP Table
// See if there are 64 bit counters
// Location;ReceivedBytes64;
NetworkCard.Discovery.Source(2).Type="SnmpTable"
NetworkCard.Discovery.Source(2).SnmpTableOid="1.3.6.1.2.1.31.1.1.1"
NetworkCard.Discovery.Source(2).SnmpTableSelectColumns="1,6"

// Join 1 and 2
// ID;Location;Type;WWPN;Location;ReceivedBytes64;
NetworkCard.Discovery.Source(3).Type="TableJoint"
NetworkCard.Discovery.Source(3).LeftTable=%NetworkCard.Discovery.Source(1)%
NetworkCard.Discovery.Source(3).RightTable=%NetworkCard.Discovery.Source(2)%
NetworkCard.Discovery.Source(3).LeftKeyColumn=2
NetworkCard.Discovery.Source(3).RightKeyColumn=1
NetworkCard.Discovery.Source(3).DefaultRightLine=";;"

// InstanceTable = Source(1)
// ID;Location;Type;WWPN;Location;ReceivedBytes64;
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(3)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(1)
NetworkCard.Discovery.Instance.DisplayID=InstanceTable.Column(2)
NetworkCard.Discovery.Instance.DeviceType=InstanceTable.Column(3)
NetworkCard.Discovery.Instance.PhysicalAddress=InstanceTable.Column(4)
NetworkCard.Discovery.Instance.PhysicalAddressType="WWN"
NetworkCard.Discovery.Instance.ParameterActivation.ReceivedPackets=InstanceTable.Column(6)
NetworkCard.Discovery.Instance.ParameterActivation.TransmittedPackets=InstanceTable.Column(6)
NetworkCard.Discovery.Instance.ParameterActivation.ErrorCount=InstanceTable.Column(6)
NetworkCard.Discovery.Instance.ParameterActivation.ReceivedBytes=InstanceTable.Column(6)
NetworkCard.Discovery.Instance.ParameterActivation.TransmittedBytes=InstanceTable.Column(6)

//
// Collect

// Collect type = multi-instance
NetworkCard.Collect.Type="MultiInstance"

// Source(1) = xsigoPortTableEntry SNMP Table
// ID;Speed;State;Location;
NetworkCard.Collect.Source(1).Type="SnmpTable"
NetworkCard.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.24440.3.1.1.6.1"
NetworkCard.Collect.Source(1).SnmpTableSelectColumns="1,5,7,2"

// Duplicate the State (twice)
// ID;Speed;State;State;State;Location;
NetworkCard.Collect.Source(1).Compute(1).Type="DuplicateColumn"
NetworkCard.Collect.Source(1).Compute(1).Column=3

NetworkCard.Collect.Source(1).Compute(2).Type="DuplicateColumn"
NetworkCard.Collect.Source(1).Compute(2).Column=3

// Translate the first state to a Patrol Status
// ID;Speed;PatrolStatus;State;State;Location;
NetworkCard.Collect.Source(1).Compute(3).Type="Translate"
NetworkCard.Collect.Source(1).Compute(3).Column=3
NetworkCard.Collect.Source(1).Compute(3).TranslationTable="XsigoOperStateTranslationTable"

// Translate the second state to a Status Information
// ID;Speed;PatrolStatus;StatusInformation;State;Location;
NetworkCard.Collect.Source(1).Compute(4).Type="Translate"
NetworkCard.Collect.Source(1).Compute(4).Column=4
NetworkCard.Collect.Source(1).Compute(4).TranslationTable="XsigoOperStateInformationTranslationTable"

// Translate the third state to a link status
// ID;Speed;PatrolStatus;StatusInformation;LinkStatus;Location;
NetworkCard.Collect.Source(1).Compute(5).Type="Translate"
NetworkCard.Collect.Source(1).Compute(5).Column=5
NetworkCard.Collect.Source(1).Compute(5).TranslationTable="PortLinkStatusInformationTranslationTable"

// The PortLinkStatusInformationTranslationTable
PortLinkStatusInformationTranslationTable(2)="OK"
PortLinkStatusInformationTranslationTable(3)="WARN"
PortLinkStatusInformationTranslationTable(Default)=""

// Source(2) = ifMIBObjects SNMP Table
// Location;SpeedMBs;ReceivedBytes64;ReceivedUnicastPackets64;ifHCInMulticastPkts64;ifHCInBroadcastPkts64;TransmittedBytes64;TransmittedPackets64;ifHCOutMulticastPkts;ifHCOutBroadcastPkts;
NetworkCard.Collect.Source(2).Type="SnmpTable"
NetworkCard.Collect.Source(2).SnmpTableOid="1.3.6.1.2.1.31.1.1.1"
NetworkCard.Collect.Source(2).SnmpTableSelectColumns="1,15,6,7,8,9,10,11,12,13"

// Add MulticastPkts and BroadcastPkts to UnicastPackets
// Location;SpeedMBs;ReceivedBytes64;ReceivedUnicastPackets64;ifHCInMulticastPkts64;ifHCInBroadcastPkts64;TransmittedBytes64;TransmittedPackets64;ifHCOutMulticastPkts;ifHCOutBroadcastPkts;
NetworkCard.Collect.Source(2).Compute(1).Type="Add"
NetworkCard.Collect.Source(2).Compute(1).Column=4
NetworkCard.Collect.Source(2).Compute(1).Add=Column(5)

NetworkCard.Collect.Source(2).Compute(2).Type="Add"
NetworkCard.Collect.Source(2).Compute(2).Column=4
NetworkCard.Collect.Source(2).Compute(2).Add=Column(6)

NetworkCard.Collect.Source(2).Compute(3).Type="Add"
NetworkCard.Collect.Source(2).Compute(3).Column=8
NetworkCard.Collect.Source(2).Compute(3).Add=Column(9)

NetworkCard.Collect.Source(2).Compute(4).Type="Add"
NetworkCard.Collect.Source(2).Compute(4).Column=8
NetworkCard.Collect.Source(2).Compute(4).Add=Column(10)

// Keep only useful columns
// Location;SpeedMBs;ReceivedBytes64;ReceivedPackets64;TransmittedBytes64;TransmittedPackets64;
NetworkCard.Collect.Source(2).Compute(5).Type="KeepColumns"
NetworkCard.Collect.Source(2).Compute(5).ColumnNumbers="1,2,3,4,7,8"

// Join the Xsigo port information to the MIB2 statistics.
// ID;Speed;PatrolStatus;StatusInformation;LinkStatus;Location;Location;SpeedMBs;ReceivedBytes64;ReceivedPackets64;TransmittedBytes64;TransmittedPackets64;
NetworkCard.Collect.Source(3).Type="TableJoint"
NetworkCard.Collect.Source(3).LeftTable=%NetworkCard.Collect.Source(1)%
NetworkCard.Collect.Source(3).RightTable=%NetworkCard.Collect.Source(2)%
NetworkCard.Collect.Source(3).LeftKeyColumn=6
NetworkCard.Collect.Source(3).RightKeyColumn=1
NetworkCard.Collect.Source(3).DefaultRightLine=";;;;;;"

// ValueTable = Source(1)
//  1   2        3              4               5          6         7     8           9              10                 11                  12
// ID;Speed;PatrolStatus;StatusInformation;LinkStatus;Location;Location;SpeedMBs;ReceivedBytes64;ReceivedPackets64;TransmittedBytes64;TransmittedPackets64;
NetworkCard.Collect.ValueTable=%NetworkCard.Collect.Source(3)%
NetworkCard.Collect.DeviceID=ValueTable.Column(1)
NetworkCard.Collect.LinkSpeed=ValueTable.Column(2)
NetworkCard.Collect.Status=ValueTable.Column(3)
NetworkCard.Collect.StatusInformation=ValueTable.Column(4)
NetworkCard.Collect.LinkStatus=ValueTable.Column(5)
// NetworkCard.Collect.ErrorCount=ValueTable.Column()
NetworkCard.Collect.ReceivedPackets=ValueTable.Column(10)
NetworkCard.Collect.TransmittedPackets=ValueTable.Column(12)
NetworkCard.Collect.ReceivedBytes=ValueTable.Column(9)
NetworkCard.Collect.TransmittedBytes=ValueTable.Column(11)
