//
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//             MS_HW_CiscoUCSSCIMC.hdf
//
//         Supports: Cisco UCS S-Series Servers
//
//

// HEADER

hdf.DisplayName="Cisco UCS S-Series CIMC (SNMP)"
hdf.TypicalPlatform="Cisco UCS"
hdf.ReliesOn="Cisco S-Series CIMC"
hdf.Comments="This connector provides hardware monitoring for the Cisco S-Series Servers with CIMC cards via SNMP."
hdf.RemoteSupport="true"
hdf.LocalSupport="false"
hdf.AppliesToOS="OOB"
hdf.Supersedes="MS_HW_CiscoUCSCIMC.hdf"

// DETECTION
// Does a get_next to see if there that there is come CPU information
//We are sure to have a cisco
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.9.9.719.1.41.9"

//Now make sure it's a S series
Detection.Criteria(2).Type="SNMP"
Detection.Criteria(2).SnmpGet="1.3.6.1.2.1.1.1.0"
Detection.Criteria(2).ExpectedResult="UCS S"

//##################################### ENCLOSURE #####################################//
// Vendor/Model in one field, no spaces.
// Model;
Enclosure.Discovery.Source(1).Type="SnmpGet"
Enclosure.Discovery.Source(1).SnmpOid="1.3.6.1.2.1.1.1.0"

// Get rid of CIMC in the model
// Model;
Enclosure.Discovery.Source(1).Compute(1).Type="Replace"
Enclosure.Discovery.Source(1).Compute(1).Column="1"
Enclosure.Discovery.Source(1).Compute(1).Replace="Cisco Integrated Management Controller(CIMC) ["
Enclosure.Discovery.Source(1).Compute(1).ReplaceBy=""


// Get rid of Cisco IMC in the model
// Model;
Enclosure.Discovery.Source(1).Compute(2).Type="Replace"
Enclosure.Discovery.Source(1).Compute(2).Column="1"
Enclosure.Discovery.Source(1).Compute(2).Replace="Cisco Integrated Management Controller(Cisco IMC) ["
Enclosure.Discovery.Source(1).Compute(2).ReplaceBy=""

// Add a Joiner
// MSHW;Model;
Enclosure.Discovery.Source(1).Compute(3).Type="LeftConcat"
Enclosure.Discovery.Source(1).Compute(3).Column=1
Enclosure.Discovery.Source(1).Compute(3).String="MSHW;"

//Exclude the second enclosure created in case the output of the getnext is on two lines
// MSHW;Model
Enclosure.Discovery.Source(1).Compute(4).Type="ExcludeMatchingLines"
Enclosure.Discovery.Source(1).Compute(4).Column=2
Enclosure.Discovery.Source(1).Compute(4).RegExp="^]"

//Find deviceID
//DN
Enclosure.Discovery.Source(2).Type="SnmpGet"
Enclosure.Discovery.Source(2).SnmpOid="1.3.6.1.4.1.9.9.719.1.9.35.1.2.1"

//"Enclosure";DN
Enclosure.Discovery.Source(2).Compute(1).Type="LeftConcat"
Enclosure.Discovery.Source(2).Compute(1).Column=1
Enclosure.Discovery.Source(2).Compute(1).String="Enclosure;"

MSHW;DN_truncated
Enclosure.Discovery.Source(2).Compute(2).Type="Awk"
Enclosure.Discovery.Source(2).Compute(2).AwkScript=EmbeddedFile(1)
Enclosure.Discovery.Source(2).Compute(2).Separators=";"
Enclosure.Discovery.Source(2).Compute(2).SelectColumns="1,4"

// Join Old and New
// MSHW;Model;MSHW;DN_truncated;
Enclosure.Discovery.Source(3).Type="TableJoint"
Enclosure.Discovery.Source(3).LeftTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Source(3).RightTable=%Enclosure.Discovery.Source(2)%
Enclosure.Discovery.Source(3).LeftKeyColumn=1
Enclosure.Discovery.Source(3).RightKeyColumn=1
Enclosure.Discovery.Source(3).DefaultRightLine=";;;;;"

// The InstanceTable
// MSHW;Model;MSHW;DN_truncated
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(3)%
Enclosure.Discovery.Instance.DeviceID=InstanceTable.Column(4)
Enclosure.Discovery.Instance.DisplayID=InstanceTable.Column(2)
Enclosure.Discovery.Instance.Model=InstanceTable.Column(2)
Enclosure.Discovery.Instance.Vendor="Cisco"

//##################################### BLADE #####################################//

// Source(1) = cucsComputeRackUnitEntry
// Name;Model;Serial;OperState;Vendor;EnclosurePresence;DN;
Blade.Discovery.Source(1).Type="SnmpTable"
Blade.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.9.35.1"
Blade.Discovery.Source(1).SnmpTableSelectColumns="3,32,47,42,51,45,2"

//Remove lines where cucsComputeRackUnitPresence = 1(Empty) and 11 (Missing)
Blade.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
Blade.Discovery.Source(1).Compute(1).Column=6
Blade.Discovery.Source(1).Compute(1).ValueList="1,11"

//"Blade";Name;Model;Serial;OperState;Vendor;EnclosurePresence;DN;
Blade.Discovery.Source(1).Compute(2).Type="LeftConcat"
Blade.Discovery.Source(1).Compute(2).Column=1
Blade.Discovery.Source(1).Compute(2).String="Blade;"

//Name;Model;Serial;OperState;Vendor;EnclosurePresence;DN;name_truncated;
Blade.Discovery.Source(1).Compute(3).Type="Awk"
Blade.Discovery.Source(1).Compute(3).AwkScript=EmbeddedFile(1)
Blade.Discovery.Source(1).Compute(3).Separators=";"
Blade.Discovery.Source(1).Compute(3).SelectColumns="3,4,5,6,7,8,9,10"

Blade.Discovery.Source(1).Compute(4).Type="LeftConcat"
Blade.Discovery.Source(1).Compute(4).Column=5
Blade.Discovery.Source(1).Compute(4).String="Vendor: "

// The InstanceTable
// Name;Model;Serial;OperState;Vendor;EnclosurePresence;DN;name_truncated
Blade.Discovery.InstanceTable=%Blade.Discovery.Source(1)%
Blade.Discovery.Instance.DeviceID=InstanceTable.Column(7)
Blade.Discovery.Instance.DisplayID=InstanceTable.Column(1)
Blade.Discovery.Instance.BladeModel=InstanceTable.Column(2)
Blade.Discovery.Instance.SerialNumber=InstanceTable.Column(3)
Blade.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(4)
Blade.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(8)
Blade.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(5)


// Blade collect

// Collect type is MultiInstance
Blade.Collect.Type="MultiInstance"

// Source(1) = cucsEquipmentEnclosureEntry
// DN;OperState;
Blade.Collect.Source(1).Type="SnmpTable"
Blade.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.9.35.1"
Blade.Collect.Source(1).SnmpTableSelectColumns="2,42"

// Duplicate the StatusCode column
// DN;OperState;OperState;
Blade.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Blade.Collect.Source(1).Compute(1).Column=2

// Translate 1st StatusCode into PATROLSTatus
// DN;PATROLStatus;OperState;
Blade.Collect.Source(1).Compute(2).Type="Translate"
Blade.Collect.Source(1).Compute(2).Column=2
Blade.Collect.Source(1).Compute(2).TranslationTable="bladeStatusTranslationTable"

// Translate second STatusCode into a more readable string
// DN;PATROLStatus;StatusInformation;
Blade.Collect.Source(1).Compute(3).Type="Translate"
Blade.Collect.Source(1).Compute(3).Column=3
Blade.Collect.Source(1).Compute(3).TranslationTable="bladeStatusInformationTranslationTable"

// Join the Discovery to the Collect
// Name;Model;Serial;OperState;Vendor;EnclosurePresence;DN;name_truncated;DN;PATROLStatus;StatusInformation;
Blade.Collect.Source(2).Type="TableJoint"
Blade.Collect.Source(2).LeftTable=%Blade.Discovery.Source(1)%
Blade.Collect.Source(2).RightTable=%Blade.Collect.Source(1)%
Blade.Collect.Source(2).LeftKeyColumn=7
Blade.Collect.Source(2).RightKeyColumn=1
Blade.Collect.Source(2).DefaultRightLine=";;;;;;"


// ValueTable = Source(1)
Blade.Collect.ValueTable=%Blade.Collect.Source(2)%
Blade.Collect.DeviceID=ValueTable.Column(7)
Blade.Collect.Status=ValueTable.Column(10)
Blade.Collect.StatusInformation=ValueTable.Column(11)

// The bladeStatusTranslationTable
bladeStatusTranslationTable(0)="UNKNOWN"
bladeStatusTranslationTable(1)="WARN"
bladeStatusTranslationTable(10)="OK"
bladeStatusTranslationTable(11)="OK"
bladeStatusTranslationTable(12)="OK"
bladeStatusTranslationTable(13)="OK"
bladeStatusTranslationTable(14)="OK"
bladeStatusTranslationTable(15)="OK"
bladeStatusTranslationTable(20)="OK"
bladeStatusTranslationTable(21)="OK"
bladeStatusTranslationTable(29)="WARN"
bladeStatusTranslationTable(30)="WARN"
bladeStatusTranslationTable(31)="WARN"
bladeStatusTranslationTable(32)="WARN"
bladeStatusTranslationTable(33)="ALARM"
bladeStatusTranslationTable(34)="ALARM"
bladeStatusTranslationTable(35)="ALARM"
bladeStatusTranslationTable(36)="OK"
bladeStatusTranslationTable(40)="OK"
bladeStatusTranslationTable(41)="OK"
bladeStatusTranslationTable(50)="ALARM"
bladeStatusTranslationTable(60)="WARN"
bladeStatusTranslationTable(61)="WARN"
bladeStatusTranslationTable(62)="WARN"
bladeStatusTranslationTable(63)="ALARM"
bladeStatusTranslationTable(101)="OK"
bladeStatusTranslationTable(201)="OK"
bladeStatusTranslationTable(202)="OK"
bladeStatusTranslationTable(203)="OK"
bladeStatusTranslationTable(204)="ALARM"
bladeStatusTranslationTable(210)="OK"
bladeStatusTranslationTable(211)="WARN"
bladeStatusTranslationTable(212)="WARN"
bladeStatusTranslationTable(Default)="Unknown Status"

bladeStatusInformationTranslationTable(0)="Indeterminate"
bladeStatusInformationTranslationTable(1)="Unassociated"
bladeStatusInformationTranslationTable(10)="OK"
bladeStatusInformationTranslationTable(11)="Discovery"
bladeStatusInformationTranslationTable(12)="Config"
bladeStatusInformationTranslationTable(13)="Unconfig"
bladeStatusInformationTranslationTable(14)="PowerOff"
bladeStatusInformationTranslationTable(15)="Restart"
bladeStatusInformationTranslationTable(20)="Maintenance"
bladeStatusInformationTranslationTable(21)="Test"
bladeStatusInformationTranslationTable(29)="Compute Mismatch"
bladeStatusInformationTranslationTable(30)="Compute Failed"
bladeStatusInformationTranslationTable(31)="Degraded"
bladeStatusInformationTranslationTable(32)="Discovery Failed"
bladeStatusInformationTranslationTable(33)="Config Failure"
bladeStatusInformationTranslationTable(34)="Unconfig Failed"
bladeStatusInformationTranslationTable(35)="Test Failed"
//Please see MSHW-3654 and HC-971 : According to cisco, the status 36 is mapped to OK
bladeStatusInformationTranslationTable(36)="Maintenance Failed"
bladeStatusInformationTranslationTable(40)="Removed"
bladeStatusInformationTranslationTable(41)="Disabled"
bladeStatusInformationTranslationTable(50)="Inaccessible"
bladeStatusInformationTranslationTable(60)="Thermal Problem"
bladeStatusInformationTranslationTable(61)="Power Problem"
bladeStatusInformationTranslationTable(62)="Voltage Problem"
bladeStatusInformationTranslationTable(63)="Inoperable"
bladeStatusInformationTranslationTable(101)="Decommissioning"
bladeStatusInformationTranslationTable(201)="BIOS Restore"
bladeStatusInformationTranslationTable(202)="CMOS Reset"
bladeStatusInformationTranslationTable(203)="Diagnostics"
bladeStatusInformationTranslationTable(204)="Diagnostics Failed"
bladeStatusInformationTranslationTable(210)="Pending Reboot"
bladeStatusInformationTranslationTable(211)="Pending Reassociation"
bladeStatusInformationTranslationTable(212)="SVNIC Not Present"
bladeStatusInformationTranslationTable(Default)="Unknown Status"

//##################################### FAN #####################################//
//
// FANS
//

//
// Fan discovery

// Source(1) = cucsEquipmentFanEntry
// FanPresence;DN;
Fan.Discovery.Source(1).Type="SnmpTable"
Fan.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.15.12.1"
Fan.Discovery.Source(1).SnmpTableSelectColumns="13,2"

//Remove lines where cucsEquipmentFanPresence = 1(Empty) and 11 (Missing)
Fan.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
Fan.Discovery.Source(1).Compute(1).Column=1
Fan.Discovery.Source(1).Compute(1).ValueList="1,11"

// "Fan";FanPresence;DN;
Fan.Discovery.Source(1).Compute(2).Type="LeftConcat"
Fan.Discovery.Source(1).Compute(2).Column=1
Fan.Discovery.Source(1).Compute(2).String="Fan;"

// "Fan";FanPresence;DN;DN
Fan.Discovery.Source(1).Compute(3).Type="DuplicateColumn"
Fan.Discovery.Source(1).Compute(3).Column=3


// FanPresence;DN;DN_truncated
Fan.Discovery.Source(1).Compute(4).Type="Awk"
Fan.Discovery.Source(1).Compute(4).AwkScript=EmbeddedFile(1)
Fan.Discovery.Source(1).Compute(4).Separators=";"
Fan.Discovery.Source(1).Compute(4).SelectColumns="3,4,6"


// InstanceTable = Source(1)
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(2)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(3)

//
// Fan collect

// Collect type is MultiInstance
Fan.Collect.Type="MultiInstance"

// Source(1) = cucsEquipmentFanEntry
// DN;OperState;
Fan.Collect.Source(1).Type="SnmpTable"
Fan.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.15.12.1"
Fan.Collect.Source(1).SnmpTableSelectColumns="2,9"

// Duplicate the StatusCode column
// DN;OperState;OperState;
Fan.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Fan.Collect.Source(1).Compute(1).Column=2

// Translate 1st StatusCode into PATROLStatus
// DN;PATROLStatus;OperState;
Fan.Collect.Source(1).Compute(2).Type="Translate"
Fan.Collect.Source(1).Compute(2).Column=2
Fan.Collect.Source(1).Compute(2).TranslationTable="statusTranslationTable"

// The statusTranslationTable
statusTranslationTable(0)="UNKNOWN"
statusTranslationTable(1)="OK"
statusTranslationTable(2)="ALARM"
statusTranslationTable(3)="WARN"
statusTranslationTable(4)="ALARM"
statusTranslationTable(5)="WARN"
statusTranslationTable(6)="ALARM"
statusTranslationTable(7)="WARN"
statusTranslationTable(8)="WARN"
statusTranslationTable(9)="WARN"
statusTranslationTable(10)="WARN"
statusTranslationTable(11)="WARN"
statusTranslationTable(12)="ALARM"
statusTranslationTable(13)="WARN"
statusTranslationTable(14)="WARN"
statusTranslationTable(51)="WARN"
statusTranslationTable(52)="WARN"
statusTranslationTable(81)="WARN"
statusTranslationTable(82)="WARN"
statusTranslationTable(83)="WARN"
statusTranslationTable(84)="WARN"
statusTranslationTable(100)="WARN"
statusTranslationTable(101)="WARN"
statusTranslationTable(102)="ALARM"
statusTranslationTable(103)="OK"
statusTranslationTable(104)="ALARM"
statusTranslationTable(105)="WARN"
statusTranslationTable(106)="WARN"
statusTranslationTable(107)="WARN"
statusTranslationTable(108)="WARN"
statusTranslationTable(Default)="Unknown Status"

// Translate second STatusCode into a more readable string
// DN;PATROLStatus;StatusInformation;
Fan.Collect.Source(1).Compute(3).Type="Translate"
Fan.Collect.Source(1).Compute(3).Column=3
Fan.Collect.Source(1).Compute(3).TranslationTable="statusInformationTranslationTable"

// The statusInformationTranslationTable
statusInformationTranslationTable(0)="Unknown"
statusInformationTranslationTable(1)="Operable"
statusInformationTranslationTable(2)="Inoperable"
statusInformationTranslationTable(3)="Degraded"
statusInformationTranslationTable(4)="Powered Off"
statusInformationTranslationTable(5)="Power Problem"
statusInformationTranslationTable(6)="Removed"
statusInformationTranslationTable(7)="Voltage Problem"
statusInformationTranslationTable(8)="Thermal Problem"
statusInformationTranslationTable(9)="Performance Problem"
statusInformationTranslationTable(10)="Accessibility Problem"
statusInformationTranslationTable(11)="Identity Unestablishable"
statusInformationTranslationTable(12)="BIOS Post Timeout"
statusInformationTranslationTable(13)="Disabled"
statusInformationTranslationTable(14)="Malformed FRU"
statusInformationTranslationTable(51)="Fabric Conn Problem"
statusInformationTranslationTable(52)="Fabric Unsupported Conn"
statusInformationTranslationTable(81)="Config"
statusInformationTranslationTable(82)="Equipment Problem"
statusInformationTranslationTable(83)="Decommissioning"
statusInformationTranslationTable(84)="Chassis Limit Exceeded"
statusInformationTranslationTable(100)="Not Supported"
statusInformationTranslationTable(101)="Discovery"
statusInformationTranslationTable(102)="Discovery Failed"
statusInformationTranslationTable(103)="Identify"
statusInformationTranslationTable(104)="Post Failure"
statusInformationTranslationTable(105)="Upgrade Problem"
statusInformationTranslationTable(106)="Peer Comm Problem"
statusInformationTranslationTable(107)="Auto Upgrade"
statusInformationTranslationTable(108)="Link Activate Blocked"
statusInformationTranslationTable(Default)="Unknown Status"

// ValueTable = Source(1)
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(2)
Fan.Collect.StatusInformation=ValueTable.Column(3)


//##################################### POWER SUPPLY #####################################//
//
// PowerSupply
//

//
// PowerSupply discovery

// Source(1) = cucsEquipmentPowerSupplyEntry
// DN;Name;Model;Serial;Revision;PsuPresence;
PowerSupply.Discovery.Source(1).Type="SnmpTable"
PowerSupply.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.15.56.1"
PowerSupply.Discovery.Source(1).SnmpTableSelectColumns="2,3,6,13,12,11"

//Remove lines where cucsEquipmentPsuPresence = 1(Empty) and 11 (Missing)
PowerSupply.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
PowerSupply.Discovery.Source(1).Compute(1).Column=5
PowerSupply.Discovery.Source(1).Compute(1).ValueList="1,11"

// Add Identifiers
// DN;Name;Model;Serial;Revision;
PowerSupply.Discovery.Source(1).Compute(2).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(2).Column=3
PowerSupply.Discovery.Source(1).Compute(2).String="Model Number: "

PowerSupply.Discovery.Source(1).Compute(3).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(3).Column=4
PowerSupply.Discovery.Source(1).Compute(3).String="Serial Number: "

PowerSupply.Discovery.Source(1).Compute(4).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(4).Column=5
PowerSupply.Discovery.Source(1).Compute(4).String="Revision: "


// InstanceTable = Source(1)
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(2)
PowerSupply.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(3)
PowerSupply.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(4)
PowerSupply.Discovery.Instance.AdditionalInformation3=InstanceTable.Column(5)


//
// PowerSupply collect

// Collect type is MultiInstance
PowerSupply.Collect.Type="MultiInstance"

// Source(1) = cucsEquipmentPowerSupplyEntry
// DN;OperState;
PowerSupply.Collect.Source(1).Type="SnmpTable"
PowerSupply.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.15.56.1"
PowerSupply.Collect.Source(1).SnmpTableSelectColumns="2,7"

// Duplicate the StatusCode column
// DN;OperState;OperState;
PowerSupply.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(1).Column=2

// Translate 1st StatusCode into PATROLStatus
// DN;PATROLStatus;OperState;
PowerSupply.Collect.Source(1).Compute(2).Type="Translate"
PowerSupply.Collect.Source(1).Compute(2).Column=2
PowerSupply.Collect.Source(1).Compute(2).TranslationTable="statusTranslationTable"

// Translate second STatusCode into a more readable string
// DN;PATROLStatus;StatusInformation;
PowerSupply.Collect.Source(1).Compute(3).Type="Translate"
PowerSupply.Collect.Source(1).Compute(3).Column=3
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="statusInformationTranslationTable"

// ValueTable = Source(1)
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)

//##################################### CPU #####################################//
//
// CPU
//

//
// CPU discovery

// Source(1) = cucsProcessorUnitTable
// Name;Model;Speed;Vendor;CPUPresence;DN;
CPU.Discovery.Source(1).Type="SnmpTable"
CPU.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.41.9.1"
CPU.Discovery.Source(1).SnmpTableSelectColumns="3,8,17,21,13,2"

//Remove lines where cucsProcessorUnitPresence = 1(Empty) and 11 (Missing)
CPU.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
CPU.Discovery.Source(1).Compute(1).Column=5
CPU.Discovery.Source(1).Compute(1).ValueList="1,11"

// "CPU";Name;Model;Speed;Vendor;CPUPresence;DN;
CPU.Discovery.Source(1).Compute(2).Type="LeftConcat"
CPU.Discovery.Source(1).Compute(2).Column=1
CPU.Discovery.Source(1).Compute(2).String="CPU;"

// Name;Model;Speed;Vendor;CPUPresence;DN;DN_truncated
CPU.Discovery.Source(1).Compute(3).Type="AWK"
CPU.Discovery.Source(1).Compute(3).AwkScript=EmbeddedFile(1)
CPU.Discovery.Source(1).Compute(3).Separators=";"
CPU.Discovery.Source(1).Compute(3).SelectColumns="3,4,5,6,7,8,9"

// InstanceTable = Source(1)
CPU.Discovery.InstanceTable=%CPU.Discovery.Source(1)%
CPU.Discovery.Instance.DeviceID=InstanceTable.Column(6)
CPU.Discovery.Instance.DisplayID=InstanceTable.Column(1)
CPU.Discovery.Instance.Vendor=InstanceTable.Column(4)
CPU.Discovery.Instance.Model=InstanceTable.Column(2)
CPU.Discovery.Instance.MaximumSpeed=InstanceTable.Column(3)
CPU.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(7)
CPU.Discovery.Instance.AttachedToDeviceType="Blade"


//
// CPU collect

// Collect type is MultiInstance
CPU.Collect.Type="MultiInstance"

// Source(1) = cucsProcessorUnitTable
// DN;OperState;
CPU.Collect.Source(1).Type="SnmpTable"
CPU.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.41.9.1"
CPU.Collect.Source(1).SnmpTableSelectColumns="2,9"

// Duplicate the StatusCode column
// DN;OperState;OperState;
CPU.Collect.Source(1).Compute(1).Type="DuplicateColumn"
CPU.Collect.Source(1).Compute(1).Column=2

// Translate 1st StatusCode into PATROLSTatus
// DN;PATROLStatus;OperState;
CPU.Collect.Source(1).Compute(2).Type="Translate"
CPU.Collect.Source(1).Compute(2).Column=2
CPU.Collect.Source(1).Compute(2).TranslationTable="statusTranslationTable"

// Translate second STatusCode into a more readable string
// DN;PATROLStatus;StatusInformation;
CPU.Collect.Source(1).Compute(3).Type="Translate"
CPU.Collect.Source(1).Compute(3).Column=3
CPU.Collect.Source(1).Compute(3).TranslationTable="statusInformationTranslationTable"

// ValueTable = Source(1)
CPU.Collect.ValueTable=%CPU.Collect.Source(1)%
CPU.Collect.DeviceID=ValueTable.Column(1)
CPU.Collect.Status=ValueTable.Column(2)
CPU.Collect.StatusInformation=ValueTable.Column(3)

//##################################### MEMORY #####################################//
//
// Memory
//

//
// Memory discovery

// Source(1) = cucsMemoryUnitEntry
// Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;
Memory.Discovery.Source(1).Type="SnmpTable"
Memory.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.30.11.1"
Memory.Discovery.Source(1).SnmpTableSelectColumns="3,11,17,6,19,21,12,23,24,2"


// Exclude  "Missing" memory modules
// Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;
Memory.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
Memory.Discovery.Source(1).Compute(1).Column=3
Memory.Discovery.Source(1).Compute(1).ValueList="1,11"

// "Memory";Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;
Memory.Discovery.Source(1).Compute(2).Type="LeftConcat"
Memory.Discovery.Source(1).Compute(2).Column=1
Memory.Discovery.Source(1).Compute(2).String="Memory;"

// Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;DN_truncated
Memory.Discovery.Source(1).Compute(3).Type="AWK"
Memory.Discovery.Source(1).Compute(3).AwkScript=EmbeddedFile(1)
Memory.Discovery.Source(1).Compute(3).Separators=";"
Memory.Discovery.Source(1).Compute(3).SelectColumns="3,4,5,6,7,8,9,10,11,12,13"

// Add Identifiers
// Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;DN_truncated
Memory.Discovery.Source(1).Compute(4).Type="LeftConcat"
Memory.Discovery.Source(1).Compute(4).Column=6
Memory.Discovery.Source(1).Compute(4).String="Speed: "

// Translate Type into a more readable string
// Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;DN_truncated
Memory.Discovery.Source(1).Compute(5).Type="Translate"
Memory.Discovery.Source(1).Compute(5).Column=8
Memory.Discovery.Source(1).Compute(5).TranslationTable="memoryTranslationTable"

Memory.Discovery.Source(1).Compute(6).Type="LeftConcat"
Memory.Discovery.Source(1).Compute(6).Column=2
Memory.Discovery.Source(1).Compute(6).String="Location: "

// InstanceTable = Source(1)
// Name;Location;Presence;CapacityMB;Serial;Speed;Model;Type;Vendor;DN;DN_truncated
Memory.Discovery.InstanceTable=%Memory.Discovery.Source(1)%
Memory.Discovery.Instance.DeviceID=InstanceTable.Column(10)
Memory.Discovery.Instance.DisplayID=InstanceTable.Column(1)
Memory.Discovery.Instance.Size=InstanceTable.Column(4)
Memory.Discovery.Instance.SerialNumber=InstanceTable.Column(5)
Memory.Discovery.Instance.Model=InstanceTable.Column(7)
Memory.Discovery.Instance.Type=InstanceTable.Column(8)
Memory.Discovery.Instance.Vendor=InstanceTable.Column(9)
Memory.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(2)
Memory.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(6)
Memory.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(11)
Memory.Discovery.Instance.AttachedToDeviceType="Blade"

// The memoryTranslationTable
memoryTranslationTable(0)="Undiscovered"
memoryTranslationTable(1)="Other"
memoryTranslationTable(2)="Unknown"
memoryTranslationTable(3)="DRAM"
memoryTranslationTable(4)="EDRAM"
memoryTranslationTable(5)="VRAM"
memoryTranslationTable(6)="SRAM"
memoryTranslationTable(7)="RAM"
memoryTranslationTable(8)="ROM"
memoryTranslationTable(9)="Flash"
memoryTranslationTable(10)="EEPROM"
memoryTranslationTable(11)="FEPROM"
memoryTranslationTable(12)="EPROM3"
memoryTranslationTable(13)="CDRAM"
memoryTranslationTable(14)="N3DRAM"
memoryTranslationTable(15)="SDRAM"
memoryTranslationTable(16)="SGRAM"
memoryTranslationTable(17)="RDRAM"
memoryTranslationTable(18)="DDR"
memoryTranslationTable(19)="DDR2"
memoryTranslationTable(20)="DDR2FBDIMM"
memoryTranslationTable(24)="DDR3"
memoryTranslationTable(25)="FBD2"
memoryTranslationTable(26)="DDR4"
memoryTranslationTable(Default)="Unknown Type"

//
// Memory collect

// Collect type is MultiInstance
Memory.Collect.Type="MultiInstance"

// Source(1) = cucsMemoryUnitEntry
// DN;OperState;
Memory.Collect.Source(1).Type="SnmpTable"
Memory.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.30.11.1"
Memory.Collect.Source(1).SnmpTableSelectColumns="2,13"

// Duplicate the StatusCode column
// DN;OperState;OperState;
Memory.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Memory.Collect.Source(1).Compute(1).Column=2

// Translate 1st StatusCode into PATROLSTatus
// DN;PATROLStatus;OperState;
Memory.Collect.Source(1).Compute(2).Type="Translate"
Memory.Collect.Source(1).Compute(2).Column=2
Memory.Collect.Source(1).Compute(2).TranslationTable="statusTranslationTable"

// Translate second STatusCode into a more readable string
// DN;PATROLStatus;StatusInformation;
Memory.Collect.Source(1).Compute(3).Type="Translate"
Memory.Collect.Source(1).Compute(3).Column=3
Memory.Collect.Source(1).Compute(3).TranslationTable="statusInformationTranslationTable"

// ValueTable = Source(1)
Memory.Collect.ValueTable=%Memory.Collect.Source(1)%
Memory.Collect.DeviceID=ValueTable.Column(1)
Memory.Collect.Status=ValueTable.Column(2)
Memory.Collect.StatusInformation=ValueTable.Column(3)

//##################################### BATTERY #####################################//
//
// Battery
//

//
// Battery discovery

// Source(1) = cucsStorageRaidBatteryEntry
// Name;Model;Vendor;RaidBatteryPresence;DN;
Battery.Discovery.Source(1).Type="SnmpTable"
Battery.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.45.11.1"
Battery.Discovery.Source(1).SnmpTableSelectColumns="3,7,14,10,2"

//Remove lines where cucsStorageRaidBatteryPresence = 1(Empty) and 11 (Missing)
Battery.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
Battery.Discovery.Source(1).Compute(1).Column=4
Battery.Discovery.Source(1).Compute(1).ValueList="1,11"

// "Battery";Name;Model;Vendor;RaidBatteryPresence;DN;
Battery.Discovery.Source(1).Compute(2).Type="LeftConcat"
Battery.Discovery.Source(1).Compute(2).Column=1
Battery.Discovery.Source(1).Compute(2).String="Battery;"

// "Battery";Name;Model;Vendor;RaidBatteryPresence;DN;DN_truncated
Battery.Discovery.Source(1).Compute(3).Type="AWK"
Battery.Discovery.Source(1).Compute(3).AwkScript=EmbeddedFile(1)
Battery.Discovery.Source(1).Compute(3).Separators=";"
Battery.Discovery.Source(1).Compute(3).SelectColumns="3,4,5,6,7,8"

// InstanceTable = Source(1)
// DN;Model;Vendor;
// Name;Model;Vendor;RaidBatteryPresence;DN;DN_truncated
Battery.Discovery.InstanceTable=%Battery.Discovery.Source(1)%
Battery.Discovery.Instance.DeviceID=InstanceTable.Column(5)
Battery.Discovery.Instance.DisplayID=InstanceTable.Column(1)
Battery.Discovery.Instance.Vendor=InstanceTable.Column(3)
Battery.Discovery.Instance.Model=InstanceTable.Column(2)
Battery.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(6)
Battery.Discovery.Instance.AttachedToDeviceType="Blade"

//
// Battery collect

// Collect type is MultiInstance
Battery.Collect.Type="MultiInstance"

// Source(1) = cucsProcessorUnitTable
// DN;OperState;
Battery.Collect.Source(1).Type="SnmpTable"
Battery.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.45.11.1"
Battery.Collect.Source(1).SnmpTableSelectColumns="2,9"

// Duplicate the StatusCode column
// DN;OperState;OperState;
Battery.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Battery.Collect.Source(1).Compute(1).Column=2

// Translate 1st StatusCode into PATROLSTatus
// DN;PATROLStatus;OperState;
Battery.Collect.Source(1).Compute(2).Type="Translate"
Battery.Collect.Source(1).Compute(2).Column=2
Battery.Collect.Source(1).Compute(2).TranslationTable="statusTranslationTable"

// Translate second STatusCode into a more readable string
// DN;PATROLStatus;StatusInformation;
Battery.Collect.Source(1).Compute(3).Type="Translate"
Battery.Collect.Source(1).Compute(3).Column=3
Battery.Collect.Source(1).Compute(3).TranslationTable="statusInformationTranslationTable"

// ValueTable = Source(1)
Battery.Collect.ValueTable=%Battery.Collect.Source(1)%
Battery.Collect.DeviceID=ValueTable.Column(1)
Battery.Collect.Status=ValueTable.Column(2)
Battery.Collect.StatusInformation=ValueTable.Column(3)


//##################################### DISK CONTROLLER #####################################//
//
// DiskController
//

//
// DiskController discovery

// Source(1) = cucsProcessorUnitTable
// Name;Model;SerialNumber;Vendor;Revision;DiskControllerPresence;DN;
DiskController.Discovery.Source(1).Type="SnmpTable"
DiskController.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.45.1.1"
DiskController.Discovery.Source(1).SnmpTableSelectColumns="3,5,14,18,13,12,2"

//Remove lines where cucsStorageControllerPresence = 1(Empty) and 11 (Missing)
DiskController.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
DiskController.Discovery.Source(1).Compute(1).Column=6
DiskController.Discovery.Source(1).Compute(1).ValueList="1,11"

// "DiskController";Name;Model;SerialNumber;Vendor;Revision;DiskControllerPresence;DN;
DiskController.Discovery.Source(1).Compute(2).Type="LeftConcat"
DiskController.Discovery.Source(1).Compute(2).Column=1
DiskController.Discovery.Source(1).Compute(2).String="DiskController;"

// Name;Model;SerialNumber;Vendor;Revision;DiskControllerPresence;DN;DN_truncated
DiskController.Discovery.Source(1).Compute(3).Type="AWK"
DiskController.Discovery.Source(1).Compute(3).AwkScript=EmbeddedFile(1)
DiskController.Discovery.Source(1).Compute(3).Separators=";"
DiskController.Discovery.Source(1).Compute(3).SelectColumns="3,4,5,6,7,8,9,10"

// InstanceTable = Source(1)
// Name;Model;SerialNumber;Vendor;Revision;DiskControllerPresence;DN;DN_truncated
DiskController.Discovery.InstanceTable=%DiskController.Discovery.Source(1)%
DiskController.Discovery.Instance.DeviceID=InstanceTable.Column(7)
DiskController.Discovery.Instance.DisplayID=InstanceTable.Column(1)
DiskController.Discovery.Instance.Vendor=InstanceTable.Column(4)
DiskController.Discovery.Instance.Model=InstanceTable.Column(2)
DiskController.Discovery.Instance.SerialNumber=InstanceTable.Column(3)
DiskController.Discovery.Instance.FirmwareVersion=InstanceTable.Column(5)
DiskController.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(8)
DiskController.Discovery.Instance.AttachedToDeviceType="Blade"

//
// DiskController collect

// Collect type is MultiInstance
DiskController.Collect.Type="MultiInstance"

// Source(1) = cucsProcessorUnitTable
// DN;OperState;
DiskController.Collect.Source(1).Type="SnmpTable"
DiskController.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.45.1.1"
DiskController.Collect.Source(1).SnmpTableSelectColumns="2,6"

// Duplicate the StatusCode column
// DN;OperState;OperState;
DiskController.Collect.Source(1).Compute(1).Type="DuplicateColumn"
DiskController.Collect.Source(1).Compute(1).Column=2

// Translate 1st StatusCode into PATROLSTatus
// DN;PATROLStatus;OperState;
DiskController.Collect.Source(1).Compute(2).Type="Translate"
DiskController.Collect.Source(1).Compute(2).Column=2
DiskController.Collect.Source(1).Compute(2).TranslationTable="statusTranslationTable"

// Translate second STatusCode into a more readable string
// DN;PATROLStatus;StatusInformation;
DiskController.Collect.Source(1).Compute(3).Type="Translate"
DiskController.Collect.Source(1).Compute(3).Column=3
DiskController.Collect.Source(1).Compute(3).TranslationTable="statusInformationTranslationTable"

// ValueTable = Source(1)
DiskController.Collect.ValueTable=%DiskController.Collect.Source(1)%
DiskController.Collect.DeviceID=ValueTable.Column(1)
DiskController.Collect.ControllerStatus=ValueTable.Column(2)
DiskController.Collect.StatusInformation=ValueTable.Column(3)

//##################################### PHYSICAL DISK #####################################//
//
// PhysicalDisk
//

//
// PhysicalDisk discovery

// Source(1) = cucsEquipmentPhysicalDiskEntry
// Name;SerialNumber;Size;Vendor;DiskPresence;Model;DN;
PhysicalDisk.Discovery.Source(1).Type="SnmpTable"
PhysicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.45.4.1"
PhysicalDisk.Discovery.Source(1).SnmpTableSelectColumns="3,12,13,14,10,7,2"

//Remove lines where cucsStorageLocalDiskPresence = 1(Empty) and 11 (Missing)
PhysicalDisk.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
PhysicalDisk.Discovery.Source(1).Compute(1).Column=5
PhysicalDisk.Discovery.Source(1).Compute(1).ValueList="1,11"

// Convert the size into bytes
// Name;SerialNumber;Size;Vendor;DiskPresence;Model;DN;
PhysicalDisk.Discovery.Source(1).Compute(2).Type="Multiply"
PhysicalDisk.Discovery.Source(1).Compute(2).Column=3
PhysicalDisk.Discovery.Source(1).Compute(2).MultiplyBy=1048576

// "PhysicalDisk";Name;SerialNumber;Size;Vendor;DiskPresence;Model;DN;
PhysicalDisk.Discovery.Source(1).Compute(3).Type="LeftConcat"
PhysicalDisk.Discovery.Source(1).Compute(3).Column=1
PhysicalDisk.Discovery.Source(1).Compute(3).String="PhysicalDisk;"

// Name;SerialNumber;Size;Vendor;DiskPresence;Model;DN;DN_truncated
PhysicalDisk.Discovery.Source(1).Compute(4).Type="AWK"
PhysicalDisk.Discovery.Source(1).Compute(4).AwkScript=EmbeddedFile(1)
PhysicalDisk.Discovery.Source(1).Compute(4).Separators=";"
PhysicalDisk.Discovery.Source(1).Compute(4).SelectColumns="3,4,5,6,7,8,9,10"

// InstanceTable = Source(1)
// Name;SerialNumber;Size;Vendor;DiskPresence;Model;DN;DN_truncated
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(1)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(7)
PhysicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(1)
PhysicalDisk.Discovery.Instance.Vendor=InstanceTable.Column(4)
PhysicalDisk.Discovery.Instance.Model=InstanceTable.Column(6)
PhysicalDisk.Discovery.Instance.SerialNumber=InstanceTable.Column(2)
PhysicalDisk.Discovery.Instance.Size=InstanceTable.Column(3)
PhysicalDisk.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(8)
PhysicalDisk.Discovery.Instance.AttachedToDeviceType="DiskController"

//
// PhysicalDisk collect

// Collect type is MultiInstance
PhysicalDisk.Collect.Type="MultiInstance"

// Source(1) = cucsEquipmentPhysicalDiskEntry
// DN;OperState;
PhysicalDisk.Collect.Source(1).Type="SnmpTable"
PhysicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.45.4.1"
PhysicalDisk.Collect.Source(1).SnmpTableSelectColumns="2,9"

// Duplicate the StatusCode column
// DN;OperState;OperState;
PhysicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PhysicalDisk.Collect.Source(1).Compute(1).Column=2

// Translate 1st StatusCode into PATROLStatus
// DN;PATROLStatus;OperState;
PhysicalDisk.Collect.Source(1).Compute(2).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(2).Column=2
PhysicalDisk.Collect.Source(1).Compute(2).TranslationTable="statusTranslationTable"

// Translate second STatusCode into a more readable string
// DN;PATROLStatus;StatusInformation;
PhysicalDisk.Collect.Source(1).Compute(3).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(3).Column=3
PhysicalDisk.Collect.Source(1).Compute(3).TranslationTable="statusInformationTranslationTable"

// ValueTable = Source(1)
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(1)
PhysicalDisk.Collect.Status=ValueTable.Column(2)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(3)

//##################################### OTHER DEVICE #####################################//
//
// OtherDevice
//

//
// OtherDevice discovery

// Source(1) = cucsEquipmentOtherDeviceEntry
// Name;FlexFlashControllerPresence;DN;
OtherDevice.Discovery.Source(1).Type="SnmpTable"
OtherDevice.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.45.35.1"
OtherDevice.Discovery.Source(1).SnmpTableSelectColumns="3,17,2"

//Remove lines where cucsStorageControllerPresence = 1(Empty) and 11 (Missing)
OtherDevice.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
OtherDevice.Discovery.Source(1).Compute(1).Column=2
OtherDevice.Discovery.Source(1).Compute(1).ValueList="1,11"

// InstanceTable = Source(1)
// Name;FlexFlashControllerPresence;DN;
OtherDevice.Discovery.InstanceTable=%OtherDevice.Discovery.Source(1)%
OtherDevice.Discovery.Instance.DeviceID=InstanceTable.Column(3)
OtherDevice.Discovery.Instance.DisplayID=InstanceTable.Column(1)
OtherDevice.Discovery.Instance.DeviceType="FlexFlash"

//
// OtherDevice collect

// Collect type is MultiInstance
OtherDevice.Collect.Type="MultiInstance"

// Source(1) = cucsEquipmentOtherDeviceEntry
// DN;OperState;
OtherDevice.Collect.Source(1).Type="SnmpTable"
OtherDevice.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.9.9.719.1.45.35.1"
OtherDevice.Collect.Source(1).SnmpTableSelectColumns="2,10"

// Duplicate the StatusCode column
// DN;OperState;OperState;
OtherDevice.Collect.Source(1).Compute(1).Type="DuplicateColumn"
OtherDevice.Collect.Source(1).Compute(1).Column=2

// Translate 1st StatusCode into PATROLSTatus
// DN;PATROLStatus;OperState;
OtherDevice.Collect.Source(1).Compute(2).Type="Translate"
OtherDevice.Collect.Source(1).Compute(2).Column=2
OtherDevice.Collect.Source(1).Compute(2).TranslationTable="statusTranslationTable"

// Translate second STatusCode into a more readable string
// DN;PATROLStatus;StatusInformation;
OtherDevice.Collect.Source(1).Compute(3).Type="Translate"
OtherDevice.Collect.Source(1).Compute(3).Column=3
OtherDevice.Collect.Source(1).Compute(3).TranslationTable="statusInformationTranslationTable"

// ValueTable = Source(1)
OtherDevice.Collect.ValueTable=%OtherDevice.Collect.Source(1)%
OtherDevice.Collect.DeviceID=ValueTable.Column(1)
OtherDevice.Collect.Status=ValueTable.Column(2)
OtherDevice.Collect.StatusInformation=ValueTable.Column(3)


/////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(1) = awk script
///
/////////////////////////////////////////////////////////
EmbeddedFile(1):
BEGIN {FS=";"}
{
	truncateName=$(NF-1)

	if ($1=="Enclosure" || $1=="Blade" || $1=="PhysicalDisk")
		gsub("/[^/]+$","",truncateName);

	if ($1=="Fan")
		gsub("^[^/]+/[^/]+/","",truncateName);

	if ($1=="CPU" || $1=="DiskController")
		gsub("/[^/]+/[^/]+$","",truncateName);

	if ($1=="Memory" || $1=="Battery")
		gsub("/[^/]+/[^/]+/[^/]+$","",truncateName);

	print "MSHW;"$0 truncateName
}
EmbeddedFile(1).End
/////////////////////////////////////////////////////////////////////
