//
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//                MS_HW_WBEMGenHBA.hdf
//
//      Supports: any NT/2000/2K3 machine with the WINMGMT (WBEM) service running
//
//


// HEADER

hdf.DisplayName="WMI - HBA"
hdf.TypicalPlatform="Any system"
hdf.ReliesOn="WMI"
hdf.Version="0.9"
hdf.Comments="This connector provides the monitoring of HBA cards on all Windows-based systems through the WMI layer (root/WMI namespace)."
hdf.RemoteSupport="true"
hdf.AppliesToOS="NT"
hdf.Supersedes="MS_HW_CpqHBA.hdf,MS_HW_SMISHBA.hdf"

//
// DETECTION
//

// OS must be Windows NT-derivative
Detection.Criteria(1).Type="OS"
Detection.Criteria(1).KeepOnly="NT"

// WMI must be available
Detection.Criteria(2).Type="Service"
Detection.Criteria(2).ServiceName="WINMGMT"

// The root\wmi namespace must have the MSFC_FCAdapterHBAAttributes
Detection.Criteria(3).Type="WMI"
Detection.Criteria(3).WbemQuery="SELECT InstanceName FROM MSFC_FCAdapterHBAAttributes"
Detection.Criteria(3).WbemNameSpace="root\wmi"


//
// Network card
//

//
// Discovery

// Source(1) = MSFC_FibrePortHBAAttributes class  (FC Ports)
// Active;AdapterID;UniquePortId;PortSpeed;PortWWN-Decimal;PortWWN-Decimal;PortType;
NetworkCard.Discovery.Source(1).Type="WMI"
NetworkCard.Discovery.Source(1).WbemNameSpace="root\wmi"
NetworkCard.Discovery.Source(1).WbemQuery="SELECT Active,InstanceName,Attributes.PortWWN,Attributes.PortSpeed,Attributes.PortWWN,Attributes.PortWWN,Attributes.PortType FROM MSFC_FibrePortHBAAttributes"

// Keep Only Active Ports
// Active;AdapterID;UniquePortId;PortSpeed;PortWWN-Decimal;PortWWN-Decimal;PortType;
NetworkCard.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
NetworkCard.Discovery.Source(1).Compute(1).Column=1
NetworkCard.Discovery.Source(1).Compute(1).ValueList="True"

// Translate PortType into a more readable string
// Active;AdapterID;UniquePortId;PortSpeed;PortWWN-Decimal;PortWWN-Decimal;PortType;
NetworkCard.Discovery.Source(1).Compute(2).Type="Translate"
NetworkCard.Discovery.Source(1).Compute(2).Column=7
NetworkCard.Discovery.Source(1).Compute(2).TranslationTable="PortTypeTranslationTable"

// The PortTypeTranslationTable
PortTypeTranslationTable(5)="HBA FC Port N"
PortTypeTranslationTable(6)="HBA FC Port NL"
PortTypeTranslationTable(7)="HBA FC Port F/NL"
PortTypeTranslationTable(8)="HBA FC Port F"
PortTypeTranslationTable(9)="HBA FC Port E"
PortTypeTranslationTable(10)="HBA FC Port G"
PortTypeTranslationTable(Default)="HBA FC Port"

// and Remove the array pipes from the port WWN
// Active;AdapterID;UniquePortId;PortSpeed;PortWWN-Decimal;PortWWN-Decimal;PortType;
NetworkCard.Discovery.Source(1).Compute(3).Type="Replace"
NetworkCard.Discovery.Source(1).Compute(3).Column=5
NetworkCard.Discovery.Source(1).Compute(3).Replace="|"
NetworkCard.Discovery.Source(1).Compute(3).ReplaceBy="."


// Convert Speed from Gbps to Mbps (multiply by 1000)
// Active;AdapterID;UniquePortId;PortSpeed;PortWWN-Decimal;PortWWN-Decimal;PortType;
NetworkCard.Discovery.Source(1).Compute(4).Type="Multiply"
NetworkCard.Discovery.Source(1).Compute(4).Column=4
NetworkCard.Discovery.Source(1).Compute(4).MultiplyBy=1000

// Convert PortWWN to Hex
//	   NOTE - This script is column specific (See Column Variable), so watchout if you change the queries or duplicate columns.
// Active;AdapterID;UniquePortId;PortSpeed;PortWWN-Decimal;PortWWN-Hex;PortType;
NetworkCard.Discovery.Source(1).Compute(5).Type="Awk"
NetworkCard.Discovery.Source(1).Compute(5).AwkScript=EmbeddedFile(1)
NetworkCard.Discovery.Source(1).Compute(5).KeepOnlyRegExp="^MSHW;"
NetworkCard.Discovery.Source(1).Compute(5).Separators=";"
NetworkCard.Discovery.Source(1).Compute(5).SelectColumns="2,3,4,5,6,7,8"

// Source(2) = MSFC_FCAdapterHBAAttributes class  (FC Adapters)
// AdapterID;Manufacturer;Model;Serial
NetworkCard.Discovery.Source(2).Type="WMI"
NetworkCard.Discovery.Source(2).WbemNameSpace="root\wmi"
NetworkCard.Discovery.Source(2).WbemQuery="SELECT InstanceName,Manufacturer,ModelDescription,SerialNumber FROM MSFC_FCAdapterHBAAttributes"

// Keep only the first word of the Manufacturer name (to avoid stuff like "Corporations, Inc. and blah blah blah)
// AdapterID;Manufacturer;Model;Serial
NetworkCard.Discovery.Source(2).Compute(1).Type="Extract"
NetworkCard.Discovery.Source(2).Compute(1).Column=2
NetworkCard.Discovery.Source(2).Compute(1).Subcolumn=1
NetworkCard.Discovery.Source(2).Compute(1).Subseparators=" "

// Source(3) = Table joint of Source(1) and Source(2)
// Active;AdapterID;UniquePortId;PortSpeed;PortWWN-Decimal;PortWWN-Hex;PortType;AdapterID;Manufacturer;Model;Serial
NetworkCard.Discovery.Source(3).Type="TableJoint"
NetworkCard.Discovery.Source(3).LeftTable=%NetworkCard.Discovery.Source(1)%
NetworkCard.Discovery.Source(3).RightTable=%NetworkCard.Discovery.Source(2)%
NetworkCard.Discovery.Source(3).LeftKeyColumn=2
NetworkCard.Discovery.Source(3).RightKeyColumn=1

// Source (4) = MSFC_FibrePortHBAStatistics
// InstanceName;TxFrames;RxFrames;ErrorCount
NetworkCard.Discovery.Source(4).Type="WMI"
NetworkCard.Discovery.Source(4).WbemNameSpace="root\wmi"
NetworkCard.Discovery.Source(4).WbemQuery="SELECT InstanceName,statistics.TxFrames,statistics.RxFrames,statistics.ErrorFrames FROM MSFC_FibrePortHBAStatistics"

// Remove all values of -1 from Tx,Rx and ErrorCount to deactivate these parameters when they are not collected
// InstanceName;TxFrames;RxFrames;ErrorCount
NetworkCard.Discovery.Source(4).Compute(1).Type="Replace"
NetworkCard.Discovery.Source(4).Compute(1).Column=2
NetworkCard.Discovery.Source(4).Compute(1).Replace="-1"
NetworkCard.Discovery.Source(4).Compute(1).ReplaceBy=""
NetworkCard.Discovery.Source(4).Compute(2).Type="Replace"
NetworkCard.Discovery.Source(4).Compute(2).Column=3
NetworkCard.Discovery.Source(4).Compute(2).Replace="-1"
NetworkCard.Discovery.Source(4).Compute(2).ReplaceBy=""
NetworkCard.Discovery.Source(4).Compute(3).Type="Replace"
NetworkCard.Discovery.Source(4).Compute(3).Column=4
NetworkCard.Discovery.Source(4).Compute(3).Replace="-1"
NetworkCard.Discovery.Source(4).Compute(3).ReplaceBy=""

// Source(5) = Table joint of Source(3) and Source(4)
// Active;AdapterID;UniquePortId;PortSpeed;PortWWN-Decimal;PortWWN-Hex;PortType;AdapterID;Manufacturer;Model;Serial;InstanceName;TxFrames;RxFrames;ErrorCount;
NetworkCard.Discovery.Source(5).Type="TableJoint"
NetworkCard.Discovery.Source(5).LeftTable=%NetworkCard.Discovery.Source(3)%
NetworkCard.Discovery.Source(5).RightTable=%NetworkCard.Discovery.Source(4)%
NetworkCard.Discovery.Source(5).LeftKeyColumn=2
NetworkCard.Discovery.Source(5).RightKeyColumn=1

// Changed from UniquePortID to PortWWN as device ID as it seems this UniqueID is not fixed.
// InstanceTable = Source(3)
// Active;AdapterID;UniquePortId;PortSpeed;PortWWN-Decimal;PortWWN-Hex;PortType;AdapterID;Manufacturer;Model;Serial;InstanceName;TxFrames;RxFrames;ErrorCount;
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(5)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(5)
NetworkCard.Discovery.Instance.Vendor=InstanceTable.Column(9)
NetworkCard.Discovery.Instance.Model=InstanceTable.Column(10)
NetworkCard.Discovery.Instance.BandWidth=InstanceTable.Column(4)
NetworkCard.Discovery.Instance.PhysicalAddress=InstanceTable.Column(6)
NetworkCard.Discovery.Instance.PhysicalAddressType="WWN"
NetworkCard.Discovery.Instance.DeviceType=InstanceTable.Column(7)
NetworkCard.Discovery.Instance.ParameterActivation.ErrorCount=InstanceTable.Column(15)
NetworkCard.Discovery.Instance.ParameterActivation.TransmittedPackets=InstanceTable.Column(13)
NetworkCard.Discovery.Instance.ParameterActivation.ReceivedPackets=InstanceTable.Column(14)


//
// COLLECT

// Collect type is multi-instance
NetworkCard.Collect.Type="MultiInstance"

// Source (1) = MSFC_FibrePortHBAAttributes
// AdapterID;PortState;PortSpeed;PortWWN-Decimal;
NetworkCard.Collect.Source(1).Type="WMI"
NetworkCard.Collect.Source(1).WbemNameSpace="root\wmi"
NetworkCard.Collect.Source(1).WbemQuery="SELECT InstanceName,Attributes.PortState,Attributes.PortSpeed,Attributes.PortWWN FROM MSFC_FibrePortHBAAttributes"

// Duplicate Port State Twice
// AdapterID;PortState;PortSpeed;PortWWN-Decimal;
NetworkCard.Collect.Source(1).Compute(1).Type="DuplicateColumn"
NetworkCard.Collect.Source(1).Compute(1).Column=2
NetworkCard.Collect.Source(1).Compute(2).Type="DuplicateColumn"
NetworkCard.Collect.Source(1).Compute(2).Column=2

// Translate PortState to Patrol Status
// AdapterID;Status;PortState;PortState;PortSpeed;PortWWN-Decimal;
NetworkCard.Collect.Source(1).Compute(3).Type="Translate"
NetworkCard.Collect.Source(1).Compute(3).Column=2
NetworkCard.Collect.Source(1).Compute(3).TranslationTable="PortStateToStatusTranslationTable"

// The PortStateToStatusTranslationTable
PortStateToStatusTranslationTable(1)="UNKNOWN"
PortStateToStatusTranslationTable(2)="OK"
PortStateToStatusTranslationTable(3)="WARN"
PortStateToStatusTranslationTable(4)="OK"
PortStateToStatusTranslationTable(5)="WARN"
PortStateToStatusTranslationTable(6)="OK"
PortStateToStatusTranslationTable(7)="ALARM"
PortStateToStatusTranslationTable(8)="WARN"
PortStateToStatusTranslationTable(Default)="UNKNOWN"

// Translate PortState to Patrol Status
// AdapterID;Status;StatusInformation;PortState;PortSpeed;PortWWN-Decimal;
NetworkCard.Collect.Source(1).Compute(4).Type="Translate"
NetworkCard.Collect.Source(1).Compute(4).Column=3
NetworkCard.Collect.Source(1).Compute(4).TranslationTable="PortStateToStatusInformationTranslationTable"

PortStateToStatusInformationTranslationTable(1)="Unknown"
PortStateToStatusInformationTranslationTable(2)=""
PortStateToStatusInformationTranslationTable(3)="User Offline"
PortStateToStatusInformationTranslationTable(4)="Bypassed"
PortStateToStatusInformationTranslationTable(5)="In diagnostics mode"
PortStateToStatusInformationTranslationTable(6)="Link Down"
PortStateToStatusInformationTranslationTable(7)="Port Error"
PortStateToStatusInformationTranslationTable(8)="Loopback"
PortStateToStatusInformationTranslationTable(Default)="UNKNOWN"

// Translate PortState to Link Status
// AdapterID;Status;StatusInformation;LinkStatus;PortSpeed;PortWWN-Decimal;
NetworkCard.Collect.Source(1).Compute(5).Type="Translate"
NetworkCard.Collect.Source(1).Compute(5).Column=4
NetworkCard.Collect.Source(1).Compute(5).TranslationTable="PortStateToLinkStatusTranslationTable"

// The PortStateToStatusTranslationTable
PortStateToLinkStatusTranslationTable(2)="OK"
PortStateToLinkStatusTranslationTable(6)="WARN"
PortStateToLinkStatusTranslationTable(Default)="UNKNOWN"

// Convert Speed from Gbps to Mbps (multiply by 1000)
// AdapterID;Status;StatusInformation;LinkStatus;PortSpeed;PortWWN-Decimal;
NetworkCard.Collect.Source(1).Compute(6).Type="Multiply"
NetworkCard.Collect.Source(1).Compute(6).Column=5
NetworkCard.Collect.Source(1).Compute(6).MultiplyBy=1000

// Add a FC_ to the Port ID to prevent it from being identified as a Integer
// Remove the array pipes from the port WWN
// AdapterID;Status;StatusInformation;LinkStatus;PortSpeed;PortWWN-Decimal;
NetworkCard.Collect.Source(1).Compute(7).Type="Replace"
NetworkCard.Collect.Source(1).Compute(7).Column=6
NetworkCard.Collect.Source(1).Compute(7).Replace="|"
NetworkCard.Collect.Source(1).Compute(7).ReplaceBy="."

// Source (2) = MSFC_FibrePortHBAStatistics
// InstanceName;TxFrames;RxFrames;ErrorCount
NetworkCard.Collect.Source(2).Type="WMI"
NetworkCard.Collect.Source(2).WbemNameSpace="root\wmi"
NetworkCard.Collect.Source(2).WbemQuery="SELECT InstanceName,statistics.TxFrames,statistics.RxFrames,statistics.ErrorFrames FROM MSFC_FibrePortHBAStatistics"

// Source (3) = Table Joint of 1 & 2
// AdapterID;Status;StatusInformation;LinkStatus;PortSpeed;PortWWN-Decimal;InstanceName;TxFrames;RxFrames;ErrorCount;
NetworkCard.Collect.Source(3).Type="TableJoint"
NetworkCard.Collect.Source(3).LeftTable=%NetworkCard.Collect.Source(1)%
NetworkCard.Collect.Source(3).RightTable=%NetworkCard.Collect.Source(2)%
NetworkCard.Collect.Source(3).LeftKeyColumn=1
NetworkCard.Collect.Source(3).RightKeyColumn=1

// INSTANCE TABLE
// AdapterID;Status;StatusInformation;LinkStatus;PortSpeed;PortWWN-Decimal;InstanceName;TxFrames;RxFrames;ErrorCount;
NetworkCard.Collect.ValueTable=%NetworkCard.Collect.Source(3)%
NetworkCard.Collect.DeviceID=ValueTable.Column(6)
NetworkCard.Collect.Status=ValueTable.Column(2)
NetworkCard.Collect.StatusInformation=ValueTable.Column(3)
NetworkCard.Collect.LinkStatus=ValueTable.Column(4)
NetworkCard.Collect.LinkSpeed=ValueTable.Column(5)
NetworkCard.Collect.ErrorCount=ValueTable.Column(10)
NetworkCard.Collect.TransmittedPackets=ValueTable.Column(8)
NetworkCard.Collect.ReceivedPackets=ValueTable.Column(9)

/////////////////////////////////////////////////////////////
///
///    Embedded File 1
///
///    AWK script that translates the PortWWN to HEX
///	   NOTE - This script is column specific (See Column Variable), so watchout if you change the queries or duplicate columns.
///
/////////////////////////////////////////////////////////////
EmbeddedFile(1):
BEGIN {
	FS = "[;]"
	Column=6
}
{
	n = split($Column, PortWWN, "|");
	printf "MSHW;"
	for (i = 1 ; i <= NF-1 ; i++) {
		if (i == Column) {
			for (j = 1 ; j <= n-1 ; j++) {
				printf "%02X", PortWWN[j]
			}
      printf ";"
    } else {
			printf $i
			printf ";"
		}
	}
 print ""
}
EmbeddedFile(1).End
///////////////////////////////////////////////////////////////
