//
//
//                 C o n n e c t o r
//
//                       f o r
//
//                 Hardware Sentry
//
//               by Sentry Software (c)
//
//             MS_HW_FscRaidSAS.hdf
//
//      Supports: RAID controllers in Fujitsu-Siemens Primergy servers
//                (through the FSC Serverview SNMP sub-agent)
//
//

// HEADER

hdf.DisplayName="Fujitsu-Siemens ServerView RAID Agent"
hdf.TypicalPlatform="Fujitsu-Siemens PRIMERGY"
hdf.ReliesOn="Fujitsu-Siemens Serverview RAID Agent"
hdf.Version="1.0"
hdf.Comments="This connector provides disk monitoring through the Fujitsu-Siemens Serverview RAID SNMP sub-agent which supports many RAID controllers in Primergy servers."
hdf.RemoteSupport="true"
hdf.AppliesToOS="NT,Linux"
hdf.Supersedes="MS_HW_Director52ServeRAIDNT.hdf"

// DETECTION

// Simply check that the FSC RAID MIB is populated with some disks
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.231.2.49.1.5.2.1"

//
// DISK CONTROLLERS
//

//
// Discovery

// Source(1) = svrCtrlTable controllers table
// DeviceID;ControllerNumber;Model;Manufacturer;FirmwareVersion;BIOSVersion
DiskController.Discovery.Source(1).Type="SNMPTable"
DiskController.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.231.2.49.1.4.2.1"
DiskController.Discovery.Source(1).SnmpTableSelectColumns="ID,1,2,3,7,8"

// The Instance table...
DiskController.Discovery.InstanceTable=%DiskController.Discovery.Source(1)%
DiskController.Discovery.Instance.DeviceID=InstanceTable.Column(1)
DiskController.Discovery.Instance.ControllerNumber=InstanceTable.Column(2)
DiskController.Discovery.Instance.Vendor=InstanceTable.Column(4)
DiskController.Discovery.Instance.Model=InstanceTable.Column(3)
DiskController.Discovery.Instance.FirmwareVersion=InstanceTable.Column(5)
DiskController.Discovery.Instance.BiosVersion=InstanceTable.Column(6)

//
// Collect

// Collect type is multi-instance
DiskController.Collect.Type="MultiInstance"

// Source(1) = svrCtrlTable controllers table
// DeviceID;BBUStatus
DiskController.Collect.Source(1).Type="SNMPTable"
DiskController.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.231.2.49.1.4.2.1"
DiskController.Collect.Source(1).SnmpTableSelectColumns="ID,14"

// Translate the BBUStatus into a BatteryStatus
// DeviceID;BatteryStatus
DiskController.Collect.Source(1).Compute(1).Type="Translate"
DiskController.Collect.Source(1).Compute(1).Column="2"
DiskController.Collect.Source(1).Compute(1).TranslationTable="BatteryStatusTranslationTable"

// The BatteryStatusTranslationTable
BatteryStatusTranslationTable(7)="ALARM"
BatteryStatusTranslationTable(Default)="OK"

// ValueTable = Source(1)
DiskController.Collect.ValueTable=%DiskController.Collect.Source(1)%
DiskController.Collect.DeviceID=ValueTable.Column(1)
DiskController.Collect.BatteryStatus=ValueTable.Column(2)


//
// PHYSICAL DISKS
//

//
// Discovery

// Source(1) = svrPhysicalDevice SNMP table
// DeviceID;ControllerNumber;Vendor;SizeGB;DeviceType;SerialNumber
PhysicalDisk.Discovery.Source(1).Type="SNMPTable"
PhysicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.231.2.49.1.5.2.1"
PhysicalDisk.Discovery.Source(1).SnmpTableSelectColumns="ID,1,6,7,9,17"

// Keep only disks
// DeviceID;ControllerNumber;Vendor;SizeGB;DeviceType;SerialNumber
PhysicalDisk.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
PhysicalDisk.Discovery.Source(1).Compute(1).Column="5"
PhysicalDisk.Discovery.Source(1).Compute(1).ValueList="2"

// Convert size from GB to bytes
// DeviceID;ControllerNumber;Vendor;Size;DeviceType;SerialNumber
PhysicalDisk.Discovery.Source(1).Compute(2).Type="Multiply"
PhysicalDisk.Discovery.Source(1).Compute(2).Column="4"
PhysicalDisk.Discovery.Source(1).Compute(2).MultiplyBy="1073741824"

// InstanceTable = Source(1)
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(1)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PhysicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(2)
PhysicalDisk.Discovery.Instance.Size=InstanceTable.Column(4)
PhysicalDisk.Discovery.Instance.Vendor=InstanceTable.Column(3)
PhysicalDisk.Discovery.Instance.SerialNumber=InstanceTable.Column(6)

//
// Collect

// This is a multi-instance collect (execute the collect for each disk)
PhysicalDisk.Collect.Type="MultiInstance"

// Source(1) = svrPhysicalDevice SNMP table
// ID;errors;SmartStatus;Status
PhysicalDisk.Collect.Source(1).Type="SnmpTable"
PhysicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.231.2.49.1.5.2.1"
PhysicalDisk.Collect.Source(1).SnmpTableSelectColumns="ID,12,14,15"

// Duplicate the Status column
// ID;errors;SmartStatus;Status;Status
PhysicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PhysicalDisk.Collect.Source(1).Compute(1).Column="4"

// translate the first Status into PATROL status
// ID;errors;SmartStatus;PATROLStatus;Status
PhysicalDisk.Collect.Source(1).Compute(2).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(2).Column="4"
PhysicalDisk.Collect.Source(1).Compute(2).TranslationTable="PhysicalDiskStatusTranslationTable"

// translate the snmp state into a more readable string
// ID;errors;SmartStatus;PATROLStatus;StatusInformation
PhysicalDisk.Collect.Source(1).Compute(3).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(3).Column="5"
PhysicalDisk.Collect.Source(1).Compute(3).TranslationTable="PhysicalDiskStatusInformationTranslationTable"

// Translate SmartStatus into PredictedFailure
// ID;errors;PredictedFailure;PATROLStatus;StatusInformation
PhysicalDisk.Collect.Source(1).Compute(4).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(4).Column="3"
PhysicalDisk.Collect.Source(1).Compute(4).TranslationTable="PhysicalDiskSmartStatusTranslationTable"

// ValueTable = Source(1)
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(1)
PhysicalDisk.Collect.Status=ValueTable.Column(4)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(5)
PhysicalDisk.Collect.ErrorCount=ValueTable.Column(2)
PhysicalDisk.Collect.PredictedFailure=ValueTable.Column(3)

// The PhysicalDiskStatusTranslationTable
PhysicalDiskStatusTranslationTable(2)="ALARM"
PhysicalDiskStatusTranslationTable(3)="OK"
PhysicalDiskStatusTranslationTable(4)="OK"
PhysicalDiskStatusTranslationTable(5)="ALARM"
PhysicalDiskStatusTranslationTable(6)="WARN"
PhysicalDiskStatusTranslationTable(7)="OK"
PhysicalDiskStatusTranslationTable(8)="OK"
PhysicalDiskStatusTranslationTable(9)="ALARM"
PhysicalDiskStatusTranslationTable(10)="WARN"
PhysicalDiskStatusTranslationTable(11)="OK"
PhysicalDiskStatusTranslationTable(12)="ALARM"
PhysicalDiskStatusTranslationTable(Default)="UNKNOWN"

// The PhysicalDiskStatusInformationTranslationTable
PhysicalDiskStatusInformationTranslationTable(2)="Not a hard disk"
PhysicalDiskStatusInformationTranslationTable(3)=""
PhysicalDiskStatusInformationTranslationTable(4)="Ready"
PhysicalDiskStatusInformationTranslationTable(5)="Failed"
PhysicalDiskStatusInformationTranslationTable(6)="Rebuilding"
PhysicalDiskStatusInformationTranslationTable(7)="Hotspare"
PhysicalDiskStatusInformationTranslationTable(8)="Hotspare"
PhysicalDiskStatusInformationTranslationTable(9)="Offline"
PhysicalDiskStatusInformationTranslationTable(10)="Failed (Unconfigured)"
PhysicalDiskStatusInformationTranslationTable(11)="Formatting"
PhysicalDiskStatusInformationTranslationTable(12)="Dead"
PhysicalDiskStatusInformationTranslationTable(Default)="Unknown Status"

// The PhysicalDiskSmartStatusTranslationTable
PhysicalDiskSmartStatusTranslationTable(1)="0"
PhysicalDiskSmartStatusTranslationTable(2)="1"
PhysicalDiskSmartStatusTranslationTable(3)="0"
PhysicalDiskSmartStatusTranslationTable(4)="0"
PhysicalDiskSmartStatusTranslationTable(Default)="0"


//
// LOGICAL DISKS
//

//
// Discovery

// Source(1) = the svrLogicalDrive SNMP table
// DeviceID;ControllerNumber;SizeGB;RAIDCode
LogicalDisk.Discovery.Source(1).Type="SnmpTable"
LogicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.231.2.49.1.6.2.1"
LogicalDisk.Discovery.Source(1).SnmpTableSelectColumns="ID,1,3,5"

// Convert size in bytes
// DeviceID;ControllerNumber;SizeGB;RAIDCode
LogicalDisk.Discovery.Source(1).Compute(1).Type="Multiply"
LogicalDisk.Discovery.Source(1).Compute(1).Column="3"
LogicalDisk.Discovery.Source(1).Compute(1).MultiplyBy="1073741824"

// Translate RAIDCode into RAIDLevel
// DeviceID;ControllerNumber;SizeGB;RAIDLevel
LogicalDisk.Discovery.Source(1).Compute(2).Type="Translate"
LogicalDisk.Discovery.Source(1).Compute(2).Column="4"
LogicalDisk.Discovery.Source(1).Compute(2).TranslationTable="RAIDLevelTranslationTable"

// The RAIDLevelTranslationTable
RAIDLevelTranslationTable(1)=""
RAIDLevelTranslationTable(2)="0"
RAIDLevelTranslationTable(3)="0+1"
RAIDLevelTranslationTable(4)="1"
RAIDLevelTranslationTable(5)="1e"
RAIDLevelTranslationTable(6)="10"
RAIDLevelTranslationTable(7)="3"
RAIDLevelTranslationTable(8)="4"
RAIDLevelTranslationTable(9)="5"
RAIDLevelTranslationTable(10)="50"
RAIDLevelTranslationTable(11)="5e"
RAIDLevelTranslationTable(12)="5ee"
RAIDLevelTranslationTable(13)="6"
RAIDLevelTranslationTable(14)=""
RAIDLevelTranslationTable(15)=""
RAIDLevelTranslationTable(16)="60"
RAIDLevelTranslationTable(Default)=""

// The instance table
LogicalDisk.Discovery.InstanceTable=%LogicalDisk.Discovery.Source(1)%
LogicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
LogicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(2)
LogicalDisk.Discovery.Instance.Size=InstanceTable.Column(3)
LogicalDisk.Discovery.Instance.RaidLevel=InstanceTable.Column(4)

//
// Collect

// Type = MultiInstance
LogicalDisk.Collect.Type="MultiInstance"

// Source(1) = the svrLogicalDrive SNMP table
// DeviceID;Status
LogicalDisk.Collect.Source(1).Type="SnmpTable"
LogicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.231.2.49.1.6.2.1"
LogicalDisk.Collect.Source(1).SnmpTableSelectColumns="ID,10"

// Duplicate the status column
// DeviceID;Status;Status
LogicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
LogicalDisk.Collect.Source(1).Compute(1).Column="2"

// translate the snmp status into PATROL status
// DeviceID;PATROLStatus;Status
LogicalDisk.Collect.Source(1).Compute(2).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(2).Column="2"
LogicalDisk.Collect.Source(1).Compute(2).TranslationTable="LogicalDiskStatusTranslationTable"

// translate the snmp status into a more readable string
// DeviceID;PATROLStatus;StatusInformation
LogicalDisk.Collect.Source(1).Compute(3).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(3).Column="3"
LogicalDisk.Collect.Source(1).Compute(3).TranslationTable="LogicalDiskStatusInformationTranslationTable"

// ValueTable = Source(1)
LogicalDisk.Collect.ValueTable=%LogicalDisk.Collect.Source(1)%
LogicalDisk.Collect.DeviceID=ValueTable.Column(1)
LogicalDisk.Collect.Status=ValueTable.Column(2)
LogicalDisk.Collect.StatusInformation=ValueTable.Column(3)

//online(2):       drive is OK, all Physical Disks working properly
// 	degraded(3):     one Physical Disk in this array failed, redundancy lost
// 	offline(4):      too many Physical Disks in this array failed, drive no longer available
// 	rebuilding(5):   drive is currently rebuilding (new Physical Disk added)
// 	verifying(6):    drive is currently executing a consistency check
// 	initializing(7): drive was just created and is currently being initialized
// 	morphing(8):     drive is currently being modified (online RAID extension)
// 	partialDegraded(9): one Physical Disk in this array failed, reduced redundancy still available

// The LogicalDiskStatusTranslationTable
LogicalDiskStatusTranslationTable(2)="OK"
LogicalDiskStatusTranslationTable(3)="WARN"
LogicalDiskStatusTranslationTable(4)="ALARM"
LogicalDiskStatusTranslationTable(5)="WARN"
LogicalDiskStatusTranslationTable(6)="WARN"
LogicalDiskStatusTranslationTable(7)="OK"
LogicalDiskStatusTranslationTable(8)="WARN"
LogicalDiskStatusTranslationTable(9)="WARN"
LogicalDiskStatusTranslationTable(Default)="UNKNOWN"

// The LogicalDiskStatusInformationTranslationTable
LogicalDiskStatusInformationTranslationTable(2)=""
LogicalDiskStatusInformationTranslationTable(3)="Degraded"
LogicalDiskStatusInformationTranslationTable(4)="Offline"
LogicalDiskStatusInformationTranslationTable(5)="Rebuilding"
LogicalDiskStatusInformationTranslationTable(6)="Verifying"
LogicalDiskStatusInformationTranslationTable(7)="Initializing"
LogicalDiskStatusInformationTranslationTable(8)="Morphing"
LogicalDiskStatusInformationTranslationTable(9)="Partially Degraded"
LogicalDiskStatusInformationTranslationTable(Default)="Unknown Status"

