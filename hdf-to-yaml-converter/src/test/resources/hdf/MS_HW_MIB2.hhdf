////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//
//      Supports: Switches that support the MIB-2 MIB
//                Connects to a SNMP agent
//
//


//
// Header
//

//hdf.DisplayName="MIB-2 Standard SNMP Agent - Network Interfaces"
//hdf.TypicalPlatform="Network Switches"
hdf.ReliesOn="MIB-2 Standard SNMP Agent"
hdf.Version="1.0"
hdf.Comments="This connector discovers the enclosure and Ethernet ports of a system equipped with an MIB-2 standard SNMP Agent."
hdf.RemoteSupport="true"
//hdf.AppliesToOS="Network,OOB,NT,Linux,Solaris,HP,Storage,VMS,OSF1"
// Does not apply to IBM AIX systems, because the corresponding HDF is good enough (no need for root access, etc.)
//hdf.Supersedes="MS_HW_WBEMGenNetwork.hdf,MS_HW_LinuxNetwork.hdf,MS_HW_HPUXNetwork.hdf,MS_HW_SunNetwork.hdf"


//
// DETECTION
//

// Criteria(1): there must be something in the ifTable SNMP Table
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.2.1.2.2.1"


//
// NETWORK CARDS
//

//
// Discovery

// Source(1) = ifTable SNMP Table
// PortID;Description;TypeCode;MacAddress;AdminStatus;
NetworkCard.Discovery.Source(1).Type="SnmpTable"
NetworkCard.Discovery.Source(1).SnmpTableOid="1.3.6.1.2.1.2.2.1"
NetworkCard.Discovery.Source(1).SnmpTableSelectColumns="ID,2,3,6,7"

// Keep only ports whose administrative status is 'up'
// PortID;Description;TypeCode;MacAddress;AdminStatus;
NetworkCard.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
NetworkCard.Discovery.Source(1).Compute(1).Column=5
NetworkCard.Discovery.Source(1).Compute(1).ValueList="1"

// Keep only real Ethernet and/or FC ports
// PortID;Description;TypeCode;MacAddress;AdminStatus;
NetworkCard.Discovery.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
NetworkCard.Discovery.Source(1).Compute(2).Column=3
NetworkCard.Discovery.Source(1).Compute(2).ValueList="6,7,26,32,37,62,94,95,96,97,117,166"

// Translate the TypeCode to a readable string
// PortID;Description;PortType;MacAddress;AdminStatus;
NetworkCard.Discovery.Source(1).Compute(3).Type="Translate"
NetworkCard.Discovery.Source(1).Compute(3).Column=3
NetworkCard.Discovery.Source(1).Compute(3).TranslationTable="PortTypeTranslationTable"

// The PortTypeTranslationTable
PortTypeTranslationTable(6)="Ethernet"
PortTypeTranslationTable(7)="Ethernet"
PortTypeTranslationTable(26)="Ethernet"
PortTypeTranslationTable(32)="Frame Relay"
PortTypeTranslationTable(37)="ATM"
PortTypeTranslationTable(56)="FC Port"
PortTypeTranslationTable(62)="Ethernet"
PortTypeTranslationTable(94)="ADSL"
PortTypeTranslationTable(95)="RSDL"
PortTypeTranslationTable(96)="SDSL"
PortTypeTranslationTable(97)="VDSL"
PortTypeTranslationTable(117)="Ethernet"
PortTypeTranslationTable(166)="MPLS"
PortTypeTranslationTable(Default)="Ethernet"

// Get information from the ifXtable
// ID;Name;Alias;
NetworkCard.Discovery.Source(2).Type="SnmpTable"
NetworkCard.Discovery.Source(2).SnmpTableOid="1.3.6.1.2.1.31.1.1.1"
NetworkCard.Discovery.Source(2).SnmpTableSelectColumns="ID,1,18"

// Join the 32bit MIB2 table with the 64 bit IfXTable
// PortID;Description;TypeCode;MacAddress;AdminStatus;ID;Name;Alias;
NetworkCard.Discovery.Source(3).Type="TableJoint"
NetworkCard.Discovery.Source(3).LeftTable=%NetworkCard.Discovery.Source(1)%
NetworkCard.Discovery.Source(3).RightTable=%NetworkCard.Discovery.Source(2)%
NetworkCard.Discovery.Source(3).LeftKeyColumn=1
NetworkCard.Discovery.Source(3).RightKeyColumn=1
NetworkCard.Discovery.Source(3).DefaultRightLine=";;;"

// Other Connectors have computations here.

// Instance table is to be declared in the .HDF files to take care of the specificity of each platform



//
// Collect

// Collect type = multi-instance
NetworkCard.Collect.Type="MultiInstance"

// Source(1) = ifTable SNMP Table
// PortID;Description;Speed;OperationalStatus;ReceivedBytes;ReceivedUnicastPackets;ReceivedNonUnicastPackets;ReceivedErrors;TransmittedBytes;TransmittedUnicastPackets;TransmittedNonUnicastPackets;TransmittedErrors;
NetworkCard.Collect.Source(1).Type="SnmpTable"
NetworkCard.Collect.Source(1).SnmpTableOid="1.3.6.1.2.1.2.2.1"
NetworkCard.Collect.Source(1).SnmpTableSelectColumns="ID,2,5,8,10,11,12,14,16,17,18,20"

// Duplicate Status twice
// PortID;Description;Speed;OperationalStatus;OperationalStatus;OperationalStatus;ReceivedBytes;ReceivedUnicastPackets;ReceivedNonUnicastPackets;ReceivedErrors;TransmittedBytes;TransmittedUnicastPackets;TransmittedNonUnicastPackets;TransmittedErrors;
NetworkCard.Collect.Source(1).Compute(1).Type="DuplicateColumn"
NetworkCard.Collect.Source(1).Compute(1).Column=4
NetworkCard.Collect.Source(1).Compute(2).Type="DuplicateColumn"
NetworkCard.Collect.Source(1).Compute(2).Column=5

// Translate the first column status into a PATROLStatus
// PortID;Description;Speed;PATROLStatus;OperationalStatus;OperationalStatus;ReceivedBytes;ReceivedUnicastPackets;ReceivedNonUnicastPackets;ReceivedErrors;TransmittedBytes;TransmittedUnicastPackets;TransmittedNonUnicastPackets;TransmittedErrors;
NetworkCard.Collect.Source(1).Compute(3).Type="Translate"
NetworkCard.Collect.Source(1).Compute(3).Column=4
NetworkCard.Collect.Source(1).Compute(3).TranslationTable="PortStatusTranslationTable"

// The PortStatusTranslationTable
PortStatusTranslationTable(1)="OK"
PortStatusTranslationTable(2)="OK"
PortStatusTranslationTable(3)="WARN"
PortStatusTranslationTable(5)="OK"
PortStatusTranslationTable(6)="ALARM"
PortStatusTranslationTable(7)="ALARM"
PortStatusTranslationTable(Default)="UNKNOWN"

// Translate the second column status into a more readable string
// PortID;Description;Speed;PATROLStatus;StatusInformation;OperationalStatus;ReceivedBytes;ReceivedUnicastPackets;ReceivedNonUnicastPackets;ReceivedErrors;TransmittedBytes;TransmittedUnicastPackets;TransmittedNonUnicastPackets;TransmittedErrors;
NetworkCard.Collect.Source(1).Compute(4).Type="Translate"
NetworkCard.Collect.Source(1).Compute(4).Column=5
NetworkCard.Collect.Source(1).Compute(4).TranslationTable="PortStatusInformationTranslationTable"

// The PortStatusInformationTranslationTable
PortStatusInformationTranslationTable(1)="Up"
PortStatusInformationTranslationTable(2)="Down"
PortStatusInformationTranslationTable(3)="Testing"
PortStatusInformationTranslationTable(5)="Dormant"
PortStatusInformationTranslationTable(6)="Component Not Present"
PortStatusInformationTranslationTable(7)="Lower Layer Down"
PortStatusInformationTranslationTable(Default)="Unknown Status"

// Translate the third column status into a LinkStatus value
// PortID;Description;Speed;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedUnicastPackets;ReceivedNonUnicastPackets;ReceivedErrors;TransmittedBytes;TransmittedUnicastPackets;TransmittedNonUnicastPackets;TransmittedErrors;
NetworkCard.Collect.Source(1).Compute(5).Type="Translate"
NetworkCard.Collect.Source(1).Compute(5).Column=6
NetworkCard.Collect.Source(1).Compute(5).TranslationTable="PortLinkStatusInformationTranslationTable"

// The PortLinkStatusInformationTranslationTable
PortLinkStatusInformationTranslationTable(2)="WARN"
PortLinkStatusInformationTranslationTable(6)="WARN"
PortLinkStatusInformationTranslationTable(7)="WARN"
PortLinkStatusInformationTranslationTable(Default)="OK"

// Convert bits/sec into Mbps
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedUnicastPackets;ReceivedNonUnicastPackets;ReceivedErrors;TransmittedBytes;TransmittedUnicastPackets;TransmittedNonUnicastPackets;TransmittedErrors;
NetworkCard.Collect.Source(1).Compute(6).Type="Divide"
NetworkCard.Collect.Source(1).Compute(6).Column=3
NetworkCard.Collect.Source(1).Compute(6).DivideBy=1000000

// Add up ReceivedUnicastPackets and ReceivedNonUnicastPackets
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;ReceivedErrors;TransmittedBytes;TransmittedUnicastPackets;TransmittedNonUnicastPackets;TransmittedErrors;
NetworkCard.Collect.Source(1).Compute(7).Type="Add"
NetworkCard.Collect.Source(1).Compute(7).Column=8
NetworkCard.Collect.Source(1).Compute(7).Add=Column(9)

// Add up TransmittedUnicastPackets and TransmittedNonUnicastPackets
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;ReceivedErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;
NetworkCard.Collect.Source(1).Compute(8).Type="Add"
NetworkCard.Collect.Source(1).Compute(8).Column=12
NetworkCard.Collect.Source(1).Compute(8).Add=Column(13)

// Add up ReceivedErrors and TransmittedErrors
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;TotalErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;
NetworkCard.Collect.Source(1).Compute(9).Type="Add"
NetworkCard.Collect.Source(1).Compute(9).Column=10
NetworkCard.Collect.Source(1).Compute(9).Add=Column(14)

// Other Connectors have computations here.


// Source(2) = ifMIBObjects SNMP Table
// PortID;SpeedMBs;ReceivedBytes64;ReceivedUnicastPackets64;ifHCInMulticastPkts64;ifHCInBroadcastPkts64;TransmittedBytes64;TransmittedPackets64;ifHCOutMulticastPkts;ifHCOutBroadcastPkts;
NetworkCard.Collect.Source(2).Type="SnmpTable"
NetworkCard.Collect.Source(2).SnmpTableOid="1.3.6.1.2.1.31.1.1.1"
NetworkCard.Collect.Source(2).SnmpTableSelectColumns="ID,15,6,7,8,9,10,11,12,13"

// Add MulticastPkts and BroadcastPkts to UnicastPackets
// PortID;SpeedMBs;ReceivedBytes64;ReceivedUnicastPackets64;ifHCInMulticastPkts64;ifHCInBroadcastPkts64;TransmittedBytes64;TransmittedPackets64;ifHCOutMulticastPkts;ifHCOutBroadcastPkts;
NetworkCard.Collect.Source(2).Compute(1).Type="Add"
NetworkCard.Collect.Source(2).Compute(1).Column=4
NetworkCard.Collect.Source(2).Compute(1).Add=Column(5)

NetworkCard.Collect.Source(2).Compute(2).Type="Add"
NetworkCard.Collect.Source(2).Compute(2).Column=4
NetworkCard.Collect.Source(2).Compute(2).Add=Column(6)

NetworkCard.Collect.Source(2).Compute(3).Type="Add"
NetworkCard.Collect.Source(2).Compute(3).Column=8
NetworkCard.Collect.Source(2).Compute(3).Add=Column(9)

NetworkCard.Collect.Source(2).Compute(4).Type="Add"
NetworkCard.Collect.Source(2).Compute(4).Column=8
NetworkCard.Collect.Source(2).Compute(4).Add=Column(10)

// Keep only useful columns
// PortID;SpeedMBs;ReceivedBytes64;ReceivedPackets64;TransmittedBytes64;TransmittedPackets64;
NetworkCard.Collect.Source(2).Compute(5).Type="KeepColumns"
NetworkCard.Collect.Source(2).Compute(5).ColumnNumbers="1,2,3,4,7,8"

// Source(3) = Table Joint of (1) and (2)
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;TotalErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;PortID;SpeedMBs;ReceivedBytes64;ReceivedPackets64;TransmittedBytes64;TransmittedPackets64;
NetworkCard.Collect.Source(3).Type="TableJoint"
NetworkCard.Collect.Source(3).LeftTable=%NetworkCard.Collect.Source(1)%
NetworkCard.Collect.Source(3).RightTable=%NetworkCard.Collect.Source(2)%
NetworkCard.Collect.Source(3).LeftKeyColumn=1
NetworkCard.Collect.Source(3).RightKeyColumn=1
NetworkCard.Collect.Source(3).DefaultRightLine=";;;;;;"

// Now add MSHW to the Left and Right of the ifMIBObjects SpeedMBS
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;TotalErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;PortID;SpeedMBs;
NetworkCard.Collect.Source(3).Compute(1).Type="LeftConcat"
NetworkCard.Collect.Source(3).Compute(1).Column=16
NetworkCard.Collect.Source(3).Compute(1).String="MSHW"

NetworkCard.Collect.Source(3).Compute(2).Type="RightConcat"
NetworkCard.Collect.Source(3).Compute(2).Column=16
NetworkCard.Collect.Source(3).Compute(2).String="MSHW"

// Replace "MSHWMSHW", i.e. a blank column with the ifTable value.
// This will use the old 32^2 limited value of link bps speed if a Mbps value is not available
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;TotalErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;PortID;SpeedMBs;
NetworkCard.Collect.Source(3).Compute(3).Type="Replace"
NetworkCard.Collect.Source(3).Compute(3).Column=16
NetworkCard.Collect.Source(3).Compute(3).Replace="MSHWMSHW"
NetworkCard.Collect.Source(3).Compute(3).ReplaceBy=Column(3)

// Now get rid of any remaining MSHWs
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;TotalErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;PortID;SpeedMBs;
NetworkCard.Collect.Source(3).Compute(4).Type="Replace"
NetworkCard.Collect.Source(3).Compute(4).Column=16
NetworkCard.Collect.Source(3).Compute(4).Replace="MSHW"
NetworkCard.Collect.Source(3).Compute(4).ReplaceBy=""

// Make a copy of Source(3)
NetworkCard.Collect.Source(4)=%NetworkCard.Collect.Source(3)%

// Keep only interfaces with 64bit counters
//   1        2           3           4              5              6          7              8              9                           10        11             12                 13                            14               15   16         17               18                  19                 20
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;TotalErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;PortID;SpeedMBs;ReceivedBytes64;ReceivedPackets64;TransmittedBytes64;TransmittedPackets64;
NetworkCard.Collect.Source(4).Compute(1).Type="KeepOnlyMatchingLines"
NetworkCard.Collect.Source(4).Compute(1).Column=20
NetworkCard.Collect.Source(4).Compute(1).RegExp="."

// Replace 32 bit counters with 64 bit ones
// ReceivedBytes
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;TotalErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;PortID;SpeedMBs;ReceivedBytes64;ReceivedPackets64;TransmittedBytes64;TransmittedPackets64;
NetworkCard.Collect.Source(4).Compute(2).Type="Replace"
NetworkCard.Collect.Source(4).Compute(2).Column=7
NetworkCard.Collect.Source(4).Compute(2).Replace=Column(7)
NetworkCard.Collect.Source(4).Compute(2).ReplaceBy=Column(17)
// ReceivedPackets
NetworkCard.Collect.Source(4).Compute(3).Type="Replace"
NetworkCard.Collect.Source(4).Compute(3).Column=8
NetworkCard.Collect.Source(4).Compute(3).Replace=Column(8)
NetworkCard.Collect.Source(4).Compute(3).ReplaceBy=Column(18)

// TransmittedBytes
NetworkCard.Collect.Source(4).Compute(4).Type="Replace"
NetworkCard.Collect.Source(4).Compute(4).Column=11
NetworkCard.Collect.Source(4).Compute(4).Replace=Column(11)
NetworkCard.Collect.Source(4).Compute(4).ReplaceBy=Column(19)

// TransmittedPackets
NetworkCard.Collect.Source(4).Compute(5).Type="Replace"
NetworkCard.Collect.Source(4).Compute(5).Column=12
NetworkCard.Collect.Source(4).Compute(5).Replace=Column(12)
NetworkCard.Collect.Source(4).Compute(5).ReplaceBy=Column(20)

// Make a copy of Source(3)
NetworkCard.Collect.Source(5)=%NetworkCard.Collect.Source(3)%

// Exclude interfaces with 64bit counters
//   1        2           3           4              5              6          7              8              9                           10        11             12                 13                            14               15   16         17               18                  19                 20
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;TotalErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;PortID;SpeedMBs;ReceivedBytes64;ReceivedPackets64;TransmittedBytes64;TransmittedPackets64;
NetworkCard.Collect.Source(5).Compute(1).Type="ExcludeMatchingLines"
NetworkCard.Collect.Source(5).Compute(1).Column=20
NetworkCard.Collect.Source(5).Compute(1).RegExp="."

// Union 32 and 64 bit tables
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;TotalErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;PortID;SpeedMBs;ReceivedBytes64;ReceivedPackets64;TransmittedBytes64;TransmittedPackets64;
NetworkCard.Collect.Source(6).Type="TableUnion"
NetworkCard.Collect.Source(6).Table1=%NetworkCard.Collect.Source(4)%
NetworkCard.Collect.Source(6).Table2=%NetworkCard.Collect.Source(5)%



// ValueTable = Source(6)
NetworkCard.Collect.ValueTable=%NetworkCard.Collect.Source(6)%
NetworkCard.Collect.DeviceID=ValueTable.Column(1)
NetworkCard.Collect.Status=ValueTable.Column(4)
NetworkCard.Collect.StatusInformation=ValueTable.Column(5)
NetworkCard.Collect.LinkStatus=ValueTable.Column(6)
NetworkCard.Collect.LinkSpeed=ValueTable.Column(16)
//NetworkCard.Collect.DuplexMode="full"
NetworkCard.Collect.ErrorCount=ValueTable.Column(10)
NetworkCard.Collect.ReceivedPackets=ValueTable.Column(8)
NetworkCard.Collect.TransmittedPackets=ValueTable.Column(12)
NetworkCard.Collect.ReceivedBytes=ValueTable.Column(7)
NetworkCard.Collect.TransmittedBytes=ValueTable.Column(11)


