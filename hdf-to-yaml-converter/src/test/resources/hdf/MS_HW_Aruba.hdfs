////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//
//      Supports: Aruba via WLSX-SYSTEMEXT-MIB
//                Connects to SNMP agent
//
//


//
// Header
//

hdf.DisplayName="Aruba (SNMP)"
hdf.TypicalPlatform="Aruba"
hdf.ReliesOn="SNMP Agent"
hdf.Version="1.0"
hdf.Comments="This connector discovers the Aruba Network Switch enclosure as well as various environment sensors (temperature, fans, power supplies). It relies on the SNMP protocol."
hdf.RemoteSupport="true"
hdf.AppliesToOS="Network"

hdf.Supersedes="MS_HW_GenericSwitchEnclosure.hdf,MS_HW_MIB2.hdf"

#include MS_HW_MIB2.hhdf

//
// DETECTION
//

// Detection Criteria 1
// Check for WLSX-SYSTEMEXT-MIB entry
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.14823.2.2.1.2"


//
// Enclosure
//

// hostname
Enclosure.Discovery.Source(1).Type="SnmpGet"
Enclosure.Discovery.Source(1).SnmpOid="1.3.6.1.4.1.14823.2.2.1.2.1.2.0"

// model
Enclosure.Discovery.Source(2).Type="SnmpGet"
Enclosure.Discovery.Source(2).SnmpOid="1.3.6.1.4.1.14823.2.2.1.2.1.3.0"

Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Instance.DeviceID="Chassis"
Enclosure.Discovery.Instance.DisplayID=InstanceTable.Column(1)
Enclosure.Discovery.Instance.Model=%Enclosure.Discovery.Source(2)%
Enclosure.Discovery.Instance.Vendor="Aruba"
Enclosure.Discovery.Instance.DeviceHostname=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Instance.Type="Switch"


//
// PowerSupply
//

PowerSupply.Discovery.Source(1).Type="SnmpTable"
PowerSupply.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.14823.2.2.1.2.1.18.1"
PowerSupply.Discovery.Source(1).SnmpTableSelectColumns="ID,2"

PowerSupply.Discovery.Source(1).Compute(1).Type="DuplicateColumn"
PowerSupply.Discovery.Source(1).Compute(1).Column=1

PowerSupply.Discovery.Source(1).Compute(2).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(2).Column=2
PowerSupply.Discovery.Source(1).Compute(2).String="PSU "

PowerSupply.Discovery.Source(1).Compute(3).Type="ExcludeMatchingLines"
PowerSupply.Discovery.Source(1).Compute(3).Column=3
PowerSupply.Discovery.Source(1).Compute(3).RegExp="2"

// ID;Name;
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(2)

PowerSupply.Discovery.Instance.AttachedToDeviceID="Chassis"

// Collect

// Collect type = multi-instance
PowerSupply.Collect.Type="MultiInstance"

PowerSupply.Collect.Source(1).Type="SnmpTable"
PowerSupply.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.14823.2.2.1.2.1.18.1"
PowerSupply.Collect.Source(1).SnmpTableSelectColumns="ID,2"

PowerSupply.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(1).Column=2

PowerSupply.Collect.Source(1).Compute(2).Type="Translate"
PowerSupply.Collect.Source(1).Compute(2).Column=2
PowerSupply.Collect.Source(1).Compute(2).TranslationTable="SensorStatusTranslationTable"

PowerSupply.Collect.Source(1).Compute(3).Type="Translate"
PowerSupply.Collect.Source(1).Compute(3).Column=3
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="SensorStatusInformationTranslationTable"

// Id;PatrolStatus;StatusInformation
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)


//
// Fan
//

Fan.Discovery.Source(1).Type="SnmpTable"
Fan.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.14823.2.2.1.2.1.17.1"
Fan.Discovery.Source(1).SnmpTableSelectColumns="ID,2"

Fan.Discovery.Source(1).Compute(1).Type="DuplicateColumn"
Fan.Discovery.Source(1).Compute(1).Column=1

Fan.Discovery.Source(1).Compute(2).Type="LeftConcat"
Fan.Discovery.Source(1).Compute(2).Column=2
Fan.Discovery.Source(1).Compute(2).String="Fan "

Fan.Discovery.Source(1).Compute(3).Type="ExcludeMatchingLines"
Fan.Discovery.Source(1).Compute(3).Column=3
Fan.Discovery.Source(1).Compute(3).RegExp="2"

// ID;Name;
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(2)

Fan.Discovery.Instance.AttachedToDeviceID="Chassis"

// Collect

// Collect type = multi-instance
Fan.Collect.Type="MultiInstance"


Fan.Collect.Source(1).Type="SnmpTable"
Fan.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.14823.2.2.1.2.1.17.1"
Fan.Collect.Source(1).SnmpTableSelectColumns="ID,2"

Fan.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Fan.Collect.Source(1).Compute(1).Column=2

Fan.Collect.Source(1).Compute(2).Type="Translate"
Fan.Collect.Source(1).Compute(2).Column=2
Fan.Collect.Source(1).Compute(2).TranslationTable="SensorStatusTranslationTable"

Fan.Collect.Source(1).Compute(3).Type="Translate"
Fan.Collect.Source(1).Compute(3).Column=3
Fan.Collect.Source(1).Compute(3).TranslationTable="SensorStatusInformationTranslationTable"

// Id;PatrolStatus;StatusInformation
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(2)
Fan.Collect.StatusInformation=ValueTable.Column(3)


//
// Temperature
//

Temperature.Discovery.Source(1)="InternalTemperature"

Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Temperature.Discovery.Instance.DisplayID="Internal Temperature"

// Collect

Temperature.Collect.Source(1).Type="SnmpGet"
Temperature.Collect.Source(1).SnmpOid="1.3.6.1.4.1.14823.2.2.1.2.1.10.0"

// Duplicate Temperature String
Temperature.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Temperature.Collect.Source(1).Compute(1).Column=1

// Extract Temperature
Temperature.Collect.Source(1).Compute(2).Type="Extract"
Temperature.Collect.Source(1).Compute(2).Column=1
Temperature.Collect.Source(1).Compute(2).SubColumn=1
Temperature.Collect.Source(1).Compute(2).SubSeparators=" "

// Extract Status
Temperature.Collect.Source(1).Compute(3).Type="Extract"
Temperature.Collect.Source(1).Compute(3).Column=2
Temperature.Collect.Source(1).Compute(3).SubColumn=4
Temperature.Collect.Source(1).Compute(3).SubSeparators=" "

// Duplicate Status
Temperature.Collect.Source(1).Compute(4).Type="DuplicateColumn"
Temperature.Collect.Source(1).Compute(4).Column=2

// Translate Status
Temperature.Collect.Source(1).Compute(5).Type="Translate"
Temperature.Collect.Source(1).Compute(5).Column=2
Temperature.Collect.Source(1).Compute(5).TranslationTable="TemperatureStatusTranslationTable"

// Translate StatusInformation
Temperature.Collect.Source(1).Compute(6).Type="Translate"
Temperature.Collect.Source(1).Compute(6).Column=3
Temperature.Collect.Source(1).Compute(6).TranslationTable="TemperatureStatusInformationTranslationTable"

// Temperature;PatrolStatus;StatusInformation;
Temperature.Collect.ValueTable=%Temperature.Collect.Source(1)%
Temperature.Collect.DeviceID="InternalTemperature"
Temperature.Collect.Temperature=ValueTable.Column(1)
Temperature.Collect.Status=ValueTable.Column(2)
Temperature.Collect.StatusInformation=ValueTable.Column(3)

//add network card discovery present in mib2.hdf and not in mib2.hhdf
// PortID;Description;TypeCode;MacAddress;AdminStatus;ID;Name;Alias;
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(3)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(1)
NetworkCard.Discovery.Instance.DisplayID=InstanceTable.Column(7)
NetworkCard.Discovery.Instance.PhysicalAddress=InstanceTable.Column(4)
NetworkCard.Discovery.Instance.PhysicalAddressType="MAC"
NetworkCard.Discovery.Instance.DeviceType=InstanceTable.Column(3)

TemperatureStatusTranslationTable("(NORMAL)")="OK"
TemperatureStatusTranslationTable(Default)="ALARM"

TemperatureStatusInformationTranslationTable("(NORMAL)")=""
TemperatureStatusInformationTranslationTable(Default)="Temperature outside normal range."

// SensorStatusTranslationTable
SensorStatusTranslationTable(1)="OK"
SensorStatusTranslationTable(2)="ALARM"
SensorStatusTranslationTable(Default)="UNKNOWN"

// SensorStatusInformationTranslationTable
SensorStatusInformationTranslationTable(1)="Active"
SensorStatusInformationTranslationTable(2)="Inactive"
SensorStatusInformationTranslationTable(Default)="Unknown Status"
