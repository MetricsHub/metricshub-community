////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//      Supports: Dell MX Series
//                Connects to REST API
//

//
// Header
//

hdf.DisplayName="Dell MX Chassis and Blades (REST)"
hdf.TypicalPlatform="Dell MX7000"
hdf.Version="1.0"
hdf.Comments="This connector provides hardware monitoring for Dell MX Series. It monitors the enclosure and physical disks as well as the various environment sensors (CPUs, temperatures, fans, power supplies, memory, disk controllers, batteries and network cards)."
hdf.RemoteSupport="true"
hdf.LocalSupport="false"
hdf.AppliesToOS="OOB"


//
// DETECTION
//

// Hardware Sentry v10.2.00+
Detection.Criteria(1).Type="KMVersion"
Detection.Criteria(1).Version="10.2.00"

Detection.Criteria(2).Type="HTTP"
Detection.Criteria(2).Method="GET"
Detection.Criteria(2).URL="/api/DeviceService/Devices"
Detection.Criteria(2).Header=EmbeddedFile(1)
Detection.Criteria(2).ExpectedResult="api"
Detection.Criteria(2).ErrorMessage="Invalid credentials / not an MX7000"


//
// Enclosure
//

// Discovery
//List the devices
Enclosure.Discovery.Source(1).Type="HTTP"
Enclosure.Discovery.Source(1).Method="GET"
Enclosure.Discovery.Source(1).Url="/api/DeviceService/Devices"
Enclosure.Discovery.Source(1).Header=EmbeddedFile(1)
Enclosure.Discovery.Source(1).ResultContent="body"


Enclosure.Discovery.Source(1).Compute(1).Type="Json2Csv"
Enclosure.Discovery.Source(1).Compute(1).EntryKey="/value"
Enclosure.Discovery.Source(1).Compute(1).Properties="/@odata.id;/DeviceName;/Identifier;/Model;/Type;/SlotConfiguration/ChassisName;/SlotConfiguration/SlotNumber;"
Enclosure.Discovery.Source(1).Compute(1).Separator=";"

//keep only chassis and blades
Enclosure.Discovery.Source(2)=%Enclosure.Discovery.Source(1)%

Enclosure.Discovery.Source(2).Compute(1).Type="KeepOnlyMatchingLines"
Enclosure.Discovery.Source(2).Compute(1).Column=6
Enclosure.Discovery.Source(2).Compute(1).RegExp="2000"


Enclosure.Discovery.Source(2).Compute(2).Type="Translate"
Enclosure.Discovery.Source(2).Compute(2).Column=6
Enclosure.Discovery.Source(2).Compute(2).TranslationTable="TypeTranslationTable"

TypeTranslationTable(1000)="Server"
TypeTranslationTable(2000)="Chassis"
TypeTranslationTable(3000)="Storage"
TypeTranslationTable(4000)="NETWORK IO Module"
TypeTranslationTable(8000)="Storage IOM"

// Enclosure Instance Table
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(2)%
Enclosure.Discovery.Instance.DeviceID=InstanceTable.Column(3)
Enclosure.Discovery.Instance.DisplayID=InstanceTable.Column(3)
Enclosure.Discovery.Instance.Model=InstanceTable.Column(5)
Enclosure.Discovery.Instance.SerialNumber=InstanceTable.Column(4)
Enclosure.Discovery.Instance.Vendor="Dell"
Enclosure.Discovery.Instance.Type=InstanceTable.Column(6)

// Collection
Enclosure.Collect.Type="MultiInstance"

Enclosure.Collect.Source(1).Type="HTTP"
Enclosure.Collect.Source(1).Method="GET"
Enclosure.Collect.Source(1).Url="/api/DeviceService/Devices"
Enclosure.Collect.Source(1).Header=EmbeddedFile(1)
Enclosure.Collect.Source(1).ResultContent="body"


Enclosure.Collect.Source(1).Compute(1).Type="Json2Csv"
Enclosure.Collect.Source(1).Compute(1).EntryKey="/value"
Enclosure.Collect.Source(1).Compute(1).Properties="/DeviceName;/Status;/Status;/SlotConfiguration/SlotNumber;"
Enclosure.Collect.Source(1).Compute(1).Separator=";"

Enclosure.Collect.Source(1).Compute(2).Type="Translate"
Enclosure.Collect.Source(1).Compute(2).Column=3
Enclosure.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

Enclosure.Collect.Source(1).Compute(3).Type="Translate"
Enclosure.Collect.Source(1).Compute(3).Column=4
Enclosure.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

// Enclosure Value Table
Enclosure.Collect.ValueTable=%Enclosure.Collect.Source(1)%
Enclosure.Collect.DeviceID=ValueTable.Column(2)
Enclosure.Collect.Status=ValueTable.Column(3)
Enclosure.Collect.StatusInformation=ValueTable.Column(4)

//
// Blade discovery
//

// Discovery
//now create a container blade with global status
Blade.Discovery.Source(1)=%Enclosure.Discovery.Source(1)%

Blade.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Blade.Discovery.Source(1).Compute(1).Column=6
Blade.Discovery.Source(1).Compute(1).RegExp="1000"

// "jsonid;/@odata.id;/DeviceName;/Identifier;/Model;/Type;/SlotConfiguration/ChassisName;/SlotConfiguration/SlotNumber;"
Blade.Discovery.Source(1).Compute(2).Type="Replace"
Blade.Discovery.Source(1).Compute(2).Column=6
Blade.Discovery.Source(1).Compute(2).Replace="1000"
Blade.Discovery.Source(1).Compute(2).ReplaceBy="Blade"

// Enclosure Instance Table
Blade.Discovery.InstanceTable=%Blade.Discovery.Source(1)%
Blade.Discovery.Instance.DeviceID=InstanceTable.Column(3)
Blade.Discovery.Instance.DisplayID=InstanceTable.Column(3)
Blade.Discovery.Instance.BladeName=InstanceTable.Column(3)
Blade.Discovery.Instance.BladeModel=InstanceTable.Column(5)
Blade.Discovery.Instance.SerialNumber=InstanceTable.Column(4)
Blade.Discovery.Instance.AdditionalInformation1="Vendor: Dell"
Blade.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(7)



//collect the blades
//"JSONID;/DeviceName;/Status;/Status;/SlotConfiguration/SlotNumber;"
Blade.Collect.Source(1)=%Enclosure.Collect.Source(1)%

Blade.Collect.ValueTable=%Blade.Collect.Source(1)%
Blade.Collect.DeviceID=ValueTable.Column(2)
Blade.Collect.Status=ValueTable.Column(3)
Blade.Collect.StatusInformation=ValueTable.Column(4)

//
// OtherDevice
//

// Discovery
//first other device represent the network switchs
OtherDevice.Discovery.Source(1).Type="HTTP"
OtherDevice.Discovery.Source(1).Method="GET"
OtherDevice.Discovery.Source(1).Url="/api/DeviceService/Devices"
OtherDevice.Discovery.Source(1).Header=EmbeddedFile(1)
OtherDevice.Discovery.Source(1).ResultContent="body"

OtherDevice.Discovery.Source(1).Compute(1).Type="Json2Csv"
OtherDevice.Discovery.Source(1).Compute(1).EntryKey="/value"
OtherDevice.Discovery.Source(1).Compute(1).Properties="/@odata.type;/DeviceName;/DeviceName;/Identifier;/Model;/Type;"
OtherDevice.Discovery.Source(1).Compute(1).Separator=";"

OtherDevice.Discovery.Source(2)=%OtherDevice.Discovery.Source(1)%

OtherDevice.Discovery.Source(2).Compute(1).Type="ExcludeMatchingLines"
OtherDevice.Discovery.Source(2).Compute(1).Column=7
OtherDevice.Discovery.Source(2).Compute(1).RegExp="\(1000\)\|\(2000\)"

OtherDevice.Discovery.Source(2).Compute(2).Type="Translate"
OtherDevice.Discovery.Source(2).Compute(2).Column=7
OtherDevice.Discovery.Source(2).Compute(2).TranslationTable="TypeTranslationTable"

OtherDevice.Discovery.Source(3)=%OtherDevice.Discovery.Source(1)%

OtherDevice.Discovery.Source(3).Compute(1).Type="KeepOnlyMatchingLines"
OtherDevice.Discovery.Source(3).Compute(1).Column=7
OtherDevice.Discovery.Source(3).Compute(1).RegExp="2000"
//now attach the other device to the chassis
OtherDevice.Discovery.Source(4).Type="TableJoint"
OtherDevice.Discovery.Source(4).LeftTable=%OtherDevice.Discovery.Source(2)%
OtherDevice.Discovery.Source(4).RightTable=%OtherDevice.Discovery.Source(3)%
OtherDevice.Discovery.Source(4).LeftKeyColumn=2
OtherDevice.Discovery.Source(4).RightKeyColumn=2

//Now set in column 2 the device

OtherDevice.Discovery.Source(4).Compute(1).Type="Replace"
OtherDevice.Discovery.Source(4).Compute(1).Column=2
OtherDevice.Discovery.Source(4).Compute(1).Replace=Column(2)
OtherDevice.Discovery.Source(4).Compute(1).ReplaceBy=Column(10)



// add the chassis controllers (CMC)
OtherDevice.Discovery.Source(5).Type="HTTP"
OtherDevice.Discovery.Source(5).Method="GET"
OtherDevice.Discovery.Source(5).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
OtherDevice.Discovery.Source(5).Url="%Entry.Column(2)%/InventoryDetails('chassisControllerList')"
OtherDevice.Discovery.Source(5).Header=EmbeddedFile(1)
OtherDevice.Discovery.Source(5).ResultContent="body"
OtherDevice.Discovery.Source(5).EntryConcatMethod="JSONArrayExtended"

OtherDevice.Discovery.Source(5).Compute(1).Type="Json2Csv"
OtherDevice.Discovery.Source(5).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
OtherDevice.Discovery.Source(5).Compute(1).Properties="../../Column(2);/Name;/Name;/FirmwareVersion;"
OtherDevice.Discovery.Source(5).Compute(1).Separator=";"

OtherDevice.Discovery.Source(5).Compute(2).Type="KeepOnlyMatchingLines"
OtherDevice.Discovery.Source(5).Compute(2).Column=3
OtherDevice.Discovery.Source(5).Compute(2).RegExp="."

//now union switch with CMC

OtherDevice.Discovery.Source(6).Type="TableUnion"
OtherDevice.Discovery.Source(6).Table1=%OtherDevice.Discovery.Source(4)%
OtherDevice.Discovery.Source(6).Table2=%OtherDevice.Discovery.Source(5)%

OtherDevice.Discovery.Source(6).Compute(1).Type="LeftConcat"
OtherDevice.Discovery.Source(6).Compute(1).Column=6
OtherDevice.Discovery.Source(6).Compute(1).String="Model: "

OtherDevice.Discovery.Source(6).Compute(1).Type="LeftConcat"
OtherDevice.Discovery.Source(6).Compute(1).Column=5
OtherDevice.Discovery.Source(6).Compute(1).String="SerialNumber: "


OtherDevice.Discovery.InstanceTable=%OtherDevice.Discovery.Source(6)%
OtherDevice.Discovery.Instance.DeviceID=InstanceTable.Column(3)
OtherDevice.Discovery.Instance.DisplayID=InstanceTable.Column(4)
OtherDevice.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(5)
OtherDevice.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(6)
OtherDevice.Discovery.Instance.DeviceType=InstanceTable.Column(7)



// Collect
OtherDevice.Collect.Source(1).Type="HTTP"
OtherDevice.Collect.Source(1).Method="GET"
OtherDevice.Collect.Source(1).Url="/api/DeviceService/Devices"
OtherDevice.Collect.Source(1).Header=EmbeddedFile(1)
OtherDevice.Collect.Source(1).ResultContent="body"

OtherDevice.Collect.Source(1).Compute(1).Type="Json2Csv"
OtherDevice.Collect.Source(1).Compute(1).EntryKey="/value"
OtherDevice.Collect.Source(1).Compute(1).Properties="/DeviceName;/Status;/Status;"
OtherDevice.Collect.Source(1).Compute(1).Separator=";"

OtherDevice.Collect.Source(1).Compute(2).Type="Translate"
OtherDevice.Collect.Source(1).Compute(2).Column=3
OtherDevice.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

OtherDevice.Collect.Source(1).Compute(3).Type="Translate"
OtherDevice.Collect.Source(1).Compute(3).Column=4
OtherDevice.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

OtherDevice.Collect.Source(2).Type="HTTP"
OtherDevice.Collect.Source(2).Method="GET"
OtherDevice.Collect.Source(2).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
OtherDevice.Collect.Source(2).Url="%Entry.Column(2)%/InventoryDetails('chassisControllerList')"
OtherDevice.Collect.Source(2).Header=EmbeddedFile(1)
OtherDevice.Collect.Source(2).ResultContent="body"
OtherDevice.Collect.Source(2).EntryConcatMethod="JSONArrayExtended"

OtherDevice.Collect.Source(2).Compute(1).Type="Json2Csv"
OtherDevice.Collect.Source(2).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
OtherDevice.Collect.Source(2).Compute(1).Properties="/Name;/Health;/Health;"
OtherDevice.Collect.Source(2).Compute(1).Separator=";"

OtherDevice.Collect.Source(2).Compute(2).Type="Translate"
OtherDevice.Collect.Source(2).Compute(2).Column=3
OtherDevice.Collect.Source(2).Compute(2).TranslationTable="StatusTranslationTable"

OtherDevice.Collect.Source(2).Compute(3).Type="Translate"
OtherDevice.Collect.Source(2).Compute(3).Column=4
OtherDevice.Collect.Source(2).Compute(3).TranslationTable="StatusInformationTranslationTable"

//now union swtich and CMC

OtherDevice.Collect.Source(3).Type="TableUnion"
OtherDevice.Collect.Source(3).Table1=%OtherDevice.Collect.Source(1)%
OtherDevice.Collect.Source(3).Table2=%OtherDevice.Collect.Source(2)%

// Blade Value Table
OtherDevice.Collect.ValueTable=%OtherDevice.Collect.Source(3)%
OtherDevice.Collect.DeviceID=ValueTable.Column(2)
OtherDevice.Collect.Status=ValueTable.Column(3)
OtherDevice.Collect.StatusInformation=ValueTable.Column(4)


//
// CPU
//

// Discovery
CPU.Discovery.Source(1).Type="HTTP"
CPU.Discovery.Source(1).Method="GET"
CPU.Discovery.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
CPU.Discovery.Source(1).Url="%Entry.Column(2)%/InventoryDetails('serverProcessors')"
CPU.Discovery.Source(1).Header=EmbeddedFile(1)
CPU.Discovery.Source(1).ResultContent="body"
CPU.Discovery.Source(1).EntryConcatMethod="JSONArrayExtended"

CPU.Discovery.Source(1).Compute(1).Type="Json2Csv"
CPU.Discovery.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
CPU.Discovery.Source(1).Compute(1).Properties="../../Column(2);/SlotNumber;/BrandName;/ModelName;/MaxSpeed;"
CPU.Discovery.Source(1).Compute(1).Separator=";"

CPU.Discovery.Source(1).Compute(2).Type="Replace"
CPU.Discovery.Source(1).Compute(2).Column=3
CPU.Discovery.Source(1).Compute(2).Replace="CPU."
CPU.Discovery.Source(1).Compute(2).ReplaceBy=""

//exclude cpu's with empty slots

CPU.Discovery.Source(1).Compute(3).Type="KeepOnlyMatchingLines"
CPU.Discovery.Source(1).Compute(3).Column=3
CPU.Discovery.Source(1).Compute(3).RegExp="."

//compute now the disk ID
CPU.Discovery.Source(1).Compute(4).Type="RightConcat"
CPU.Discovery.Source(1).Compute(4).Column=2
CPU.Discovery.Source(1).Compute(4).String=";"

//compute now the disk ID
CPU.Discovery.Source(1).Compute(5).Type="LeftConcat"
CPU.Discovery.Source(1).Compute(5).Column=3
CPU.Discovery.Source(1).Compute(5).String=Column(2)

CPU.Discovery.Source(1).Compute(6).Type="RightConcat"
CPU.Discovery.Source(1).Compute(6).Column=3
CPU.Discovery.Source(1).Compute(6).String=Column(4)


// CPU Instance Table
CPU.Discovery.InstanceTable=%CPU.Discovery.Source(1)%
CPU.Discovery.Instance.DeviceID=InstanceTable.Column(3)
CPU.Discovery.Instance.DisplayID=InstanceTable.Column(4)
CPU.Discovery.Instance.Vendor=InstanceTable.Column(5)
CPU.Discovery.Instance.Model=InstanceTable.Column(6)
CPU.Discovery.Instance.MaximumSpeed=InstanceTable.Column(7)

// Collect
CPU.Collect.Type="MultiInstance"

CPU.Collect.Source(1).Type="HTTP"
CPU.Collect.Source(1).Method="GET"
CPU.Collect.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
CPU.Collect.Source(1).Url="%Entry.Column(2)%/InventoryDetails('serverProcessors')"
CPU.Collect.Source(1).Header=EmbeddedFile(1)
CPU.Collect.Source(1).ResultContent="body"
CPU.Collect.Source(1).EntryConcatMethod="JsonArray"

CPU.Collect.Source(1).Compute(1).Type="Json2Csv"
CPU.Collect.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
CPU.Collect.Source(1).Compute(1).Properties="../../Column(2);/SlotNumber;/Status;/Status;"
CPU.Collect.Source(1).Compute(1).Separator=";"

CPU.Collect.Source(1).Compute(2).Type="Translate"
CPU.Collect.Source(1).Compute(2).Column=4
CPU.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

CPU.Collect.Source(1).Compute(3).Type="Translate"
CPU.Collect.Source(1).Compute(3).Column=5
CPU.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

CPU.Collect.Source(1).Compute(4).Type="RightConcat"
CPU.Collect.Source(1).Compute(4).Column=2
CPU.Collect.Source(1).Compute(4).String=Column(3)

// CPU Value Table
CPU.Collect.ValueTable=%CPU.Collect.Source(1)%
CPU.Collect.DeviceID=ValueTable.Column(2)
CPU.Collect.Status=ValueTable.Column(4)
CPU.Collect.StatusInformation=ValueTable.Column(5)


//
// Memory
//

// Discovery
Memory.Discovery.Source(1).Type="HTTP"
Memory.Discovery.Source(1).Method="GET"
Memory.Discovery.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
Memory.Discovery.Source(1).Url="%Entry.Column(2)%/InventoryDetails('serverMemoryDevices')"
Memory.Discovery.Source(1).Header=EmbeddedFile(1)
Memory.Discovery.Source(1).ResultContent="body"
Memory.Discovery.Source(1).EntryConcatMethod="JSONArrayExtended"

Memory.Discovery.Source(1).Compute(1).Type="Json2Csv"
Memory.Discovery.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
Memory.Discovery.Source(1).Compute(1).Properties="../../Column(2);/InstanceId;/Name;/Size;/Manufacturer;/PartNumber;/SerialNumber;"
Memory.Discovery.Source(1).Compute(1).Separator=";"

Memory.Discovery.Source(1).Compute(2).Type="Replace"
Memory.Discovery.Source(1).Compute(2).Column=4
Memory.Discovery.Source(1).Compute(2).Replace="DIMM."
Memory.Discovery.Source(1).Compute(2).ReplaceBy=""

//Exclude memory with empty names
Memory.Discovery.Source(1).Compute(3).Type="KeepOnlyMatchingLines"
Memory.Discovery.Source(1).Compute(3).Column=3
Memory.Discovery.Source(1).Compute(3).RegExp="."

// Memory Instance Table
Memory.Discovery.InstanceTable=%Memory.Discovery.Source(1)%
Memory.Discovery.Instance.DeviceID=InstanceTable.Column(8)
Memory.Discovery.Instance.DisplayID=InstanceTable.Column(4)
Memory.Discovery.Instance.Size=InstanceTable.Column(5)
Memory.Discovery.Instance.Vendor=InstanceTable.Column(6)
Memory.Discovery.Instance.Model=InstanceTable.Column(7)
Memory.Discovery.Instance.SerialNumber=InstanceTable.Column(8)


// Collect
Memory.Collect.Type="MultiInstance"

Memory.Collect.Source(1).Type="HTTP"
Memory.Collect.Source(1).Method="GET"
Memory.Collect.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
Memory.Collect.Source(1).Url="%Entry.Column(2)%/InventoryDetails('serverMemoryDevices')"
Memory.Collect.Source(1).Header=EmbeddedFile(1)
Memory.Collect.Source(1).ResultContent="body"
Memory.Collect.Source(1).EntryConcatMethod="JSONArrayExtended"

Memory.Collect.Source(1).Compute(1).Type="Json2Csv"
Memory.Collect.Source(1).Compute(1).EntryKey="Entry/Value/InventoryInfo"
Memory.Collect.Source(1).Compute(1).Properties="/InstanceId;/Status;/Status;/SerialNumber;"
Memory.Collect.Source(1).Compute(1).Separator=";"

Memory.Collect.Source(1).Compute(2).Type="Translate"
Memory.Collect.Source(1).Compute(2).Column=3
Memory.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

Memory.Collect.Source(1).Compute(3).Type="Translate"
Memory.Collect.Source(1).Compute(3).Column=4
Memory.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

// Memory Value Table
Memory.Collect.ValueTable=%Memory.Collect.Source(1)%
Memory.Collect.DeviceID=ValueTable.Column(5)
Memory.Collect.Status=ValueTable.Column(3)
Memory.Collect.StatusInformation=ValueTable.Column(4)


//
// FANS
//

// Discovery
Fan.Discovery.Source(1).Type="HTTP"
Fan.Discovery.Source(1).Method="GET"
Fan.Discovery.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
Fan.Discovery.Source(1).Url="%Entry.Column(2)%/InventoryDetails('chassisFansList')"
Fan.Discovery.Source(1).Header=EmbeddedFile(1)
Fan.Discovery.Source(1).ResultContent="body"
Fan.Discovery.Source(1).EntryConcatMethod="JSONArrayExtended"

Fan.Discovery.Source(1).Compute(1).Type="Json2Csv"
Fan.Discovery.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
Fan.Discovery.Source(1).Compute(1).Properties="../../Column(3);/MemberId;/Name;/MemberId"
Fan.Discovery.Source(1).Compute(1).Separator=";"

//exclude Fan with empty names

Fan.Discovery.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
Fan.Discovery.Source(1).Compute(2).Column=3
Fan.Discovery.Source(1).Compute(2).RegExp="."

//as the fan member id is unique for a specific chassis and we have multiple chassis let's make it unique

Fan.Discovery.Source(1).Compute(3).Type="LeftConcat"
Fan.Discovery.Source(1).Compute(3).Column=3
Fan.Discovery.Source(1).Compute(3).String=Column(2)

//remove /entry/value from jsonid to use it in the above tablejoint
Fan.Discovery.Source(1).Compute(4).Type="Replace"
Fan.Discovery.Source(1).Compute(4).Column=1
Fan.Discovery.Source(1).Compute(4).Replace="/Entry/Value"
Fan.Discovery.Source(1).Compute(4).ReplaceBy=""

// Fan Instance Table
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(3)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(4)
Fan.Discovery.Instance.AttachedToDeviceType="Chassis"
Fan.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(2)
// Collection
Fan.Collect.Type="MultiInstance"

Fan.Collect.Source(1).Type="HTTP"
Fan.Collect.Source(1).Method="GET"
Fan.Collect.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
Fan.Collect.Source(1).Url="%Entry.Column(2)%/InventoryDetails('chassisFansList')"
Fan.Collect.Source(1).Header=EmbeddedFile(1)
Fan.Collect.Source(1).ResultContent="body"
Fan.Collect.Source(1).EntryConcatMethod="JsonArray"

Fan.Collect.Source(1).Compute(1).Type="Json2Csv"
Fan.Collect.Source(1).Compute(1).EntryKey="/InventoryInfo"
Fan.Collect.Source(1).Compute(1).Properties="/MemberId;/Status;/Speed;/Pwm;/Status;"
Fan.Collect.Source(1).Compute(1).Separator=";"

Fan.Collect.Source(1).Compute(2).Type="Translate"
Fan.Collect.Source(1).Compute(2).Column=3
Fan.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

Fan.Collect.Source(1).Compute(3).Type="Translate"
Fan.Collect.Source(1).Compute(3).Column=6
Fan.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

//tablejoint with fan.source1 to get enclosure id
//jsonid;/MemberId;/Status;/Speed;/Pwm;/Status;jsonid;../../Column(3);/MemberId;/Name;/MemberId

Fan.Collect.Source(2).Type="TableJoint"
Fan.Collect.Source(2).LeftTable=%Fan.Collect.Source(1)%
Fan.Collect.Source(2).RightTable=%Fan.Discovery.Source(1)%
Fan.Collect.Source(2).LeftKeyColumn=1
Fan.Collect.Source(2).RightKeyColumn=1

Fan.Collect.Source(2).Compute(1).Type="LeftConcat"
Fan.Collect.Source(2).Compute(1).Column=2
Fan.Collect.Source(2).Compute(1).String=Column(8)

// Fan Value Table
Fan.Collect.ValueTable=%Fan.Collect.Source(2)%
Fan.Collect.DeviceID=ValueTable.Column(2)
Fan.Collect.Status=ValueTable.Column(3)
Fan.Collect.Speed=ValueTable.Column(4)
Fan.Collect.SpeedPercent=ValueTable.Column(5)
Fan.Collect.StatusInformation=ValueTable.Column(6)


//
// DiskController
//

// Discovery

DiskController.Discovery.Source(1).Type="HTTP"
DiskController.Discovery.Source(1).Method="GET"
DiskController.Discovery.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
DiskController.Discovery.Source(1).Url="%Entry.Column(2)%/InventoryDetails('serverRaidControllers')"
DiskController.Discovery.Source(1).Header=EmbeddedFile(1)
DiskController.Discovery.Source(1).ResultContent="body"
DiskController.Discovery.Source(1).EntryConcatMethod="JSONArrayExtended"

DiskController.Discovery.Source(1).Compute(1).Type="Json2Csv"
DiskController.Discovery.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
DiskController.Discovery.Source(1).Compute(1).Properties="../../Column(2);/Fqdd;/FirmwareVersion;/ServerVirtualDisks;"
DiskController.Discovery.Source(1).Compute(1).Separator=";"


DiskController.Discovery.Source(1).Compute(2).Type="DuplicateColumn"
DiskController.Discovery.Source(1).Compute(2).Column=2

DiskController.Discovery.Source(1).Compute(3).Type="RightConcat"
DiskController.Discovery.Source(1).Compute(3).Column=3
DiskController.Discovery.Source(1).Compute(3).String=Column(4)

//exclude DiskController with empty Firmware version as we have some disks with same fqdd but one with empty firmware

DiskController.Discovery.Source(1).Compute(4).Type="KeepOnlyMatchingLines"
DiskController.Discovery.Source(1).Compute(4).Column=5
DiskController.Discovery.Source(1).Compute(4).RegExp="."


// DiskController Instance Table
// JsonID;<System>;<System+Fqdd/name>(unique);Fqdd;FirmwareVersion;ServerVirtualDisks;
DiskController.Discovery.InstanceTable=%DiskController.Discovery.Source(1)%
DiskController.Discovery.Instance.DeviceID=InstanceTable.Column(3)
DiskController.Discovery.Instance.DisplayID=InstanceTable.Column(4)
DiskController.Discovery.Instance.ControllerNumber=InstanceTable.Column(3)
DiskController.Discovery.Instance.FirmwareVersion=InstanceTable.Column(5)

// Collection
DiskController.Collect.Type="MultiInstance"


DiskController.Collect.Source(1).Type="HTTP"
DiskController.Collect.Source(1).Method="GET"
DiskController.Collect.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
DiskController.Collect.Source(1).Url="%Entry.Column(2)%/InventoryDetails('serverRaidControllers')"
DiskController.Collect.Source(1).Header=EmbeddedFile(1)
DiskController.Collect.Source(1).ResultContent="body"
DiskController.Collect.Source(1).EntryConcatMethod="JSONArrayExtended"

DiskController.Collect.Source(1).Compute(1).Type="Json2Csv"
DiskController.Collect.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
DiskController.Collect.Source(1).Compute(1).Properties="../../Column(2);/Fqdd;/Status;/Status;"
DiskController.Collect.Source(1).Compute(1).Separator=";"

DiskController.Collect.Source(1).Compute(2).Type="Translate"
DiskController.Collect.Source(1).Compute(2).Column=4
DiskController.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

DiskController.Collect.Source(1).Compute(3).Type="Translate"
DiskController.Collect.Source(1).Compute(3).Column=5
DiskController.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

DiskController.Collect.Source(1).Compute(4).Type="DuplicateColumn"
DiskController.Collect.Source(1).Compute(4).Column=2

DiskController.Collect.Source(1).Compute(5).Type="RightConcat"
DiskController.Collect.Source(1).Compute(5).Column=3
DiskController.Collect.Source(1).Compute(5).String=Column(4)

// DiskController Value Table
DiskController.Collect.ValueTable=%DiskController.Collect.Source(1)%
DiskController.Collect.DeviceID=ValueTable.Column(3)
DiskController.Collect.ControllerStatus=ValueTable.Column(5)
DiskController.Collect.StatusInformation=ValueTable.Column(6)


//
// PhysicalDisk
//

// Discovery

PhysicalDisk.Discovery.Source(1).Type="HTTP"
PhysicalDisk.Discovery.Source(1).Method="GET"
PhysicalDisk.Discovery.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
PhysicalDisk.Discovery.Source(1).Url="%Entry.Column(2)%/InventoryDetails('serverArrayDisks')"
PhysicalDisk.Discovery.Source(1).Header=EmbeddedFile(1)
PhysicalDisk.Discovery.Source(1).ResultContent="body"
PhysicalDisk.Discovery.Source(1).EntryConcatMethod="JSONArrayExtended"

PhysicalDisk.Discovery.Source(1).Compute(1).Type="Json2Csv"
PhysicalDisk.Discovery.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
PhysicalDisk.Discovery.Source(1).Compute(1).Properties="../../Column(2);/Id;/DiskNumber;/VendorName;/SerialNumber;/ModelNumber;/Size;/MediaType;/BusType;"
PhysicalDisk.Discovery.Source(1).Compute(1).Separator=";"

//exclude disks with empty disknumber

PhysicalDisk.Discovery.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
PhysicalDisk.Discovery.Source(1).Compute(2).Column=3
PhysicalDisk.Discovery.Source(1).Compute(2).RegExp="."

// PhysicalDisk Instance Table
//1           2       3   4           5             6           7             8     9         10
// EntryKey;BladeId;/Id;/DiskNumber;/VendorName;/SerialNumber;/ModelNumber;/Size;/MediaType;/BusType;
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(1)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(6)
PhysicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(4)
PhysicalDisk.Discovery.Instance.Vendor=InstanceTable.Column(5)
PhysicalDisk.Discovery.Instance.SerialNumber=InstanceTable.Column(6)
PhysicalDisk.Discovery.Instance.Model=InstanceTable.Column(7)
PhysicalDisk.Discovery.Instance.Size=InstanceTable.Column(8)
PhysicalDisk.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(9)
PhysicalDisk.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(10)

// Collection
PhysicalDisk.Collect.Type="MultiInstance"

PhysicalDisk.Collect.Source(1).Type="HTTP"
PhysicalDisk.Collect.Source(1).Method="GET"
PhysicalDisk.Collect.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
PhysicalDisk.Collect.Source(1).Url="%Entry.Column(2)%/InventoryDetails('serverArrayDisks')"
PhysicalDisk.Collect.Source(1).Header=EmbeddedFile(1)
PhysicalDisk.Collect.Source(1).ResultContent="body"
PhysicalDisk.Collect.Source(1).EntryConcatMethod="JsonArray"

PhysicalDisk.Collect.Source(1).Compute(1).Type="Json2Csv"
PhysicalDisk.Collect.Source(1).Compute(1).EntryKey="/InventoryInfo"
PhysicalDisk.Collect.Source(1).Compute(1).Properties="/SerialNumber;/Status;/Status;/RemainingReadWriteEndurance;"
PhysicalDisk.Collect.Source(1).Compute(1).Separator=";"

PhysicalDisk.Collect.Source(1).Compute(2).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(2).Column=3
PhysicalDisk.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

PhysicalDisk.Collect.Source(1).Compute(3).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(3).Column=4
PhysicalDisk.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

PhysicalDisk.Collect.Source(1).Compute(4).Type="Replace"
PhysicalDisk.Collect.Source(1).Compute(4).Column=5
PhysicalDisk.Collect.Source(1).Compute(4).Replace="255"
PhysicalDisk.Collect.Source(1).Compute(4).ReplaceBy=""

// PhysicalDisk Value Table
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(2)
PhysicalDisk.Collect.Status=ValueTable.Column(3)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(4)
PhysicalDisk.Collect.EnduranceRemaining=ValueTable.Column(5)


//
// LogicalDisks
//

// Discovery
LogicalDisk.Discovery.Source(1).Type="HTTP"
LogicalDisk.Discovery.Source(1).Method="GET"
LogicalDisk.Discovery.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
LogicalDisk.Discovery.Source(1).Url="%Entry.Column(2)%/InventoryDetails('serverRaidControllers')"
LogicalDisk.Discovery.Source(1).Header=EmbeddedFile(1)
LogicalDisk.Discovery.Source(1).ResultContent="body"
LogicalDisk.Discovery.Source(1).EntryConcatMethod="JSONArrayExtended"

LogicalDisk.Discovery.Source(1).Compute(1).Type="Json2Csv"
LogicalDisk.Discovery.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo/ServerVirtualDisks"
LogicalDisk.Discovery.Source(1).Compute(1).Properties="../../../Column(2);/Id;/Fqdd;/Layout;/MediaType;/Size;../Fqdd"
LogicalDisk.Discovery.Source(1).Compute(1).Separator=";"

LogicalDisk.Discovery.Source(1).Compute(2).Type="RightConcat"
LogicalDisk.Discovery.Source(1).Compute(2).Column=2
LogicalDisk.Discovery.Source(1).Compute(2).String=Column(8)

// LogicalDisk Instance Table
LogicalDisk.Discovery.InstanceTable=%LogicalDisk.Discovery.Source(1)%
LogicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(3)
LogicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(4)
LogicalDisk.Discovery.Instance.RaidLevel=InstanceTable.Column(5)
LogicalDisk.Discovery.Instance.LogicalDiskType=InstanceTable.Column(6)
LogicalDisk.Discovery.Instance.Size=InstanceTable.Column(7)

LogicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(2)
LogicalDisk.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(2)
LogicalDisk.Discovery.Instance.AttachedToDeviceType="DiskController"

// Collect
LogicalDisk.Collect.Type="MultiInstance"

LogicalDisk.Collect.Source(1).Type="HTTP"
LogicalDisk.Collect.Source(1).Method="GET"
LogicalDisk.Collect.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
LogicalDisk.Collect.Source(1).Url="%Entry.Column(2)%/InventoryDetails('serverRaidControllers')"
LogicalDisk.Collect.Source(1).Header=EmbeddedFile(1)
LogicalDisk.Collect.Source(1).ResultContent="body"
LogicalDisk.Collect.Source(1).EntryConcatMethod="JsonArray"

LogicalDisk.Collect.Source(1).Compute(1).Type="Json2Csv"
LogicalDisk.Collect.Source(1).Compute(1).EntryKey="/InventoryInfo/ServerVirtualDisks"
LogicalDisk.Collect.Source(1).Compute(1).Properties="/Id;/Status;/Status;"
LogicalDisk.Collect.Source(1).Compute(1).Separator=";"

LogicalDisk.Collect.Source(1).Compute(2).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(2).Column=3
LogicalDisk.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

LogicalDisk.Collect.Source(1).Compute(3).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(3).Column=4
LogicalDisk.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

// LogicalDisk Value Table
LogicalDisk.Collect.ValueTable=%LogicalDisk.Collect.Source(1)%
LogicalDisk.Collect.DeviceID=ValueTable.Column(2)
LogicalDisk.Collect.Status=ValueTable.Column(3)
LogicalDisk.Collect.StatusInformation=ValueTable.Column(4)


//
// PowerSupply
//

// Discovery
PowerSupply.Discovery.Source(1).Type="HTTP"
PowerSupply.Discovery.Source(1).Method="GET"
PowerSupply.Discovery.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
PowerSupply.Discovery.Source(1).Url="%Entry.Column(2)%/InventoryDetails('chassisPowerSupplies')"
PowerSupply.Discovery.Source(1).Header=EmbeddedFile(1)
PowerSupply.Discovery.Source(1).ResultContent="body"
PowerSupply.Discovery.Source(1).EntryConcatMethod="JSONArrayExtended"

PowerSupply.Discovery.Source(1).Compute(1).Type="Json2Csv"
PowerSupply.Discovery.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
PowerSupply.Discovery.Source(1).Compute(1).Properties="../../Column(3);/MemberId;/Name;/CapacityWatts;/PowerSupplyType;/EnableState;/MemberId"
PowerSupply.Discovery.Source(1).Compute(1).Separator=";"

PowerSupply.Discovery.Source(1).Compute(2).Type="ExcludeMatchingLines"
PowerSupply.Discovery.Source(1).Compute(2).Column=7
PowerSupply.Discovery.Source(1).Compute(2).RegExp="Absent"

//Exclude power supplies with empty names

PowerSupply.Discovery.Source(1).Compute(3).Type="KeepOnlyMatchingLines"
PowerSupply.Discovery.Source(1).Compute(3).Column=3
PowerSupply.Discovery.Source(1).Compute(3).RegExp="."

//add the enclosure ID to the member id to distinguish each ps slot 1 for each enclosure

PowerSupply.Discovery.Source(1).Compute(4).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(4).Column=3
PowerSupply.Discovery.Source(1).Compute(4).String=Column(2)

//remove /entry/value from jsonid to match it with collect one for the TableJoint

PowerSupply.Discovery.Source(1).Compute(5).Type="Replace"
PowerSupply.Discovery.Source(1).Compute(5).Column=1
PowerSupply.Discovery.Source(1).Compute(5).Replace="/Entry/Value"
PowerSupply.Discovery.Source(1).Compute(5).ReplaceBy=""

// PowerSupply Instance Table
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(3)
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(4)
PowerSupply.Discovery.Instance.PowerSupplyPower=InstanceTable.Column(5)
PowerSupply.Discovery.Instance.PowerSupplyType=InstanceTable.Column(6)
PowerSupply.Discovery.Instance.AttachedToDeviceType="Chassis"
PowerSupply.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(2)


// Collection
PowerSupply.Collect.Type="MultiInstance"

PowerSupply.Collect.Source(1).Type="HTTP"
PowerSupply.Collect.Source(1).Method="GET"
PowerSupply.Collect.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
PowerSupply.Collect.Source(1).Url="%Entry.Column(2)%/InventoryDetails('chassisPowerSupplies')"
PowerSupply.Collect.Source(1).Header=EmbeddedFile(1)
PowerSupply.Collect.Source(1).ResultContent="body"
PowerSupply.Collect.Source(1).EntryConcatMethod="JsonArray"

PowerSupply.Collect.Source(1).Compute(1).Type="Json2Csv"
PowerSupply.Collect.Source(1).Compute(1).EntryKey="/InventoryInfo"
PowerSupply.Collect.Source(1).Compute(1).Properties="/MemberId;/HealthState;/HealthState;"
PowerSupply.Collect.Source(1).Compute(1).Separator=";"

PowerSupply.Collect.Source(1).Compute(2).Type="Translate"
PowerSupply.Collect.Source(1).Compute(2).Column=3
PowerSupply.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

PowerSupply.Collect.Source(1).Compute(3).Type="Translate"
PowerSupply.Collect.Source(1).Compute(3).Column=4
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

//tablejoint with discover

PowerSupply.Collect.Source(2).Type="TableJoint"
PowerSupply.Collect.Source(2).LeftTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.Source(2).RightTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Collect.Source(2).LeftKeyColumn=1
PowerSupply.Collect.Source(2).RightKeyColumn=1

//jsonid;/MemberId;/HealthState;/HealthState;jsonid;../../Column(3);/MemberId;/Name;/CapacityWatts;/PowerSupplyType;/EnableState;/MemberId
PowerSupply.Collect.Source(2).Compute(1).Type="LeftConcat"
PowerSupply.Collect.Source(2).Compute(1).Column=2
PowerSupply.Collect.Source(2).Compute(1).String=Column(6)


// PowerSupply Value Table
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(2)%
PowerSupply.Collect.DeviceID=ValueTable.Column(2)
PowerSupply.Collect.Status=ValueTable.Column(3)
PowerSupply.Collect.StatusInformation=ValueTable.Column(4)


//
// Battery
//

// Discovery
Battery.Discovery.Source(1).Type="HTTP"
Battery.Discovery.Source(1).Method="GET"
Battery.Discovery.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
Battery.Discovery.Source(1).Url="%Entry.Column(2)%/InventoryDetails('subsystemRollupStatus')"
Battery.Discovery.Source(1).Header=EmbeddedFile(1)
Battery.Discovery.Source(1).ResultContent="body"
Battery.Discovery.Source(1).EntryConcatMethod="JSONArrayExtended"

Battery.Discovery.Source(1).Compute(1).Type="Json2Csv"
Battery.Discovery.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
Battery.Discovery.Source(1).Compute(1).Properties="../../Column(2);../../Column(2);/SubsystemName;"
Battery.Discovery.Source(1).Compute(1).Separator=";"

Battery.Discovery.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
Battery.Discovery.Source(1).Compute(2).Column=4
Battery.Discovery.Source(1).Compute(2).RegExp="batteryRollupStatus"

Battery.Discovery.Source(1).Compute(3).Type="RightConcat"
Battery.Discovery.Source(1).Compute(3).Column=3
Battery.Discovery.Source(1).Compute(3).String=Column(4)


// Battery Instance Table
Battery.Discovery.InstanceTable=%Battery.Discovery.Source(1)%
Battery.Discovery.Instance.DeviceID=InstanceTable.Column(3)
Battery.Discovery.Instance.DisplayID="Battery"


// Collection
Battery.Collect.Type="MultiInstance"

Battery.Collect.Source(1).Type="HTTP"
Battery.Collect.Source(1).Method="GET"
Battery.Collect.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
Battery.Collect.Source(1).Url="%Entry.Column(2)%/InventoryDetails('subsystemRollupStatus')"
Battery.Collect.Source(1).Header=EmbeddedFile(1)
Battery.Collect.Source(1).ResultContent="body"
Battery.Collect.Source(1).EntryConcatMethod="JsonArray"

Battery.Collect.Source(1).Compute(1).Type="Json2Csv"
Battery.Collect.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
Battery.Collect.Source(1).Compute(1).Properties="../../Column(2);/Status;/Status;/SubsystemName;"
Battery.Collect.Source(1).Compute(1).Separator=";"

Battery.Collect.Source(1).Compute(2).Type="Translate"
Battery.Collect.Source(1).Compute(2).Column=3
Battery.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

Battery.Collect.Source(1).Compute(3).Type="Translate"
Battery.Collect.Source(1).Compute(3).Column=4
Battery.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

Battery.Collect.Source(1).Compute(4).Type="RightConcat"
Battery.Collect.Source(1).Compute(4).Column=2
Battery.Collect.Source(1).Compute(4).String=Column(5)

// Battery Value Table
Battery.Collect.ValueTable=%Battery.Collect.Source(1)%
Battery.Collect.DeviceID=ValueTable.Column(2)
Battery.Collect.Status=ValueTable.Column(3)
Battery.Collect.StatusInformation=ValueTable.Column(4)


//
// Temperature
//

// Discovery
Temperature.Discovery.Source(1).Type="HTTP"
Temperature.Discovery.Source(1).Method="GET"
Temperature.Discovery.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
Temperature.Discovery.Source(1).Url="%Entry.Column(2)%/InventoryDetails('chassisTemperatureList')"
Temperature.Discovery.Source(1).Header=EmbeddedFile(1)
Temperature.Discovery.Source(1).ResultContent="body"
Temperature.Discovery.Source(1).EntryConcatMethod="JSONArrayExtended"

Temperature.Discovery.Source(1).Compute(1).Type="Json2Csv"
Temperature.Discovery.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
Temperature.Discovery.Source(1).Compute(1).Properties="../../Column(3);/MemberId;/SensorName;/UpperThresholdNoncritical;/UpperThresholdCritical;/ReadingCelsius;/MemberId"
Temperature.Discovery.Source(1).Compute(1).Separator=";"

//remove temperature with empty sensor Name

Temperature.Discovery.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
Temperature.Discovery.Source(1).Compute(2).Column=4
Temperature.Discovery.Source(1).Compute(2).RegExp="."

//remove temperature with empty Reading

Temperature.Discovery.Source(1).Compute(3).Type="KeepOnlyMatchingLines"
Temperature.Discovery.Source(1).Compute(3).Column=7
Temperature.Discovery.Source(1).Compute(3).RegExp="."

Temperature.Discovery.Source(1).Compute(4).Type="LeftConcat"
Temperature.Discovery.Source(1).Compute(4).Column=3
Temperature.Discovery.Source(1).Compute(4).String=Column(2)

//remove /entry/value from jsonid to use it in the above tablejoint
Temperature.Discovery.Source(1).Compute(5).Type="Replace"
Temperature.Discovery.Source(1).Compute(5).Column=1
Temperature.Discovery.Source(1).Compute(5).Replace="/Entry/Value"
Temperature.Discovery.Source(1).Compute(5).ReplaceBy=""

// Temperature Instance Table
// JsonId;<System>;MemberId;SensorName;
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(3)
Temperature.Discovery.Instance.DisplayID=InstanceTable.Column(4)
Temperature.Discovery.Instance.AttachedToDeviceType="Chassis"
Temperature.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(2)

// Collection
Temperature.Collect.Type="MultiInstance"

Temperature.Collect.Source(1).Type="HTTP"
Temperature.Collect.Source(1).Method="GET"
Temperature.Collect.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
Temperature.Collect.Source(1).Url="%Entry.Column(2)%/InventoryDetails('chassisTemperatureList')"
Temperature.Collect.Source(1).Header=EmbeddedFile(1)
Temperature.Collect.Source(1).ResultContent="body"
Temperature.Collect.Source(1).EntryConcatMethod="JsonArray"

Temperature.Collect.Source(1).Compute(1).Type="Json2Csv"
Temperature.Collect.Source(1).Compute(1).EntryKey="/InventoryInfo"
Temperature.Collect.Source(1).Compute(1).Properties="/MemberId;/Status;/ReadingCelsius;/Status;"
Temperature.Collect.Source(1).Compute(1).Separator=";"

Temperature.Collect.Source(1).Compute(2).Type="Translate"
Temperature.Collect.Source(1).Compute(2).Column=3
Temperature.Collect.Source(1).Compute(2).TranslationTable="StatusTranslationTable"

Temperature.Collect.Source(1).Compute(3).Type="Translate"
Temperature.Collect.Source(1).Compute(3).Column=5
Temperature.Collect.Source(1).Compute(3).TranslationTable="StatusInformationTranslationTable"

//as fan and psu joint with temp discovery to compute id with enclosure id
//jsonid;/MemberId;/Status;/ReadingCelsius;/Status;jsonid;../../Column(3);/MemberId;/SensorName;/UpperThresholdNoncritical;/UpperThresholdCritical;/ReadingCelsius;Memberid
Temperature.Collect.Source(2).Type="TableJoint"
Temperature.Collect.Source(2).LeftTable=%Temperature.Collect.Source(1)%
Temperature.Collect.Source(2).RightTable=%Temperature.Discovery.Source(1)%
Temperature.Collect.Source(2).LeftKeyColumn=1
Temperature.Collect.Source(2).RightKeyColumn=1

Temperature.Collect.Source(2).Compute(1).Type="LeftConcat"
Temperature.Collect.Source(2).Compute(1).Column=2
Temperature.Collect.Source(2).Compute(1).String=Column(7)

// Temperature Value Table
Temperature.Collect.ValueTable=%Temperature.Collect.Source(2)%
Temperature.Collect.DeviceID=ValueTable.Column(2)
Temperature.Collect.Status=ValueTable.Column(3)
Temperature.Collect.Temperature=ValueTable.Column(4)
Temperature.Collect.StatusInformation=ValueTable.Column(5)


//
// NetworkCard
//

// Discovery
NetworkCard.Discovery.Source(1).Type="HTTP"
NetworkCard.Discovery.Source(1).Method="GET"
NetworkCard.Discovery.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
NetworkCard.Discovery.Source(1).Url="%Entry.Column(2)%/InventoryDetails('serverNetworkInterfaces')"
NetworkCard.Discovery.Source(1).Header=EmbeddedFile(1)
NetworkCard.Discovery.Source(1).ResultContent="body"
NetworkCard.Discovery.Source(1).EntryConcatMethod="JSONArrayExtended"

NetworkCard.Discovery.Source(1).Compute(1).Type="Json2Csv"
NetworkCard.Discovery.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo/Ports/Partitions"
NetworkCard.Discovery.Source(1).Compute(1).Properties="../../../../Column(2);/Fqdd;/PermanentMacAddress;../ProductName;../../VendorName;/FcoeMode;/MaxBandwidth;"
NetworkCard.Discovery.Source(1).Compute(1).Separator=";"

NetworkCard.Discovery.Source(1).Compute(2).Type="Translate"
NetworkCard.Discovery.Source(1).Compute(2).Column=7
NetworkCard.Discovery.Source(1).Compute(2).TranslationTable="TypeTranslationTable"

NetworkCard.Discovery.Source(1).Compute(3).Type="Translate"
NetworkCard.Discovery.Source(1).Compute(3).Column=9
NetworkCard.Discovery.Source(1).Compute(3).TranslationTable="LinkSpeedDeactivationTranslationTable"

LinkSpeedDeactivationTranslationTable(0)=""
LinkSpeedDeactivationTranslationTable(Default)="True"

TypeTranslationTable("Enabled")="FC;WWN"
TypeTranslationTable("Disabled")="Ethernet;MAC"

NetworkCard.Discovery.Source(2).Type="HTTP"
NetworkCard.Discovery.Source(2).Method="GET"
NetworkCard.Discovery.Source(2).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
NetworkCard.Discovery.Source(2).Url="%Entry.Column(2)%/InventoryDetails('serverFcCards')"
NetworkCard.Discovery.Source(2).Header=EmbeddedFile(1)
NetworkCard.Discovery.Source(2).ResultContent="body"
NetworkCard.Discovery.Source(2).EntryConcatMethod="JSONArrayExtended"

NetworkCard.Discovery.Source(2).Compute(1).Type="Json2Csv"
NetworkCard.Discovery.Source(2).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
NetworkCard.Discovery.Source(2).Compute(1).Properties="../../Column(2);/Fqdd;/Wwn;/DeviceName;/VendorName;/PortSpeed;"
NetworkCard.Discovery.Source(2).Compute(1).Separator=";"

NetworkCard.Discovery.Source(2).Compute(2).Type="RightConcat"
NetworkCard.Discovery.Source(2).Compute(2).Column=6
NetworkCard.Discovery.Source(2).Compute(2).String=";FC;WWN"

NetworkCard.Discovery.Source(2).Compute(3).Type="Replace"
NetworkCard.Discovery.Source(2).Compute(3).Column=9
NetworkCard.Discovery.Source(2).Compute(3).Replace=" Gbps"
NetworkCard.Discovery.Source(2).Compute(3).Replaceby="000"

NetworkCard.Discovery.Source(2).Compute(4).Type="Translate"
NetworkCard.Discovery.Source(2).Compute(4).Column=9
NetworkCard.Discovery.Source(2).Compute(4).TranslationTable="LinkSpeedDeactivationTranslationTable"

NetworkCard.Discovery.Source(3).Type="TableUnion"
NetworkCard.Discovery.Source(3).Table1=%NetworkCard.Discovery.Source(1)%
NetworkCard.Discovery.Source(3).Table2=%NetworkCard.Discovery.Source(2)%

//Remove network cards with empty Fqdd

NetworkCard.Discovery.Source(3).Compute(1).Type="KeepOnlyMatchingLines"
NetworkCard.Discovery.Source(3).Compute(1).Column=3
NetworkCard.Discovery.Source(3).Compute(1).RegExp="."

// NetworkCard Instance Table
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(3)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(4)
NetworkCard.Discovery.Instance.DisplayID=InstanceTable.Column(3)
NetworkCard.Discovery.Instance.PhysicalAddress=InstanceTable.Column(4)
NetworkCard.Discovery.Instance.Model=InstanceTable.Column(5)
NetworkCard.Discovery.Instance.Vendor=InstanceTable.Column(6)
NetworkCard.Discovery.Instance.DeviceType=InstanceTable.Column(7)
NetworkCard.Discovery.Instance.PhysicalAddressType=InstanceTable.Column(8)
NetworkCard.Discovery.Instance.ParameterActivation.LinkSpeed=InstanceTable.Column(9)


// Collection
NetworkCard.Collect.Type="MultiInstance"

NetworkCard.Collect.Source(1).Type="HTTP"
NetworkCard.Collect.Source(1).Method="GET"
NetworkCard.Collect.Source(1).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
NetworkCard.Collect.Source(1).Url="%Entry.Column(2)%/InventoryDetails('serverNetworkInterfaces')"
NetworkCard.Collect.Source(1).Header=EmbeddedFile(1)
NetworkCard.Collect.Source(1).ResultContent="body"
NetworkCard.Collect.Source(1).EntryConcatMethod="JSONArrayExtended"

NetworkCard.Collect.Source(1).Compute(1).Type="Json2Csv"
NetworkCard.Collect.Source(1).Compute(1).EntryKey="/Entry/Value/InventoryInfo/Ports/Partitions"
NetworkCard.Collect.Source(1).Compute(1).Properties="/PermanentMACAddress;../LinkSpeed;../LinkStatus;"
NetworkCard.Collect.Source(1).Compute(1).Separator=";"

NetworkCard.Collect.Source(1).Compute(2).Type="DuplicateColumn"
NetworkCard.Collect.Source(1).Compute(2).Column=4

NetworkCard.Collect.Source(1).Compute(3).Type="Translate"
NetworkCard.Collect.Source(1).Compute(3).Column=4
NetworkCard.Collect.Source(1).Compute(3).TranslationTable="FCLinkStatusTranslationTable"

NetworkCard.Collect.Source(2).Type="HTTP"
NetworkCard.Collect.Source(2).Method="GET"
NetworkCard.Collect.Source(2).ExecuteForEachEntryOf=%Enclosure.Discovery.Source(2)%
NetworkCard.Collect.Source(2).Url="%Entry.Column(2)%/InventoryDetails('serverFcCards')"
NetworkCard.Collect.Source(2).Header=EmbeddedFile(1)
NetworkCard.Collect.Source(2).ResultContent="body"
NetworkCard.Collect.Source(2).EntryConcatMethod="JSONArrayExtended"

NetworkCard.Collect.Source(2).Compute(1).Type="Json2Csv"
NetworkCard.Collect.Source(2).Compute(1).EntryKey="/Entry/Value/InventoryInfo"
NetworkCard.Collect.Source(2).Compute(1).Properties="/Wwn;/PortSpeed;/LinkStatus;"
NetworkCard.Collect.Source(2).Compute(1).Separator=";"

NetworkCard.Collect.Source(2).Compute(2).Type="DuplicateColumn"
NetworkCard.Collect.Source(2).Compute(2).Column=4

NetworkCard.Collect.Source(2).Compute(3).Type="Replace"
NetworkCard.Collect.Source(2).Compute(3).Column=3
NetworkCard.Collect.Source(2).Compute(3).Replace=" Gbps"
NetworkCard.Collect.Source(2).Compute(3).Replaceby="000"

NetworkCard.Collect.Source(2).Compute(4).Type="Translate"
NetworkCard.Collect.Source(2).Compute(4).Column=4
NetworkCard.Collect.Source(2).Compute(4).TranslationTable="FcLinkStatusTranslationTable"

NetworkCard.Collect.Source(2).Compute(5).Type="Replace"
NetworkCard.Collect.Source(2).Compute(5).Column=3
NetworkCard.Collect.Source(2).Compute(5).Replace="No Link"
NetworkCard.Collect.Source(2).Compute(5).ReplaceBy="0"

NetworkCard.Collect.Source(3).Type="TableUnion"
NetworkCard.Collect.Source(3).Table1=%NetworkCard.Collect.Source(1)%
NetworkCard.Collect.Source(3).Table2=%NetworkCard.Collect.Source(2)%

FcLinkStatusTranslationTable("Up")="OK"
FcLinkStatusTranslationTable(Default)="WARN"

// NetworkCard Value Table
NetworkCard.Collect.ValueTable=%NetworkCard.Collect.Source(3)%
NetworkCard.Collect.DeviceID=ValueTable.Column(2)
NetworkCard.Collect.StatusInformation=ValueTable.Column(5)
NetworkCard.Collect.LinkStatus=ValueTable.Column(4)
NetworkCard.Collect.LinkSpeed=ValueTable.Column(3)

StatusTranslationTable(1000)="OK"
StatusTranslationTable(2000)="UNKNOWN"
StatusTranslationTable(3000)="WARN"
StatusTranslationTable(4000)="ALARM"
StatusTranslationTable(5000)="UNKNOWN"
StatusTranslationTable(Default)="ALARM"

StatusInformationTranslationTable(1000)="The device is running normal."
StatusInformationTranslationTable(2000)="Status is not determined."
StatusInformationTranslationTable(3000)="The device has warning state."
StatusInformationTranslationTable(4000)="The device is in critical state."
StatusInformationTranslationTable(5000)="The device/group does not have a valid status."
StatusInformationTranslationTable(Default)="Alarm"

/////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(1) = Headers
/////////////////////////////////////////////////////////
EmbeddedFile(1):
Accept:application/json
EmbeddedFile(1).End
/////////////////////////////////////////////////////////////////////
