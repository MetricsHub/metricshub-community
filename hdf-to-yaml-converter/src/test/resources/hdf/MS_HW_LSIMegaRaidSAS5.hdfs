//
//
//                 C o n n e c t o r
//
//                       f o r
//
//                 Hardware Sentry
//
//               by Sentry Software (c)
//
//             MS_HW_LSIMegaRaidSAS5.hdf
//
//      Supports: LSI MegaRAID SAS disk controllers
//                (through the LSI MegaRAID SAS SNMP sub-agent)
//
//

// HEADER

hdf.DisplayName="LsiLogic MegaRAID SAS (Newer Controllers)"
hdf.TypicalPlatform="Fujitsu-Siemens PRIMERGY"
hdf.ReliesOn="LSI MegaRAID SAS SNMP Agent"
hdf.Version="1.0"
hdf.Comments="This connector provides disk monitoring through the LsiLogic MegaRAID SAS SNMP sub-agent which supports newer LSI MegaRaid SAS RAID controllers."
hdf.RemoteSupport="true"
hdf.AppliesToOS="NT,Linux"
hdf.Supersedes="MS_HW_LSIMegaCliWindows.hdf"

// DETECTION

// Simply check that the LSI MegaRaid SAS MIB is populated with some disks
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.3582.5.1.4.2.1.2.1"


// DISK CONTROLLERS

// LSI MegaRAID SAS controllers table
// DeviceID;ControllerNumber;Interface;FirmwareVersion;DriverVersion
DiskController.Discovery.Source(1).Type="SNMPTable"
DiskController.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.3582.5.1.4.1.1.3.1"
DiskController.Discovery.Source(1).SnmpTableSelectColumns="ID,1,9,14,15"

// Add "MegaRaid " to the Interface column so that it will look like a model
// DeviceID;ControllerNumber;Model;FirmwareVersion;DriverVersion
DiskController.Discovery.Source(1).Compute(1).Type="LeftConcat"
DiskController.Discovery.Source(1).Compute(1).Column="3"
DiskController.Discovery.Source(1).Compute(1).String="MegaRaid "

// The Instance table...
DiskController.Discovery.InstanceTable=%DiskController.Discovery.Source(1)%
DiskController.Discovery.Instance.DeviceID=InstanceTable.Column(1)
DiskController.Discovery.Instance.ControllerNumber=InstanceTable.Column(2)
DiskController.Discovery.Instance.Vendor="LSI"
DiskController.Discovery.Instance.Model=InstanceTable.Column(3)
DiskController.Discovery.Instance.FirmwareVersion=InstanceTable.Column(4)
DiskController.Discovery.Instance.DriverVersion=InstanceTable.Column(5)

//
// PHYSICAL DISKS
//

//
// Discovery

// Source(1) = physicalDriveTable SNMP table
// DeviceID;Type;SizeKB;ControllerNumber;Vendor
PhysicalDisk.Discovery.Source(1).Type="SNMPTable"
PhysicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.3582.5.1.4.2.1.2.1"
PhysicalDisk.Discovery.Source(1).SnmpTableSelectColumns="ID,4,15,22,24"

// Keep only disks
// DeviceID;Type;SizeKB;ControllerNumber;Vendor
PhysicalDisk.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
PhysicalDisk.Discovery.Source(1).Compute(1).Column="2"
PhysicalDisk.Discovery.Source(1).Compute(1).ValueList="0"

// Convert size from KB to bytes
// DeviceID;Type;Size;ControllerNumber;Vendor
PhysicalDisk.Discovery.Source(1).Compute(2).Type="Multiply"
PhysicalDisk.Discovery.Source(1).Compute(2).Column="3"
PhysicalDisk.Discovery.Source(1).Compute(2).MultiplyBy="1048576"

// InstanceTable = Source(1)
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(1)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PhysicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(4)
PhysicalDisk.Discovery.Instance.Size=InstanceTable.Column(3)
PhysicalDisk.Discovery.Instance.Vendor=InstanceTable.Column(5)

//
// Collect

// This is a multi-instance collect (execute the collect for each disk)
PhysicalDisk.Collect.Type="MultiInstance"

// Source(1) = the physical disk table
// ID;mediaErrors;otherErrors;PredictedFailureErrors;state
PhysicalDisk.Collect.Source(1).Type="SnmpTable"
PhysicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.3582.5.1.4.2.1.2.1"
PhysicalDisk.Collect.Source(1).SnmpTableSelectColumns="ID,7,8,9,10"

// Duplicate the state column
// ID;mediaErrors;otherErrors;PredictedFailureErrors;state;state
PhysicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PhysicalDisk.Collect.Source(1).Compute(1).Column="5"

// translate the snmp state into PATROL status
// ID;mediaErrors;otherErrors;PredictedFailureErrors;PATROLStatus;state
PhysicalDisk.Collect.Source(1).Compute(2).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(2).Column="5"
PhysicalDisk.Collect.Source(1).Compute(2).TranslationTable="PhysicalDiskStatusTranslationTable"

// translate the snmp state into a more readable string
// ID;mediaErrors;otherErrors;PredictedFailureErrors;PATROLStatus;statusInformation
PhysicalDisk.Collect.Source(1).Compute(3).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(3).Column="6"
PhysicalDisk.Collect.Source(1).Compute(3).TranslationTable="PhysicalDiskStatusInformationTranslationTable"

// Add up errors
// ID;totalErrorCount;otherErrors;PredictedFailureErrors;PATROLStatus;statusInformation
PhysicalDisk.Collect.Source(1).Compute(4).Type="Add"
PhysicalDisk.Collect.Source(1).Compute(4).Column="2"
PhysicalDisk.Collect.Source(1).Compute(4).Add=Column(3)
PhysicalDisk.Collect.Source(1).Compute(5).Type="Add"
PhysicalDisk.Collect.Source(1).Compute(5).Column="2"
PhysicalDisk.Collect.Source(1).Compute(5).Add=Column(4)

// ValueTable = Source(1)
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(1)
PhysicalDisk.Collect.Status=ValueTable.Column(5)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(6)
PhysicalDisk.Collect.ErrorCount=ValueTable.Column(2)

// The PhysicalDiskStatusTranslationTable
PhysicalDiskStatusTranslationTable(0)="OK"
PhysicalDiskStatusTranslationTable(1)="WARN"
PhysicalDiskStatusTranslationTable(2)="OK"
PhysicalDiskStatusTranslationTable(16)="WARN"
PhysicalDiskStatusTranslationTable(17)="ALARM"
PhysicalDiskStatusTranslationTable(20)="WARN"
PhysicalDiskStatusTranslationTable(24)="OK"
PhysicalDiskStatusTranslationTable(Default)="UNKNOWN"

// The PhysicalDiskStatusInformationTranslationTable
PhysicalDiskStatusInformationTranslationTable(0)="Unconfigured"
PhysicalDiskStatusInformationTranslationTable(1)="Failed (Unconfigured)"
PhysicalDiskStatusInformationTranslationTable(2)="Hotspare"
PhysicalDiskStatusInformationTranslationTable(16)="Offline"
PhysicalDiskStatusInformationTranslationTable(17)="Failed"
PhysicalDiskStatusInformationTranslationTable(20)="Rebuilding"
PhysicalDiskStatusInformationTranslationTable(24)=""
PhysicalDiskStatusInformationTranslationTable(Default)="Unknown Status"


//
// LOGICAL DISKS
//

//
// Discovery

// Source(1) = the snmp virtualDriveTable
// DeviceID;SizeMB;RAIDLevel;ControllerNumber
LogicalDisk.Discovery.Source(1).Type="SnmpTable"
LogicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.3582.5.1.4.3.1.2.1"
LogicalDisk.Discovery.Source(1).SnmpTableSelectColumns="ID,2,11,20"

// Convert size in bytes
// DeviceID;Size;RAIDLevel;ControllerNumber
LogicalDisk.Discovery.Source(1).Compute(1).Type="Multiply"
LogicalDisk.Discovery.Source(1).Compute(1).Column="2"
LogicalDisk.Discovery.Source(1).Compute(1).MultiplyBy="1048576"

// The instance table
LogicalDisk.Discovery.InstanceTable=%LogicalDisk.Discovery.Source(1)%
LogicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
LogicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(4)
LogicalDisk.Discovery.Instance.Size=InstanceTable.Column(2)
LogicalDisk.Discovery.Instance.RaidLevel=InstanceTable.Column(3)

//
// Collect

// Type = MultiInstance
LogicalDisk.Collect.Type="MultiInstance"

// Source(1) = the status of the drive in the logical drive snmp table
// DeviceID;Status
LogicalDisk.Collect.Source(1).Type="SnmpTable"
LogicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.3582.5.1.4.3.1.2.1"
LogicalDisk.Collect.Source(1).SnmpTableSelectColumns="ID,5"

// Duplicate the status column
// DeviceID;Status;Status
LogicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
LogicalDisk.Collect.Source(1).Compute(1).Column="2"

// translate the snmp status into PATROL status
// DeviceID;PATROLStatus;Status
LogicalDisk.Collect.Source(1).Compute(2).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(2).Column="2"
LogicalDisk.Collect.Source(1).Compute(2).TranslationTable="LogicalDiskStatusTranslationTable"

// translate the snmp status into a more readable string
// DeviceID;PATROLStatus;StatusInformation
LogicalDisk.Collect.Source(1).Compute(3).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(3).Column="3"
LogicalDisk.Collect.Source(1).Compute(3).TranslationTable="LogicalDiskStatusInformationTranslationTable"

// ValueTable = Source(1)
LogicalDisk.Collect.ValueTable=%LogicalDisk.Collect.Source(1)%
LogicalDisk.Collect.DeviceID=ValueTable.Column(1)
LogicalDisk.Collect.Status=ValueTable.Column(2)
LogicalDisk.Collect.StatusInformation=ValueTable.Column(3)

// The LogicalDiskStatusTranslationTable
LogicalDiskStatusTranslationTable(0)="ALARM"
LogicalDiskStatusTranslationTable(1)="WARN"
LogicalDiskStatusTranslationTable(2)="WARN"
LogicalDiskStatusTranslationTable(3)="OK"
LogicalDiskStatusTranslationTable(Default)="UNKNOWN"

// The LogicalDiskStatusInformationTranslationTable
LogicalDiskStatusInformationTranslationTable(0)="Offline"
LogicalDiskStatusInformationTranslationTable(1)="Partially Degraded"
LogicalDiskStatusInformationTranslationTable(2)="Degraded"
LogicalDiskStatusInformationTranslationTable(3)=""
LogicalDiskStatusInformationTranslationTable(Default)="Unknown Status"

