////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//
//      Supports: HP Procurve (HP-ICF-CHASSIS)
//                Connects to a SNMP agent
//


//
// Header
//

hdf.DisplayName="HP Procurve (SNMP)"
hdf.TypicalPlatform="HP Procurve"
hdf.ReliesOn="HP Procurve (HP-ICF-CHASSIS)"
hdf.Version="1.0"
hdf.Comments="This connector discovers the enclosure, fans, power supplies, temperatures, etc. of HP Procurve Network Switches."
hdf.RemoteSupport="true"
hdf.LocalSupport="false"
hdf.AppliesToOS="Network"

hdf.Supersedes="MS_HW_GenericSwitchEnclosure.hdf,MS_HW_MIB2.hdf"

#include MS_HW_MIB2.hhdf

//
// DETECTION
//

// Check that there are HP Sensors OIDs
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.11.2.14.11.1.2.6.1"

//
// Enclosure
//
//Identifier, display, Firmware, bios
Enclosure.Discovery.Source(1).Type="SnmpTable"
Enclosure.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.11.2.14.11.1.2.4.1"
Enclosure.Discovery.Source(1).SnmpTableSelectColumns="1,4,4,4"

//replace all the spaces in descrition with separator to use them in instance table
/// eg: HP J9265A Switch 6600ml-24XG, revision K.15.09.0012, ROM K.15.29 (/ws/swbuildm/K_rel_hartford_qaoff/code/build/btm(K_rel_hartford_qaoff)) (Formerly ProCurve)
//id, description
//Identifier, display, Firmware, bios
Enclosure.Discovery.Source(1).Compute(1).Type="Extract"
Enclosure.Discovery.Source(1).Compute(1).Column=2
Enclosure.Discovery.Source(1).Compute(1).SubColumn=1
Enclosure.Discovery.Source(1).Compute(1).SubSeparators=","

//Identifier, display, Firmware, bios
Enclosure.Discovery.Source(1).Compute(2).Type="Extract"
Enclosure.Discovery.Source(1).Compute(2).Column=3
Enclosure.Discovery.Source(1).Compute(2).SubColumn=2
Enclosure.Discovery.Source(1).Compute(2).SubSeparators=","

Enclosure.Discovery.Source(1).Compute(3).Type="LeftConcat"
Enclosure.Discovery.Source(1).Compute(3).Column=3
Enclosure.Discovery.Source(1).Compute(3).String="Firmware: "

//Identifier, display, Firmware, bios
Enclosure.Discovery.Source(1).Compute(4).Type="Extract"
Enclosure.Discovery.Source(1).Compute(4).Column=4
Enclosure.Discovery.Source(1).Compute(4).SubColumn=3
Enclosure.Discovery.Source(1).Compute(4).SubSeparators=","




//Get the sensor list to use them in other sources
//id,status,description,
Enclosure.Discovery.Source(2).Type="SnmpTable"
Enclosure.Discovery.Source(2).SnmpTableOid="1.3.6.1.4.1.11.2.14.11.1.2.6.1"
Enclosure.Discovery.Source(2).SnmpTableSelectColumns="1,4,7"

//remove keyword sensors from description
//id, Status, description
Enclosure.Discovery.Source(2).Compute(1).Type="Replace"
Enclosure.Discovery.Source(2).Compute(1).Column=3
Enclosure.Discovery.Source(2).Compute(1).Replace="Sensor"
Enclosure.Discovery.Source(2).Compute(1).ReplaceBy=""

//Exclude sensors marked as not prosent
//id, Status, desciption
Enclosure.Discovery.Source(2).Compute(2).Type="ExcludeMatchingLines"
Enclosure.Discovery.Source(2).Compute(2).Column=2
Enclosure.Discovery.Source(2).Compute(2).ValueList="5"


//Identifier, display, Firmware, bios
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Enclosure.Discovery.Instance.DisplayID=InstanceTable.Column(2)
Enclosure.Discovery.Instance.Type="Switch"
Enclosure.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(3)
Enclosure.Discovery.Instance.BIOSVersion=InstanceTable.Column(4)

// No collect for Enclosure.

//collect for all the sources

//Get the sensor list to use them in other sources
//id,patrolstatus,statusinformation,
Enclosure.Collect.Source(1).Type="SnmpTable"
Enclosure.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.11.2.14.11.1.2.6.1"
Enclosure.Collect.Source(1).SnmpTableSelectColumns="1,4,4"

Enclosure.Collect.Source(1).Compute(1).Type="Translate"
Enclosure.Collect.Source(1).Compute(1).Column=2
Enclosure.Collect.Source(1).Compute(1).TranslationTable="StatusTranslationTable"

Enclosure.Collect.Source(1).Compute(2).Type="Translate"
Enclosure.Collect.Source(1).Compute(2).Column=3
Enclosure.Collect.Source(1).Compute(2).TranslationTable="StatusInformationTranslationTable"

//
// PowerSupply
//

PowerSupply.Discovery.Source(1)=%Enclosure.Discovery.Source(2)%

//keep only power supplies
//id, Status, description
PowerSupply.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
PowerSupply.Discovery.Source(1).Compute(1).Column=3
PowerSupply.Discovery.Source(1).Compute(1).RegExp="Power Supply"

// Instance Table
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(3)


// Collect

// Collect type = multi-instance
PowerSupply.Collect.Type="MultiInstance"

PowerSupply.Collect.Source(1)=%Enclosure.Collect.Source(1)%

// Instance Table
//id,patrolstatus,statusinformation,
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)


//
// Fan
//

Fan.Discovery.Source(1)=%Enclosure.Discovery.Source(2)%

//keep only power supplies
//id, Status, description
Fan.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Fan.Discovery.Source(1).Compute(1).Column=3
Fan.Discovery.Source(1).Compute(1).RegExp="Fan"

// Instance Table
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(3)


// Collect

// Collect type = multi-instance
Fan.Collect.Type="MultiInstance"

Fan.Collect.Source(1)=%Enclosure.Collect.Source(1)%

// Instance Table
//id,patrolstatus,statusinformation,
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(2)
Fan.Collect.StatusInformation=ValueTable.Column(3)


//
// Temperature
//

//ID, Name, threshold
Temperature.Discovery.Source(1).Type="SnmpTable"
Temperature.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.11.2.14.11.1.2.8.1.1"
Temperature.Discovery.Source(1).SnmpTableSelectColumns="ID,2,7"

//remove celcius from current reading
Temperature.Discovery.Source(1).Compute(1).Type="Replace"
Temperature.Discovery.Source(1).Compute(1).Column=3
Temperature.Discovery.Source(1).Compute(1).Replace="C"
Temperature.Discovery.Source(1).Compute(1).ReplaceBy=""

// Instance Table
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Temperature.Discovery.Instance.DisplayID=InstanceTable.Column(2)
Temperature.Discovery.Instance.AlarmThreshold=InstanceTable.Column(3)

// Collect

// Collect type = multi-instance
Temperature.Collect.Type="MultiInstance"

// ID;current;Status (based on overtemp);StatusInformation
Temperature.Collect.Source(1).Type="SnmpTable"
Temperature.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.11.2.14.11.1.2.8.1.1"
Temperature.Collect.Source(1).SnmpTableSelectColumns="ID,3,6,6"

//remove celcius from current reading
Temperature.Collect.Source(1).Compute(1).Type="Replace"
Temperature.Collect.Source(1).Compute(1).Column=2
Temperature.Collect.Source(1).Compute(1).Replace="C"
Temperature.Collect.Source(1).Compute(1).ReplaceBy=""

Temperature.Collect.Source(1).Compute(2).Type="Translate"
Temperature.Collect.Source(1).Compute(2).Column=3
Temperature.Collect.Source(1).Compute(2).TranslationTable="TempStatusTranslationTable"

Temperature.Collect.Source(1).Compute(3).Type="Translate"
Temperature.Collect.Source(1).Compute(3).Column=4
Temperature.Collect.Source(1).Compute(3).TranslationTable="TempStatusInformationTranslationTable"

// Instance Table
Temperature.Collect.ValueTable=%Temperature.Collect.Source(1)%
Temperature.Collect.DeviceID=ValueTable.Column(1)
Temperature.Collect.Temperature=ValueTable.Column(2)
Temperature.Collect.Status=ValueTable.Column(3)
Temperature.Collect.StatusInformation=ValueTable.Column(4)


//add network card discovery present in mib2.hdf and not in mib2.hhdf
// PortID;Description;TypeCode;MacAddress;AdminStatus;ID;Name;Alias;
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(3)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(1)
NetworkCard.Discovery.Instance.DisplayID=InstanceTable.Column(7)
NetworkCard.Discovery.Instance.PhysicalAddress=InstanceTable.Column(4)
NetworkCard.Discovery.Instance.PhysicalAddressType="MAC"
NetworkCard.Discovery.Instance.DeviceType=InstanceTable.Column(3)

//	unknown(1), bad(2), warning(3), good(4), notPresent(5)
StatusTranslationTable(1)="UNKNOWN"
StatusTranslationTable(2)="ALARM"
StatusTranslationTable(3)="WARN"
StatusTranslationTable(4)="OK"
StatusTranslationTable(5)="ALARM"
StatusTranslationTable(Default)="UNKNOWN"

StatusInformationTranslationTable(1)="Unknow"
StatusInformationTranslationTable(2)="Bad"
StatusInformationTranslationTable(3)="Warning"
StatusInformationTranslationTable(4)="Good"
StatusInformationTranslationTable(5)="Not Present"
StatusInformationTranslationTable(Default)="Unknown Status"

//boolean that says if temp is over threshold or not

//yes(1), no(2)
TempStatusTranslationTable(2)="OK"
TempStatusTranslationTable(1)="ALARM"

TempStatusInformationTranslationTable(2)="Ok"
TempStatusInformationTranslationTable(1)="Over Heating"
