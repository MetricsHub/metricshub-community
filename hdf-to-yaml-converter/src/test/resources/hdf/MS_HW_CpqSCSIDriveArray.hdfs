//
//
//                 C O N N E C T O R
//
//                       f o r
//
//                 Hardware Sentry
//
//               by Sentry Software (c)
//
//             MS_HW_CpqSCSIDriveArrayNT.hdf
//
//      Supports: The Compaq Non-RAID Drive Arrays monitoring
//      Connects to: hp Insight Manager (Storage Management) under Linux and Tru64
//
//

// Remarks:
// This connector only takes into account the Compaq SCSI disk controllers.
// We're excluding Windows platforms since SCSI disks on Windows are monitored
// through the WBEM layer

// HEADER

hdf.DisplayName="HP Insight Management Agent - SCSI Storage"
hdf.TypicalPlatform="HP ProLiant"
hdf.ReliesOn="HP Insight Management Agents"
hdf.Version="1.0"
hdf.Comments="This connector monitors the HP/Compaq SCSI disk by connecting to the Storage Management SNMP sub-agent of the HP Insight Manager agent."
hdf.RemoteSupport="true"
hdf.AppliesToOS="NT,Linux,OSF1,VMS,OOB,Solaris"
hdf.Supersedes="MS_HW_WBEMGenDiskNT.hdf,MS_HW_SmartMonLinux.hdf,MS_HW_SunRaidctl.hdf,MS_HW_SunIostat.hdf,MS_HW_SunIostatNonSun.hdf,MS_HW_SunTapeDrives.hdf"

//
// DETECTION
//

// Exclude Windows, because on Windows, SCSI disks are monitored through
// the WBEM layer
Detection.Criteria(1).Type="OS"
Detection.Criteria(1).Exclude="NT"

Detection.Criteria(2).Type="SNMP"
Detection.Criteria(2).SnmpGetNext="1.3.6.1.4.1.232.5.2.4.1.1"

//////////////////////////////////////////////
//   ***  D I S K   C O N T R O L L E R S  ***
//////////////////////////////////////////////

//
// Discovery

// Source(1) = the cpqScsiCntlrTable
// ID;ControllerNumber;BusNumber;FWVers;BIOSVers;Model
DiskController.Discovery.Source(1).Type="SnmpTable"
DiskController.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.232.5.2.2.1.1"
DiskController.Discovery.Source(1).SnmpTableSelectColumns="ID,1,2,4,5,15"

// Concatenate ControllerNumber and BusNumber to obtain the ControllerIndex
// ID;ControllerIndex;BusNumber;FWVers;BIOSVers;Model
DiskController.Discovery.Source(1).Compute(1).Type="RightConcat"
DiskController.Discovery.Source(1).Compute(1).Column="2"
DiskController.Discovery.Source(1).Compute(1).String="."

DiskController.Discovery.Source(1).Compute(2).Type="RightConcat"
DiskController.Discovery.Source(1).Compute(2).Column="2"
DiskController.Discovery.Source(1).Compute(2).String=Column(3)


// Source(2) = the cpqScsiPhyDrv snmp table
// We're going to keep only disk controllers that have disks attached to them
// ID;ControllerNumber;BusNumber;Model;SizeMB;SerialNumber;Status
DiskController.Discovery.Source(2).Type="SnmpTable"
DiskController.Discovery.Source(2).SnmpTableOid="1.3.6.1.4.1.232.5.2.4.1.1"
DiskController.Discovery.Source(2).SnmpTableSelectColumns="ID,1,2,4,7,30,9"

// Change the 4294967295 size value into an empty string
// because this is not a real size
// ID;ControllerNumber;BusNumber;Model;SizeMB;SerialNumber;Status
DiskController.Discovery.Source(2).Compute(1).Type="Replace"
DiskController.Discovery.Source(2).Compute(1).Column="5"
DiskController.Discovery.Source(2).Compute(1).Replace="4294967295"
DiskController.Discovery.Source(2).Compute(1).ReplaceBy=""

// Convert the size into bytes
// ID;ControllerNumber;BusNumber;Model;Size;SerialNumber;Status
DiskController.Discovery.Source(2).Compute(2).Type="Multiply"
DiskController.Discovery.Source(2).Compute(2).Column="5"
DiskController.Discovery.Source(2).Compute(2).MultiplyBy="1048576"

// Concatenate ControllerNumber and BusNumber to obtain the ControllerIndex
// ID;ControllerIndex;BusNumber;Model;Size;SerialNumber;Status
DiskController.Discovery.Source(2).Compute(3).Type="RightConcat"
DiskController.Discovery.Source(2).Compute(3).Column="2"
DiskController.Discovery.Source(2).Compute(3).String="."

DiskController.Discovery.Source(2).Compute(4).Type="RightConcat"
DiskController.Discovery.Source(2).Compute(4).Column="2"
DiskController.Discovery.Source(2).Compute(4).String=Column(3)

// Remove disks that are marked as missing by Insight Manager
// These disks shouldn't be discovered, that way they'll be marked
// as "missing" by Hardware Sentry
DiskController.Discovery.Source(2).Compute(5).Type="ExcludeMatchingLines"
DiskController.Discovery.Source(2).Compute(5).Column="6"
DiskController.Discovery.Source(2).Compute(5).ValueList="6,7,9,11"

// Source(3) = table joint of Source(1) and Source(2)
// in order to keep only disk controllers with physical disks
// ID;ControllerNumber;BusNumber;FWVers;BIOSVers;Model;ID;ControllerIndex;BusNumber;Model;Size;SerialNumber;Status
DiskController.Discovery.Source(3).Type="TableJoint"
DiskController.Discovery.Source(3).LeftTable=%DiskController.Discovery.Source(1)%
DiskController.Discovery.Source(3).RightTable=%DiskController.Discovery.Source(2)%
DiskController.Discovery.Source(3).LeftKeyColumn="2"
DiskController.Discovery.Source(3).RightKeyColumn="2"

// The InstanceTable
DiskController.Discovery.InstanceTable=%DiskController.Discovery.Source(3)%
DiskController.Discovery.Instance.DeviceID=InstanceTable.Column(1)
DiskController.Discovery.Instance.ControllerNumber=InstanceTable.Column(2)
DiskController.Discovery.Instance.Model=InstanceTable.Column(6)
DiskController.Discovery.Instance.FirmwareVersion=InstanceTable.Column(4)
DiskController.Discovery.Instance.BIOSVersion=InstanceTable.Column(5)

//
// Collect

// Collect type = "multi-instance"
DiskController.Collect.Type="MultiInstance"

// Source(1) = the cpqScsiCntlrTable
// ID;ControllerStatus
DiskController.Collect.Source(1).Type="SnmpTable"
DiskController.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.232.5.2.2.1.1"
DiskController.Collect.Source(1).SnmpTableSelectColumns="ID,7"

// Duplicate ControllerStatus
// ID;ControllerStatus;ControllerStatus
DiskController.Collect.Source(1).Compute(1).Type="DuplicateColumn"
DiskController.Collect.Source(1).Compute(1).Column="2"

// Translate first ControllerStatus into a PATROL status
// ID;Status;ControllerStatus
DiskController.Collect.Source(1).Compute(2).Type="Translate"
DiskController.Collect.Source(1).Compute(2).Column="2"
DiskController.Collect.Source(1).Compute(2).TranslationTable="DiskControllerStatusTranslationTable"

// The DiskControllerStatusTranslationTable
DiskControllerStatusTranslationTable(2)="OK"
DiskControllerStatusTranslationTable(3)="ALARM"
DiskControllerStatusTranslationTable(Default)="UNKNOWN"

// Translate second ControllerStatus into a more readable string
// ID;Status;statusInformation
DiskController.Collect.Source(1).Compute(3).Type="Translate"
DiskController.Collect.Source(1).Compute(3).Column="3"
DiskController.Collect.Source(1).Compute(3).TranslationTable="DiskControllerStatusInformationTranslationTable"

// The DiskControllerStatusInformationTranslationTable
DiskControllerStatusInformationTranslationTable(2)=""
DiskControllerStatusInformationTranslationTable(3)="Failed"
DiskControllerStatusInformationTranslationTable(Default)="Unknown Status"

// ValueTable = source(1)
DiskController.Collect.ValueTable=%DiskController.Collect.Source(1)%
DiskController.Collect.DeviceID=ValueTable.Column(1)
DiskController.Collect.ControllerStatus=ValueTable.Column(2)
DiskController.Collect.StatusInformation=ValueTable.Column(3)


/////////////////////////////////////////////////
///  ***  P H Y S I C A L   D I S K S   ***   ///
/////////////////////////////////////////////////

//
// Discovery

// The instance table = DiskController.Discovery.Source(2)
PhysicalDisk.Discovery.InstanceTable=%DiskController.Discovery.Source(2)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PhysicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(2)
PhysicalDisk.Discovery.Instance.Vendor=InstanceTable.Column(4)
PhysicalDisk.Discovery.Instance.Size=InstanceTable.Column(5)
PhysicalDisk.Discovery.Instance.SerialNumber=InstanceTable.Column(6)

//
// Collect

// Collect type is: multi-instance
PhysicalDisk.Collect.Type="MultiInstance"

// Source(1) = the cpqScsiPhyDrv snmp table
// ID;status;
PhysicalDisk.Collect.Source(1).Type="SnmpTable"
PhysicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.232.5.2.4.1.1"
PhysicalDisk.Collect.Source(1).SnmpTableSelectColumns="ID,9"

// Duplicate the status column, two times
// ID;status;status;
PhysicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PhysicalDisk.Collect.Source(1).Compute(1).Column="2"

// ID;status;status;status
PhysicalDisk.Collect.Source(1).Compute(2).Type="DuplicateColumn"
PhysicalDisk.Collect.Source(1).Compute(2).Column="3"

// Translate the first status column into a PATROL status
// ID;PATROLstatus;status;status
PhysicalDisk.Collect.Source(1).Compute(3).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(3).Column="2"
PhysicalDisk.Collect.Source(1).Compute(3).TranslationTable="PhysicalDiskStatusTranslationTable"

// The PhysicalDiskStatusTranslationTable
PhysicalDiskStatusTranslationTable(2)="OK"
PhysicalDiskStatusTranslationTable(3)="ALARM"
PhysicalDiskStatusTranslationTable(4)="WARN"
PhysicalDiskStatusTranslationTable(5)="ALARM"
PhysicalDiskStatusTranslationTable(6)="ALARM"
PhysicalDiskStatusTranslationTable(7)="ALARM"
PhysicalDiskStatusTranslationTable(8)="OK"
PhysicalDiskStatusTranslationTable(9)="ALARM"
PhysicalDiskStatusTranslationTable(10)="WARN"
PhysicalDiskStatusTranslationTable(11)="ALARM"
PhysicalDiskStatusTranslationTable(12)="ALARM"
PhysicalDiskStatusTranslationTable(Default)="UNKNOWN"

// Translate the second status column into a more readable string
// ID;PATROLstatus;statusInformation;status
PhysicalDisk.Collect.Source(1).Compute(4).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(4).Column="3"
PhysicalDisk.Collect.Source(1).Compute(4).TranslationTable="PhysicalDiskStatusInformationTranslationTable"

// The PhysicalDiskStatusInformationTranslationTable
PhysicalDiskStatusInformationTranslationTable(2)=""
PhysicalDiskStatusInformationTranslationTable(3)="Failed"
PhysicalDiskStatusInformationTranslationTable(4)="Not configured"
PhysicalDiskStatusInformationTranslationTable(5)="Bad cable"
PhysicalDiskStatusInformationTranslationTable(6)="Missing"
PhysicalDiskStatusInformationTranslationTable(7)="Missing"
PhysicalDiskStatusInformationTranslationTable(8)="Predicted failure"
PhysicalDiskStatusInformationTranslationTable(9)="Missing"
PhysicalDiskStatusInformationTranslationTable(10)="Offline"
PhysicalDiskStatusInformationTranslationTable(11)="Missing"
PhysicalDiskStatusInformationTranslationTable(12)="Hard error"
PhysicalDiskStatusInformationTranslationTable(Default)="Unknown Status"

// Translate the third status into a 0 (no failure predicted) or 1 (failure is predicted)
// ID;PATROLstatus;statusInformation;predictFailureStatus
PhysicalDisk.Collect.Source(1).Compute(5).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(5).Column="4"
PhysicalDisk.Collect.Source(1).Compute(5).TranslationTable="PhysicalDiskSMARTStatusTranslationTable"


// The PhysicalDiskSMARTStatusTranslationTable
PhysicalDiskSMARTStatusTranslationTable(6)="TRUE"
PhysicalDiskSMARTStatusTranslationTable(7)="TRUE"
PhysicalDiskSMARTStatusTranslationTable(9)="TRUE"
PhysicalDiskSMARTStatusTranslationTable(11)="TRUE"
PhysicalDiskSMARTStatusTranslationTable(Default)="FALSE"

// The ValueTable = source(1)
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(1)
PhysicalDisk.Collect.Status=ValueTable.Column(2)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(3)
PhysicalDisk.Collect.PredictedFailure=ValueTable.Column(4)



///////////////////////////////////////////////
///  ***  L O G I C A L   D I S K S   ***   ///
///////////////////////////////////////////////

//
// Discovery

// Source(1) = the cpqScsiLogDrv snmp table
// ID;ControllerNumber;BusNumber;FaultToleranceLevel;SizeMB
LogicalDisk.Discovery.Source(1).Type="SnmpTable"
LogicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.232.5.2.3.1.1"
LogicalDisk.Discovery.Source(1).SnmpTableSelectColumns="ID,1,2,4,6"

// Translate size into bytes
// ID;ControllerNumber;BusNumber;FaultToleranceLevel;Size
LogicalDisk.Discovery.Source(1).Compute(1).Type="Multiply"
LogicalDisk.Discovery.Source(1).Compute(1).Column="5"
LogicalDisk.Discovery.Source(1).Compute(1).MultiplyBy="1048576"

// Translate the FaultToleranceLevel into a more readable string
// ID;ControllerNumber;BusNumber;RAIDLevel;Size
LogicalDisk.Discovery.Source(1).Compute(2).Type="Translate"
LogicalDisk.Discovery.Source(1).Compute(2).Column="4"
LogicalDisk.Discovery.Source(1).Compute(2).TranslationTable="RAIDLevelTranslationTable"

// The RAIDLevelTranslationTable
RAIDLevelTranslationTable(2)="0"
RAIDLevelTranslationTable(3)="1"
RAIDLevelTranslationTable(4)="4"
RAIDLevelTranslationTable(5)="5"
RAIDLevelTranslationTable(6)="1E"
RAIDLevelTranslationTable(Default)=""

// Concatenate ControllerNumber and BusNumber to obtain the ControllerIndex
// ID;ControllerIndex;BusNumber;RAIDLevel;Size
LogicalDisk.Discovery.Source(1).Compute(3).Type="RightConcat"
LogicalDisk.Discovery.Source(1).Compute(3).Column="2"
LogicalDisk.Discovery.Source(1).Compute(3).String="."

LogicalDisk.Discovery.Source(1).Compute(4).Type="RightConcat"
LogicalDisk.Discovery.Source(1).Compute(4).Column="2"
LogicalDisk.Discovery.Source(1).Compute(4).String=Column(3)

// The InstanceTable
LogicalDisk.Discovery.InstanceTable=%LogicalDisk.Discovery.Source(1)%
LogicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
LogicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(2)
LogicalDisk.Discovery.Instance.Size=InstanceTable.Column(5)
LogicalDisk.Discovery.Instance.RAIDLevel=InstanceTable.Column(4)

//
// Collect

// Collect type = MultiInstance
LogicalDisk.Collect.Type="MultiInstance"

// Source(1) = the cpqScsiLogDrv snmp table
// ID;Status
LogicalDisk.Collect.Source(1).Type="SnmpTable"
LogicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.232.3.2.3.1.1"
LogicalDisk.Collect.Source(1).SnmpTableSelectColumns="ID,5"

// Duplicate the status column
// ID;Status;Status
LogicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
LogicalDisk.Collect.Source(1).Compute(1).Column="2"

// Translate the first status column into a PATROL status
// ID;PATROLStatus;Status
LogicalDisk.Collect.Source(1).Compute(2).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(2).Column="2"
LogicalDisk.Collect.Source(1).Compute(2).TranslationTable="LogicalDiskStatusTranslationTable"

// The LogicalDiskStatusTranslationTable
LogicalDiskStatusTranslationTable(2)="OK"
LogicalDiskStatusTranslationTable(3)="ALARM"
LogicalDiskStatusTranslationTable(4)="OK"
LogicalDiskStatusTranslationTable(5)="WARN"
LogicalDiskStatusTranslationTable(6)="OK"
LogicalDiskStatusTranslationTable(7)="WARN"
LogicalDiskStatusTranslationTable(8)="ALARM"
LogicalDiskStatusTranslationTable(9)="ALARM"
LogicalDiskStatusTranslationTable(10)="WARN"
LogicalDiskStatusTranslationTable(11)="WARN"
LogicalDiskStatusTranslationTable(Default)="UNKNOWN"

// Translate the second status column into a more readable string
// ID;PATROLStatus;StatusInformation
LogicalDisk.Collect.Source(1).Compute(3).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(3).Column="3"
LogicalDisk.Collect.Source(1).Compute(3).TranslationTable="LogicalDiskStatusInformationTranslationTable"

// The LogicalDiskStatusInformationTranslationTable
LogicalDiskStatusInformationTranslationTable(2)=""
LogicalDiskStatusInformationTranslationTable(3)="Failed"
LogicalDiskStatusInformationTranslationTable(4)="Unconfigured"
LogicalDiskStatusInformationTranslationTable(5)="Recovering"
LogicalDiskStatusInformationTranslationTable(6)="Ready for rebuild"
LogicalDiskStatusInformationTranslationTable(7)="Rebuilding"
LogicalDiskStatusInformationTranslationTable(8)="Wrong drive"
LogicalDiskStatusInformationTranslationTable(9)="Bad connect"
LogicalDiskStatusInformationTranslationTable(10)="Degraded"
LogicalDiskStatusInformationTranslationTable(11)="Disabled"
LogicalDiskStatusInformationTranslationTable(Default)="Unknown Status"

// The ValueTable = source(1)
LogicalDisk.Collect.ValueTable=%LogicalDisk.Collect.Source(1)%
LogicalDisk.Collect.DeviceID=ValueTable.Column(1)
LogicalDisk.Collect.Status=ValueTable.Column(2)
LogicalDisk.Collect.StatusInformation=ValueTable.Column(3)
