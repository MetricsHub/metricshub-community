////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//               by Sentry Software (c)
//
//
//      Supports: MacroSan Storage Systems
//                Connects to MacroSan's SNMP Agent
//


//
// Header
//

hdf.DisplayName="MacroSan Storage System (SNMP)"
hdf.TypicalPlatform="MacroSan"
hdf.ReliesOn="MacroSan SNMP Agent"
hdf.Version="1.0"
hdf.Comments="This connector discovers the enclosure and the disks of MacroSan disk arrays as well as the various environment sensors (batteries, fans, power supplies). It relies on the SNMP protocol."
hdf.RemoteSupport="true"
hdf.LocalSupport="false"
hdf.AppliesToOS="Storage"

//
// Detection
//

// Verify that there are MacroSan Storage Processors
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.35904.1.2.2.1.2.1"

// Enclosure
// No real discovery, just a fake table .... as the MIB contains nothing about the enclosure.

Enclosure.Discovery.InstanceTable="MacroSan StorageDevice"
Enclosure.Discovery.Instance.DeviceID="MacroSan StorageDevice"
Enclosure.Discovery.Instance.Vendor="MacroSan"
Enclosure.Discovery.Instance.Type="Storage"

//
// PHYSICAL DISKS
//

//
// Discovery

// Source(1) = diskStateTable
// DeviceID,Name,Type,Speed,Capacity,Role
PhysicalDisk.Discovery.Source(1).Type="SnmpTable"
PhysicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.35904.1.2.2.5.2.1"
PhysicalDisk.Discovery.Source(1).SnmpTableSelectColumns="1,2,3,4,5,7"

// Translate The Disk Type
// DeviceID,Name,Type,Speed,Capacity,Role
PhysicalDisk.Discovery.Source(1).Compute(1).Type="Translate"
PhysicalDisk.Discovery.Source(1).Compute(1).Column=3
PhysicalDisk.Discovery.Source(1).Compute(1).TranslationTable="diskTypeTranslationTable"

// The diskTypeTranslationTable
diskTypeTranslationTable(0)=""
diskTypeTranslationTable(1)="SATA"
diskTypeTranslationTable(2)="SAS"
diskTypeTranslationTable(3)="SSD"
diskTypeTranslationTable(Default)=""

// Translate The Disk Type
// DeviceID,Name,Type,Speed,Capacity,Role
PhysicalDisk.Discovery.Source(1).Compute(2).Type="Translate"
PhysicalDisk.Discovery.Source(1).Compute(2).Column=6
PhysicalDisk.Discovery.Source(1).Compute(2).TranslationTable="diskRoleTranslationTable"

// The diskRoleTranslationTable
diskRoleTranslationTable(0)="Blank"
diskRoleTranslationTable(1)="Global Spare"
diskRoleTranslationTable(2)="Data"
diskRoleTranslationTable(3)="Raid Spare"
diskRoleTranslationTable(4)="Conflict"
diskRoleTranslationTable(5)="Unknown"
diskRoleTranslationTable(Default)=""

// Remove MB/GB/TB and replace with appropriate number of zeroes.
// DeviceID,Name,Type,Speed,Capacity,Role
PhysicalDisk.Discovery.Source(1).Compute(3).Type="Replace"
PhysicalDisk.Discovery.Source(1).Compute(3).Column=5
PhysicalDisk.Discovery.Source(1).Compute(3).Replace="MB"
PhysicalDisk.Discovery.Source(1).Compute(3).ReplaceBy="000000"

PhysicalDisk.Discovery.Source(1).Compute(4).Type="Replace"
PhysicalDisk.Discovery.Source(1).Compute(4).Column=5
PhysicalDisk.Discovery.Source(1).Compute(4).Replace="GB"
PhysicalDisk.Discovery.Source(1).Compute(4).ReplaceBy="000000000"

PhysicalDisk.Discovery.Source(1).Compute(5).Type="Replace"
PhysicalDisk.Discovery.Source(1).Compute(5).Column=5
PhysicalDisk.Discovery.Source(1).Compute(5).Replace="TB"
PhysicalDisk.Discovery.Source(1).Compute(5).ReplaceBy="000000000000"

PhysicalDisk.Discovery.Source(1).Compute(6).Type="LeftConcat"
PhysicalDisk.Discovery.Source(1).Compute(6).Column=6
PhysicalDisk.Discovery.Source(1).Compute(6).String="Role: "

PhysicalDisk.Discovery.Source(1).Compute(7).Type="LeftConcat"
PhysicalDisk.Discovery.Source(1).Compute(7).Column=4
PhysicalDisk.Discovery.Source(1).Compute(7).String="Speed: "

// InstanceTable = Source(1)
// DeviceID,Name,Type,Speed,Capacity,Role
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(1)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PhysicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(2)
PhysicalDisk.Discovery.Instance.Model=InstanceTable.Column(3)
PhysicalDisk.Discovery.Instance.Size=InstanceTable.Column(5)
PhysicalDisk.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(6)
PhysicalDisk.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(4)


//
// Collect

// Collect type is multi-instance
PhysicalDisk.Collect.Type="MultiInstance"

// Source(1) = diskStateTable
// DeviceID;Status;
PhysicalDisk.Collect.Source(1).Type="SnmpTable"
PhysicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.35904.1.2.2.5.2.1"
PhysicalDisk.Collect.Source(1).SnmpTableSelectColumns="1,6"

// Duplicate the Status column
// DiskID;Status;Status;
PhysicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PhysicalDisk.Collect.Source(1).Compute(1).Column=2

// Translate the first status column into a PATROLStatus
// DiskID;PATROLStatus;Status;
PhysicalDisk.Collect.Source(1).Compute(2).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(2).Column=2
PhysicalDisk.Collect.Source(1).Compute(2).TranslationTable="diskStatusTranslationTable"

// The diskStatusTranslationTable
diskStatusTranslationTable(0)="OK"
diskStatusTranslationTable(1)="WARN"
diskStatusTranslationTable(2)="WARN"
diskStatusTranslationTable(3)="ALARM"
diskStatusTranslationTable(4)="ALARM"
diskStatusTranslationTable(Default)="UNKNOWN"

// Translate the second status column into a more readable string
// DiskID;PATROLStatus;StatusInformation;
PhysicalDisk.Collect.Source(1).Compute(3).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(3).Column=3
PhysicalDisk.Collect.Source(1).Compute(3).TranslationTable="diskStatusInformationTranslationTable"

// The diskStatusInformationTranslationTable
diskStatusInformationTranslationTable(0)=""
diskStatusInformationTranslationTable(1)="Repairing"
diskStatusInformationTranslationTable(2)="Warning"
diskStatusInformationTranslationTable(3)="Failed"
diskStatusInformationTranslationTable(4)="Missing"
diskStatusInformationTranslationTable(Default)="Unknown Status"

// ValueTable = Source(1)
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(1)
PhysicalDisk.Collect.Status=ValueTable.Column(2)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(3)


//
// LOGICAL DISKS (LUNs)
//

//
// Discovery

// Source(1) = diskPropertiesTable
// DeviceID,Name,Capacity
LogicalDisk.Discovery.Source(1).Type="SnmpTable"
LogicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.35904.1.2.2.4.2.1"
LogicalDisk.Discovery.Source(1).SnmpTableSelectColumns="1,2,3"

// Remove MB/GB/TB and create the Multiplier
// DeviceID,Name,Capacity,Multiplier
LogicalDisk.Discovery.Source(1).Compute(1).Type="Replace"
LogicalDisk.Discovery.Source(1).Compute(1).Column=3
LogicalDisk.Discovery.Source(1).Compute(1).Replace="MB"
LogicalDisk.Discovery.Source(1).Compute(1).ReplaceBy=";1048576"

LogicalDisk.Discovery.Source(1).Compute(2).Type="Replace"
LogicalDisk.Discovery.Source(1).Compute(2).Column=3
LogicalDisk.Discovery.Source(1).Compute(2).Replace="GB"
LogicalDisk.Discovery.Source(1).Compute(2).ReplaceBy=";1073741824"

LogicalDisk.Discovery.Source(1).Compute(3).Type="Replace"
LogicalDisk.Discovery.Source(1).Compute(3).Column=3
LogicalDisk.Discovery.Source(1).Compute(3).Replace="TB"
LogicalDisk.Discovery.Source(1).Compute(3).ReplaceBy=";1099511627776"

// Multiply the Capacity by the Multiplier
// DeviceID,Name,Capacity,Multiplier
LogicalDisk.Discovery.Source(1).Compute(4).Type="Multiply"
LogicalDisk.Discovery.Source(1).Compute(4).Column=3
LogicalDisk.Discovery.Source(1).Compute(4).MultiplyBy=Column(4)

// InstanceTable = Source(1)
// DeviceID,Name,Capacity,Multiplier
LogicalDisk.Discovery.InstanceTable=%LogicalDisk.Discovery.Source(1)%
LogicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
LogicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(2)
LogicalDisk.Discovery.Instance.Size=InstanceTable.Column(3)


//
// Collect

// Collect type is multi-instance
LogicalDisk.Collect.Type="MultiInstance"

// Source(1) = diskPropertiesTable
// DeviceID;Status;
LogicalDisk.Collect.Source(1).Type="SnmpTable"
LogicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.35904.1.2.2.4.2.1"
LogicalDisk.Collect.Source(1).SnmpTableSelectColumns="1,4"

// Duplicate the Status column
// DiskID;Status;Status;
LogicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
LogicalDisk.Collect.Source(1).Compute(1).Column=2

// Translate the first status column into a PATROLStatus
// DiskID;PATROLStatus;Status;
LogicalDisk.Collect.Source(1).Compute(2).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(2).Column=2
LogicalDisk.Collect.Source(1).Compute(2).TranslationTable="lunStatusTranslationTable"

// The lunStatusTranslationTable
lunStatusTranslationTable(0)="OK"
lunStatusTranslationTable(1)="WARN"
lunStatusTranslationTable(2)="ALARM"
lunStatusTranslationTable(3)="UNKNOWN"
lunStatusTranslationTable(4)="OK"
lunStatusTranslationTable(Default)="UNKNOWN"

// Translate the second status column into a more readable string
// DiskID;PATROLStatus;StatusInformation;
LogicalDisk.Collect.Source(1).Compute(3).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(3).Column=3
LogicalDisk.Collect.Source(1).Compute(3).TranslationTable="lunStatusInformationTranslationTable"

// The diskStatusInformationTranslationTable
lunStatusInformationTranslationTable(0)=""
lunStatusInformationTranslationTable(1)="Warning"
lunStatusInformationTranslationTable(2)="Faulty"
lunStatusInformationTranslationTable(3)="Unknown"
lunStatusInformationTranslationTable(4)="Status N/A"
lunStatusInformationTranslationTable(Default)="Unknown Status"

// ValueTable = Source(1)
LogicalDisk.Collect.ValueTable=%LogicalDisk.Collect.Source(1)%
LogicalDisk.Collect.DeviceID=ValueTable.Column(1)
LogicalDisk.Collect.Status=ValueTable.Column(2)
LogicalDisk.Collect.StatusInformation=ValueTable.Column(3)

//
// PowerSupply
//

//
// Discovery

// Source(1) = diskPropertiesTable
// DeviceID
PowerSupply.Discovery.Source(1).Type="SnmpTable"
PowerSupply.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.35904.1.2.2.7.2.1"
PowerSupply.Discovery.Source(1).SnmpTableSelectColumns="1"

// InstanceTable = Source(1)
// DeviceID
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(1)



//
// Collect

// Collect type is multi-instance
PowerSupply.Collect.Type="MultiInstance"

// Source(1) = diskPropertiesTable
// DeviceID;Status;
PowerSupply.Collect.Source(1).Type="SnmpTable"
PowerSupply.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.35904.1.2.2.7.2.1"
PowerSupply.Collect.Source(1).SnmpTableSelectColumns="1,2"

// Duplicate the Status column
// DeviceID;Status;Status;
PowerSupply.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(1).Column=2

// Translate the first status column into a PATROLStatus
// DeviceID;PATROLStatus;Status;
PowerSupply.Collect.Source(1).Compute(2).Type="Translate"
PowerSupply.Collect.Source(1).Compute(2).Column=2
PowerSupply.Collect.Source(1).Compute(2).TranslationTable="moduleStatusTranslationTable"

// Translate the second status column into a more readable string
// DeviceID;PATROLStatus;StatusInformation;
PowerSupply.Collect.Source(1).Compute(3).Type="Translate"
PowerSupply.Collect.Source(1).Compute(3).Column=3
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="moduleStatusInformationTranslationTable"

// ValueTable = Source(1)
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)

// The moduleStatusTranslationTable
moduleStatusTranslationTable(0)="OK"
moduleStatusTranslationTable(1)="ALARM"
moduleStatusTranslationTable(2)="ALARM"
moduleStatusTranslationTable(3)="UNKNOWN"
moduleStatusTranslationTable(Default)="UNKNOWN"

// The moduleStatusInformationTranslationTable
moduleStatusInformationTranslationTable(0)=""
moduleStatusInformationTranslationTable(1)="Faulty"
moduleStatusInformationTranslationTable(2)="Absent"
moduleStatusInformationTranslationTable(3)="Unknown"
moduleStatusInformationTranslationTable(Default)="Unknown Status"

//
// Fan
//

//
// Discovery

// Source(1) = diskPropertiesTable
// DeviceID
Fan.Discovery.Source(1).Type="SnmpTable"
Fan.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.35904.1.2.2.3.2.1"
Fan.Discovery.Source(1).SnmpTableSelectColumns="1"

// InstanceTable = Source(1)
// DeviceID
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(1)



//
// Collect

// Collect type is multi-instance
Fan.Collect.Type="MultiInstance"

// Source(1) = diskPropertiesTable
// DeviceID;Status;
Fan.Collect.Source(1).Type="SnmpTable"
Fan.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.35904.1.2.2.3.2.1"
Fan.Collect.Source(1).SnmpTableSelectColumns="1,2"

// Duplicate the Status column
// DeviceID;Status;Status;
Fan.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Fan.Collect.Source(1).Compute(1).Column=2

// Translate the first status column into a PATROLStatus
// DeviceID;PATROLStatus;Status;
Fan.Collect.Source(1).Compute(2).Type="Translate"
Fan.Collect.Source(1).Compute(2).Column=2
Fan.Collect.Source(1).Compute(2).TranslationTable="moduleStatusTranslationTable"

// Translate the second status column into a more readable string
// DeviceID;PATROLStatus;StatusInformation;
Fan.Collect.Source(1).Compute(3).Type="Translate"
Fan.Collect.Source(1).Compute(3).Column=3
Fan.Collect.Source(1).Compute(3).TranslationTable="moduleStatusInformationTranslationTable"

// ValueTable = Source(1)
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(2)
Fan.Collect.StatusInformation=ValueTable.Column(3)

//
// Battery
//

//
// Discovery

// Source(1) = batPropertiesTable
// DeviceID;FirstPowerTime;
Battery.Discovery.Source(1).Type="SnmpTable"
Battery.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.35904.1.2.2.2.1.1"
Battery.Discovery.Source(1).SnmpTableSelectColumns="1,2"

// Exclude Batteries with a power on time of 0 (battery not present)
// DeviceID;FirstPowerTime;
Battery.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
Battery.Discovery.Source(1).Compute(1).Column=2
Battery.Discovery.Source(1).Compute(1).ValueList="0"

// InstanceTable = Source(1)
// DeviceID;FirstPowerTime;
Battery.Discovery.InstanceTable=%Battery.Discovery.Source(1)%
Battery.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Battery.Discovery.Instance.DisplayID=InstanceTable.Column(1)



//
// Collect

// Collect type is multi-instance
Battery.Collect.Type="MultiInstance"

// Source(1) = diskPropertiesTable
// DeviceID;Status;
Battery.Collect.Source(1).Type="SnmpTable"
Battery.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.35904.1.2.2.2.1.1"
Battery.Collect.Source(1).SnmpTableSelectColumns="1,5"

// Duplicate the Status column
// DeviceID;Status;Status;
Battery.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Battery.Collect.Source(1).Compute(1).Column=2

// Translate the first status column into a PATROLStatus
// DeviceID;PATROLStatus;Status;
Battery.Collect.Source(1).Compute(2).Type="Translate"
Battery.Collect.Source(1).Compute(2).Column=2
Battery.Collect.Source(1).Compute(2).TranslationTable="batteryStatusTranslationTable"

// Translate the second status column into a more readable string
// DeviceID;PATROLStatus;StatusInformation;
Battery.Collect.Source(1).Compute(3).Type="Translate"
Battery.Collect.Source(1).Compute(3).Column=3
Battery.Collect.Source(1).Compute(3).TranslationTable="batteryStatusInformationTranslationTable"

// ValueTable = Source(1)
Battery.Collect.ValueTable=%Battery.Collect.Source(1)%
Battery.Collect.DeviceID=ValueTable.Column(1)
Battery.Collect.Status=ValueTable.Column(2)
Battery.Collect.StatusInformation=ValueTable.Column(3)


// The batteryStatusTranslationTable
batteryStatusTranslationTable(0)="OK"
batteryStatusTranslationTable(1)="ALARM"
batteryStatusTranslationTable(2)="WARN"
batteryStatusTranslationTable(3)="ALARM"
batteryStatusTranslationTable(4)="UNKNOWN"
batteryStatusTranslationTable(Default)="UNKNOWN"

// The batteryStatusInformationTranslationTable
batteryStatusInformationTranslationTable(0)=""
batteryStatusInformationTranslationTable(1)="Faulty"
batteryStatusInformationTranslationTable(2)="Warning"
batteryStatusInformationTranslationTable(3)="Absent"
batteryStatusInformationTranslationTable(4)="Unknown"
batteryStatusInformationTranslationTable(Default)="Unknown Status"

//
// Other Device (Controllers)
//

//
// Discovery

// Source(1) = spHaStatTable
// DeviceID,Name
OtherDevice.Discovery.Source(1).Type="SnmpTable"
OtherDevice.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.35904.1.2.2.1.2.1"
OtherDevice.Discovery.Source(1).SnmpTableSelectColumns="1,2"

// InstanceTable = Source(1)
// DeviceID,Name
OtherDevice.Discovery.InstanceTable=%OtherDevice.Discovery.Source(1)%
OtherDevice.Discovery.Instance.DeviceID=InstanceTable.Column(1)
OtherDevice.Discovery.Instance.DisplayID=InstanceTable.Column(2)
OtherDevice.Discovery.Instance.DeviceType="Controller"


//
// Collect

// Collect type is multi-instance
OtherDevice.Collect.Type="MultiInstance"

// Source(1) = diskPropertiesTable
// DeviceID;spHaState;sysHaState;
OtherDevice.Collect.Source(1).Type="SnmpTable"
OtherDevice.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.35904.1.2.2.1.2.1"
OtherDevice.Collect.Source(1).SnmpTableSelectColumns="1,3,4"

// Concat the two status together
// DeviceID;spHaState;sysHaState;
OtherDevice.Collect.Source(1).Compute(1).Type="RightConcat"
OtherDevice.Collect.Source(1).Compute(1).Column=2
OtherDevice.Collect.Source(1).Compute(1).String="_"

OtherDevice.Collect.Source(1).Compute(2).Type="RightConcat"
OtherDevice.Collect.Source(1).Compute(2).Column=2
OtherDevice.Collect.Source(1).Compute(2).String=Column(3)

// Duplicate the Status column
// DeviceID;Status;Status;sysHaState;
OtherDevice.Collect.Source(1).Compute(3).Type="DuplicateColumn"
OtherDevice.Collect.Source(1).Compute(3).Column=2

// Translate the first status column into a PATROLStatus
// DeviceID;PATROLStatus;Status;sysHaState;
OtherDevice.Collect.Source(1).Compute(4).Type="Translate"
OtherDevice.Collect.Source(1).Compute(4).Column=2
OtherDevice.Collect.Source(1).Compute(4).TranslationTable="otherdeviceStatusTranslationTable"

// The otherdeviceStatusTranslationTable
otherdeviceStatusTranslationTable("0_0")="OK"
otherdeviceStatusTranslationTable("0_1")="WARN"
otherdeviceStatusTranslationTable("0_2")="WARN"
otherdeviceStatusTranslationTable("0_3")="ALARM"
otherdeviceStatusTranslationTable("1_0")="OK"
otherdeviceStatusTranslationTable("1_1")="WARN"
otherdeviceStatusTranslationTable("1_2")="WARN"
otherdeviceStatusTranslationTable("1_3")="ALARM"
otherdeviceStatusTranslationTable("2_0")="OK"
otherdeviceStatusTranslationTable("2_1")="WARN"
otherdeviceStatusTranslationTable("2_2")="WARN"
otherdeviceStatusTranslationTable("2_3")="ALARM"
otherdeviceStatusTranslationTable("3_0")="OK"
otherdeviceStatusTranslationTable("3_1")="WARN"
otherdeviceStatusTranslationTable("3_2")="WARN"
otherdeviceStatusTranslationTable("3_3")="ALARM"
otherdeviceStatusTranslationTable("4_0")="OK"
otherdeviceStatusTranslationTable("4_1")="WARN"
otherdeviceStatusTranslationTable("4_2")="WARN"
otherdeviceStatusTranslationTable("4_3")="ALARM"
otherdeviceStatusTranslationTable("5_0")="OK"
otherdeviceStatusTranslationTable("5_1")="WARN"
otherdeviceStatusTranslationTable("5_2")="WARN"
otherdeviceStatusTranslationTable("5_3")="ALARM"
otherdeviceStatusTranslationTable("6_0")="OK"
otherdeviceStatusTranslationTable("6_1")="WARN"
otherdeviceStatusTranslationTable("6_2")="WARN"
otherdeviceStatusTranslationTable("6_3")="ALARM"
otherdeviceStatusTranslationTable(Default)="UNKNOWN"

// Translate the second status column into a more readable string
// DeviceID;PATROLStatus;StatusInformation;sysHaState;
OtherDevice.Collect.Source(1).Compute(5).Type="Translate"
OtherDevice.Collect.Source(1).Compute(5).Column=3
OtherDevice.Collect.Source(1).Compute(5).TranslationTable="otherdeviceStatusInformationTranslationTable"

// The diskStatusInformationTranslationTable
otherdeviceStatusInformationTranslationTable("0_0")="HA Status Normal"
otherdeviceStatusInformationTranslationTable("0_1")="HA A Takeover B"
otherdeviceStatusInformationTranslationTable("0_2")="HA B Takeover A"
otherdeviceStatusInformationTranslationTable("0_3")="HA Status Abnormal"
otherdeviceStatusInformationTranslationTable("1_0")="HA Status Normal (Single)"
otherdeviceStatusInformationTranslationTable("1_1")="HA A Takeover B (Single)"
otherdeviceStatusInformationTranslationTable("1_2")="HA B Takeover A (Single)"
otherdeviceStatusInformationTranslationTable("1_3")="HA Status Abnormal (Single)"
otherdeviceStatusInformationTranslationTable("2_0")="HA Status Normal (Double)"
otherdeviceStatusInformationTranslationTable("2_1")="HA A Takeover B (Double)"
otherdeviceStatusInformationTranslationTable("2_2")="HA B Takeover A (Double)"
otherdeviceStatusInformationTranslationTable("2_3")="HA Status Abnormal (Double)"
otherdeviceStatusInformationTranslationTable("3_0")="HA Status Abnormal (Single)"
otherdeviceStatusInformationTranslationTable("3_1")="HA Status Abnormal (Single)"
otherdeviceStatusInformationTranslationTable("3_2")="HA Status Abnormal (Single)"
otherdeviceStatusInformationTranslationTable("3_3")="HA Status Abnormal (Single)"
otherdeviceStatusInformationTranslationTable("4_0")="HA Status Abnormal (Double)"
otherdeviceStatusInformationTranslationTable("4_1")="HA Status Abnormal (Double)"
otherdeviceStatusInformationTranslationTable("4_2")="HA Status Abnormal (Double)"
otherdeviceStatusInformationTranslationTable("4_3")="HA Status Abnormal (Double)"
otherdeviceStatusInformationTranslationTable("5_0")="HA Status Normal (Idle)"
otherdeviceStatusInformationTranslationTable("5_1")="HA A Takeover B (Idle)"
otherdeviceStatusInformationTranslationTable("5_2")="HA B Takeover A (Idle)"
otherdeviceStatusInformationTranslationTable("5_3")="HA Status Abnormal (Idle)"
otherdeviceStatusInformationTranslationTable("6_0")="HA Status Normal (PowerOff)"
otherdeviceStatusInformationTranslationTable("6_1")="HA A Takeover B (PowerOff)"
otherdeviceStatusInformationTranslationTable("6_2")="HA B Takeover A (PowerOff)"
otherdeviceStatusInformationTranslationTable("6_3")="HA Status Abnormal (PowerOff)"
otherdeviceStatusInformationTranslationTable(Default)="UNKNOWN"

// ValueTable = Source(1)
// DeviceID;PATROLStatus;StatusInformation;sysHaState;
OtherDevice.Collect.ValueTable=%OtherDevice.Collect.Source(1)%
OtherDevice.Collect.DeviceID=ValueTable.Column(1)
OtherDevice.Collect.Status=ValueTable.Column(2)
OtherDevice.Collect.StatusInformation=ValueTable.Column(3)
