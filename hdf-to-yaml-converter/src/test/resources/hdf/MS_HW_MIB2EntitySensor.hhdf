
//
// DETECTION
//

// Detection Criteria 1
// Must have ENTITY-SENSOR-MIB
Detection.Criteria(_DETECTION_INDEX).Type="SNMP"
Detection.Criteria(_DETECTION_INDEX).SnmpGetNext="1.3.6.1.2.1.99"



//
// Enclosure
//

//
// Discovery

// Source(1) = SNMP Table
// ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU
Enclosure.Discovery.Source(1).Type="SnmpTable"
Enclosure.Discovery.Source(1).SnmpTableOid="1.3.6.1.2.1.47.1.1.1.1"
Enclosure.Discovery.Source(1).SnmpTableSelectColumns="ID,2,4,5,8,9,11,12,13,16"

// ID;type;
Enclosure.Discovery.Source(2).Type="SnmpTable"
Enclosure.Discovery.Source(2).SnmpTableOid="1.3.6.1.2.1.99.1.1.1"
Enclosure.Discovery.Source(2).SnmpTableSelectColumns="ID,1,5"

// ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;value;
Enclosure.Discovery.Source(3).Type="TableJoint"
Enclosure.Discovery.Source(3).LeftTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Source(3).RightTable=%Enclosure.Discovery.Source(2)%
Enclosure.Discovery.Source(3).LeftKeyColumn=1
Enclosure.Discovery.Source(3).RightKeyColumn=1
Enclosure.Discovery.Source(3).DefaultRightLine=";;;"

// Exclude sensors with status "No Longer Present"
Enclosure.Discovery.Source(3).Compute(1).Type="ExcludeMatchingLines"
Enclosure.Discovery.Source(3).Compute(1).Column=13
Enclosure.Discovery.Source(3).Compute(1).RegExp="5"

// Keep Source 3 clean for other classes
Enclosure.Discovery.Source(4)=%Enclosure.Discovery.Source(3)%

// Keep only units of type 3 (chassis)
// ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
Enclosure.Discovery.Source(4).Compute(1).Type="KeepOnlyMatchingLines"
Enclosure.Discovery.Source(4).Compute(1).Column=4
Enclosure.Discovery.Source(4).Compute(1).ValueList="3"

// Instance Table
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(4)%
Enclosure.Discovery.Instance.DeviceID=_DEVICE_ID
Enclosure.Discovery.Instance.DisplayID=InstanceTable.Column(2)
Enclosure.Discovery.Instance.Vendor=InstanceTable.Column(8)
Enclosure.Discovery.Instance.Model=InstanceTable.Column(9)
Enclosure.Discovery.Instance.SerialNumber=InstanceTable.Column(7)
Enclosure.Discovery.Instance.BiosVersion=InstanceTable.Column(5)
Enclosure.Discovery.Instance.Type=_ENCLOSURE_TYPE


//
// Collect

// Entity-Sensor-MIB
// ID;type;precision;Value;State;
Enclosure.Collect.Source(1).Type="SnmpTable"
Enclosure.Collect.Source(1).SnmpTableOid="1.3.6.1.2.1.99.1.1.1"
Enclosure.Collect.Source(1).SnmpTableSelectColumns="ID,1,3,4,5"

Enclosure.Collect.Source(1).Compute(1).Type="Translate"
Enclosure.Collect.Source(1).Compute(1).Column=3
Enclosure.Collect.Source(1).Compute(1).TranslationTable="entPhySensorPrecisionTranslationTable"

Enclosure.Collect.Source(1).Compute(2).Type="Divide"
Enclosure.Collect.Source(1).Compute(2).Column=4
Enclosure.Collect.Source(1).Compute(2).DivideBy=Column(3)

Enclosure.Collect.Source(1).Compute(3).Type="DuplicateColumn"
Enclosure.Collect.Source(1).Compute(3).Column=5

// For use in all other classes
Enclosure.Collect.Source(2)=%Enclosure.Collect.Source(1)%

// Translate state status into a Status
// ID;type;precision;Value;PATROLStatus;StatusInformation;
Enclosure.Collect.Source(2).Compute(1).Type="Translate"
Enclosure.Collect.Source(2).Compute(1).Column=5
Enclosure.Collect.Source(2).Compute(1).TranslationTable="SensorStatusTranslationTable"

// Translate the second state status into a StatusInformation
// ID;type;precision;Value;PATROLStatus;StatusInformation;
Enclosure.Collect.Source(2).Compute(2).Type="Translate"
Enclosure.Collect.Source(2).Compute(2).Column=6
Enclosure.Collect.Source(2).Compute(2).TranslationTable="SensorStatusInformationTranslationTable"

// No status for chassis is available therefore it is not collected.
// ValueTable = Source(2)
Enclosure.Collect.ValueTable=%Enclosure.Collect.Source(2)%
Enclosure.Collect.DeviceID=_DEVICE_ID

// PrecisionTable
entPhySensorPrecisionTranslationTable(default)=1
entPhySensorPrecisionTranslationTable(1)=10
entPhySensorPrecisionTranslationTable(2)=100
entPhySensorPrecisionTranslationTable(3)=1000

// SensorStatusTranslationTable
SensorStatusTranslationTable(1)="OK"
SensorStatusTranslationTable(2)="WARN"
SensorStatusTranslationTable(3)="ALARM"
SensorStatusTranslationTable(4)="ALARM"
SensorStatusTranslationTable(5)="ALARM"
SensorStatusTranslationTable(6)="ALARM"
SensorStatusTranslationTable(default)="UNKNOWN"

// SensorStatusInformationTranslationTable
SensorStatusInformationTranslationTable(1)=""
SensorStatusInformationTranslationTable(2)="Warning"
SensorStatusInformationTranslationTable(3)="Critical"
SensorStatusInformationTranslationTable(4)="Shutdown"
SensorStatusInformationTranslationTable(5)="No Longer Present"
SensorStatusInformationTranslationTable(6)="Not Functioning"
SensorStatusInformationTranslationTable(default)="Unknown Status"



//
// TEMPERATURES
//

//
// Discovery

// ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
Temperature.Discovery.Source(1)=%Enclosure.Discovery.Source(3)%

// Keep only celcius(8) (temperature sensors)
// ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
Temperature.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Temperature.Discovery.Source(1).Compute(1).Column=12
Temperature.Discovery.Source(1).Compute(1).ValueList="8"

// Instance Table
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(11)
Temperature.Discovery.Instance.DisplayID=InstanceTable.Column(2)

Temperature.Discovery.Instance.AttachedToDeviceID=_DEVICE_ID


//
// Collect

// Collect type = multi-instance
Temperature.Collect.Type="MultiInstance"

Temperature.Collect.ValueTable=%Enclosure.Collect.Source(2)%
Temperature.Collect.DeviceID=ValueTable.Column(1)
Temperature.Collect.Temperature=ValueTable.Column(4)
Temperature.Collect.Status=ValueTable.Column(5)
Temperature.Collect.StatusInformation=ValueTable.Column(6)



//
// Voltage
//

//
// Discovery

// ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
Voltage.Discovery.Source(1)=%Enclosure.Discovery.Source(3)%

// Keep Voltages (voltsAC, voltsDC)
Voltage.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Voltage.Discovery.Source(1).Compute(1).Column=12
Voltage.Discovery.Source(1).Compute(1).ValueList="3,4"

// InstanceTable = Source(1)
Voltage.Discovery.InstanceTable=%Voltage.Discovery.Source(1)%
Voltage.Discovery.Instance.DeviceID=InstanceTable.Column(11)
Voltage.Discovery.Instance.DisplayID=InstanceTable.Column(2)
Voltage.Discovery.Instance.VoltageType=InstanceTable.Column(2)

Voltage.Discovery.Instance.AttachedToDeviceID=_DEVICE_ID

//
// Collect

// Collect type = multi-instance
Voltage.Collect.Type="MultiInstance"

Voltage.Collect.Source(1)=%Enclosure.Collect.Source(2)%

// Volts into mV
Voltage.Collect.Source(1).Compute(1).Type="Multiply"
Voltage.Collect.Source(1).Compute(1).Column=4
Voltage.Collect.Source(1).Compute(1).MultiplyBy=1000

// Value Table
Voltage.Collect.ValueTable=%Voltage.Collect.Source(1)%
Voltage.Collect.DeviceID=ValueTable.Column(1)
Voltage.Collect.Voltage=ValueTable.Column(4)
Voltage.Collect.Status=ValueTable.Column(5)
Voltage.Collect.StatusInformation=ValueTable.Column(6)



//
// Fans
//

//
// Discovery

// ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
Fan.Discovery.Source(1)=%Enclosure.Discovery.Source(3)%

// Keep only Fan sensors
// ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
Fan.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Fan.Discovery.Source(1).Compute(1).Column=12
Fan.Discovery.Source(1).Compute(1).ValueList="10"

// Substract 11 from ID to get FRU Parent
// ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
Fan.Discovery.Source(1).Compute(2).Type="Awk"
Fan.Discovery.Source(1).Compute(2).AwkScript=EmbeddedFile(1)

// ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;value;
Fan.Discovery.Source(2).Type="TableJoint"
Fan.Discovery.Source(2).LeftTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Source(2).RightTable=%Enclosure.Discovery.Source(3)%
Fan.Discovery.Source(2).LeftKeyColumn=1
Fan.Discovery.Source(2).RightKeyColumn=1

Fan.Discovery.Source(2).Compute(1).Type="KeepColumns"
Fan.Discovery.Source(2).Compute(1).ColumnNumbers="14,15,16,17,18,19,20,21,22,23,24,25"

Fan.Discovery.Source(2).Compute(2).Type="LeftConcat"
Fan.Discovery.Source(2).Compute(2).Column=9
Fan.Discovery.Source(2).Compute(2).String="Model: "

Fan.Discovery.Source(2).Compute(3).Type="LeftConcat"
Fan.Discovery.Source(2).Compute(3).Column=8
Fan.Discovery.Source(2).Compute(3).String="Manufacturer: "

Fan.Discovery.Source(2).Compute(4).Type="LeftConcat"
Fan.Discovery.Source(2).Compute(4).Column=7
Fan.Discovery.Source(2).Compute(4).String="Serial Number: "

// Instance Table
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(2)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(2)
Fan.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(7)
Fan.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(8)
Fan.Discovery.Instance.AdditionalInformation3=InstanceTable.Column(9)

Fan.Discovery.Instance.AttachedToDeviceID=_DEVICE_ID

//
// Collect

// Collect type = multi-instance
Fan.Collect.Type="MultiInstance"

Fan.Collect.Source(1)=%Enclosure.Collect.Source(2)%

// Substract 11 from ID to get FRU Parent
Fan.Collect.Source(1).Compute(1).Type="Awk"
Fan.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(1)

// ValueTable = Enclosure.Collect.Source(1)
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Speed=ValueTable.Column(4)
Fan.Collect.Status=ValueTable.Column(5)
Fan.Collect.StatusInformation=ValueTable.Column(6)



//
// PowerSupply
//

// Power supply entities exist but they do not have their own status

////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(1) = Substract 11
///
/////////////////////////////////////////////////////////
EmbeddedFile(1):
BEGIN {
  FS=";"
}
{
  print $1-11";"$2";"$3";"$4";"$5";"$6";"$7";"$8";"$9";"$10";"$11";"$12";"$13";"
}
EmbeddedFile(1).End