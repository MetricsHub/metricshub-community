////////////////////////////////////////////////////////////////#
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//
//      Supports: IBM Director Agents version 5.20.x and 6.10.x (which is really just 5.20.3 SU1)
//                on Windows
//
//

// This .HDF monitors IBM xSeries and Netfinity computers under Windows
// It uses the IBM Director Agent information
// The IBM Director Agent information is retrieved through WBEM


// Header

hdf.DisplayName="IBM Director Agent 5.20.x - Windows"
hdf.TypicalPlatform="IBM xSeries"
hdf.ReliesOn="IBM Director Agent 5.20.x"
hdf.Version="1.1"
hdf.Comments="This connector provides hardware monitoring through the IBM Director Agent version 5.20.x which supports almost all IBM Netfinity and xSeries servers."
hdf.RemoteSupport="true"
hdf.AppliesToOS="NT"
hdf.Supersedes="MS_HW_IpmiTool.hdf"

// Detection

// OS must be Windows
Detection.Criteria(1).Type="OS"
Detection.Criteria(1).KeepOnly="NT"

// The IBM Director Agent Service must be running (service name is TWGIPC or IBMTivoliCommonAgent in 6.10.x)
// Detection.Criteria(2).Type="Service"
// Detection.Criteria(2).ServiceName="TWGIPC\|IBMTivoliCommonAgent"

// Verify that the root/ibmsd WBEM namespace actually exists
Detection.Criteria(2).Type="WMI"
Detection.Criteria(2).WbemNameSpace="root"
Detection.Criteria(2).WbemQuery="SELECT Name FROM __NAMESPACE"
Detection.Criteria(2).ExpectedResult="^ibmsd;*$"

// The IBM Director Agent must be in version 5.x
Detection.Criteria(3).Type="WMI"
Detection.Criteria(3).WbemQuery="SELECT Version FROM IBMPSG_DirectorAgent"
Detection.Criteria(3).WbemNameSpace="root\ibmsd"
Detection.Criteria(3).ExpectedResult="^5\.2.*"

// The IBMPSG_ComputerSystemDetails WBEM class must be instanciated
Detection.Criteria(4).Type="WMI"
Detection.Criteria(4).WbemQuery="SELECT ProductName FROM IBMPSG_ComputerSystemDetails"
Detection.Criteria(4).WbemNameSpace="root\ibmsd"
Detection.Criteria(4).ErrorMessage="The IBM Director Agent seems to not be working properly. Please reinstall the IBM Director Agent."

//
// Enclosure: computer
//

//
// Discovery

// Source(1) = the IBMPSG_ComputerSystemDetails WBEM class
Enclosure.Discovery.Source(1).Type="WMI"
Enclosure.Discovery.Source(1).WbemQuery="SELECT Model,ProductName,SerialNumber FROM IBMPSG_ComputerSystemDetails"
Enclosure.Discovery.Source(1).WbemNameSpace="root\ibmsd"

// Concatenate ProductName and Name
Enclosure.Discovery.Source(1).Compute(1).Type="RightConcat"
Enclosure.Discovery.Source(1).Compute(1).Column=2
Enclosure.Discovery.Source(1).Compute(1).String=" ("

Enclosure.Discovery.Source(1).Compute(2).Type="RightConcat"
Enclosure.Discovery.Source(1).Compute(2).Column=2
Enclosure.Discovery.Source(1).Compute(2).String=Column(1)

Enclosure.Discovery.Source(1).Compute(3).Type="RightConcat"
Enclosure.Discovery.Source(1).Compute(3).Column=2
Enclosure.Discovery.Source(1).Compute(3).String=")"

// InstanceTable = Source(1)
// Note: InstanceTable must contain only one line!
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Instance.DeviceID="DIR5"
Enclosure.Discovery.Instance.Vendor="IBM"
Enclosure.Discovery.Instance.Model=InstanceTable.Column(2)
Enclosure.Discovery.Instance.SerialNumber=InstanceTable.Column(3)
Enclosure.Discovery.Instance.Type="Computer"

//
// Collect

Enclosure.Collect.Type="MonoInstance"

// Source(1) = The IBMPSG_SystemEnclosure WBEM class
Enclosure.Collect.Source(1).Type="WMI"
Enclosure.Collect.Source(1).WbemQuery="SELECT IntrusionStatus,Tag FROM IBMPSG_SystemEnclosure"
Enclosure.Collect.Source(1).WbemNameSpace="root\ibmsd"

Enclosure.Collect.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Enclosure.Collect.Source(1).Compute(1).Column="2"
Enclosure.Collect.Source(1).Compute(1).Regexp="0$"

Enclosure.Collect.Source(1).Compute(2).Type="Translate"
Enclosure.Collect.Source(1).Compute(2).Column="1"
Enclosure.Collect.Source(1).Compute(2).TranslationTable="enclosureIntrusionStatusTranslationTable"

Enclosure.Collect.ValueTable=%Enclosure.Collect.Source(1)%
Enclosure.Collect.IntrusionStatus=ValueTable.Column(1)

enclosureIntrusionStatusTranslationTable(0)="OK"
enclosureIntrusionStatusTranslationTable(1)="OK"
enclosureIntrusionStatusTranslationTable(2)="ALARM"
enclosureIntrusionStatusTranslationTable(Default)="OK"


//
// CPUs
//

//
// Discovery

cpu.Discovery.Source(1).Type="WMI"
cpu.Discovery.Source(1).WbemQuery="SELECT CurrentClockSpeed,DeviceID,Manufacturer,Name FROM IBMPSG_Processor"
cpu.Discovery.Source(1).WbemNameSpace="root\ibmsd"

// InstanceTable = Source(1)
cpu.Discovery.InstanceTable=%cpu.Discovery.Source(1)%
cpu.Discovery.Instance.DeviceID=InstanceTable.Column(2)
cpu.Discovery.Instance.Vendor=InstanceTable.Column(3)
cpu.Discovery.Instance.Model=InstanceTable.Column(4)
cpu.Discovery.Instance.MaximumSpeed=InstanceTable.Column(1)
cpu.Discovery.Instance.AttachedToDeviceID="DIR5"
cpu.Discovery.Instance.AttachedToDeviceType="Computer"

//
// Collect

cpu.Collect.Type="MultiInstance"

// Source(1) = The IBMPSG_Processor WBEM class
cpu.Collect.Source(1).Type="WMI"
cpu.Collect.Source(1).WbemQuery="SELECT CPUStatus,DeviceID FROM IBMPSG_Processor"
cpu.Collect.Source(1).WbemNameSpace="root\ibmsd"

cpu.Collect.Source(1).Compute(1).Type="DuplicateColumn"
cpu.Collect.Source(1).Compute(1).Column="1"

cpu.Collect.Source(1).Compute(2).Type="Translate"
cpu.Collect.Source(1).Compute(2).Column="1"
cpu.Collect.Source(1).Compute(2).TranslationTable="cpuStatusTranslationTable"

cpu.Collect.Source(1).Compute(3).Type="Translate"
cpu.Collect.Source(1).Compute(3).Column="2"
cpu.Collect.Source(1).Compute(3).TranslationTable="cpuStatusInformationTranslationTable"

cpu.Collect.ValueTable=%cpu.Collect.Source(1)%
cpu.Collect.DeviceID=ValueTable.Column(3)
cpu.Collect.Status=ValueTable.Column(1)
cpu.Collect.StatusInformation=ValueTable.Column(2)

// The cpuStatusTranslationTable
cpuStatusTranslationTable(1)="OK"
cpuStatusTranslationTable(2)="OK"
cpuStatusTranslationTable(3)="ALARM"
cpuStatusTranslationTable(4)="OK"
cpuStatusTranslationTable("OK")="OK"
cpuStatusTranslationTable(Default)="UNKNOWN"

// The cpuStatusInformationTranslationTable
cpuStatusInformationTranslationTable(1)=""
cpuStatusInformationTranslationTable(2)="Disabled by User"
cpuStatusInformationTranslationTable(3)="Disabled by BIOS (POST Error)"
cpuStatusInformationTranslationTable(4)="Idle"
cpuStatusInformationTranslationTable("OK")=""
cpuStatusInformationTranslationTable(Default)="Unknown Status"


//
// Memory
//

//
// Discovery

// Source(1)
Memory.Discovery.Source(1).Type="WMI"
Memory.Discovery.Source(1).WbemQuery="SELECT Capacity,Manufacturer,SerialNumber,Tag,TypeDetail FROM IBMPSG_PhysicalMemory"
Memory.Discovery.Source(1).WbemNameSpace="root\ibmsd"

// Convert size to MB
Memory.Discovery.Source(1).Compute(1).Type="Divide"
Memory.Discovery.Source(1).Compute(1).Column="1"
Memory.Discovery.Source(1).Compute(1).DivideBy="1048576"

// Translate memory type
Memory.Discovery.Source(1).Compute(2).Type="PerBitTranslation"
Memory.Discovery.Source(1).Compute(2).Column="5"
Memory.Discovery.Source(1).Compute(2).BitList="1,2,3,4,5,6,7,8,9,10,11,12,13"
Memory.Discovery.Source(1).Compute(2).BitTranslationTable="MemoryBitTranslationTable"

// InstanceTable = Source(1)
Memory.Discovery.InstanceTable=%Memory.Discovery.Source(1)%
Memory.Discovery.Instance.DeviceID=InstanceTable.Column(4)
Memory.Discovery.Instance.Size=InstanceTable.Column(1)
Memory.Discovery.Instance.Vendor=InstanceTable.Column(2)
Memory.Discovery.Instance.SerialNumber=InstanceTable.Column(3)
Memory.Discovery.Instance.Type=InstanceTable.Column(5)
Memory.Discovery.Instance.AttachedToDeviceID="DIR5"
Memory.Discovery.Instance.AttachedToDeviceType="Computer"

MemoryBitTranslationTable(1,1)="Reserved"
MemoryBitTranslationTable(2,1)="Other type"
MemoryBitTranslationTable(3,1)="Unknown type"
MemoryBitTranslationTable(4,1)="Fast-paged"
MemoryBitTranslationTable(5,1)="Static column"
MemoryBitTranslationTable(6,1)="Pseudo-static"
MemoryBitTranslationTable(7,1)="RAMBUS"
MemoryBitTranslationTable(8,1)="Synchronous"
MemoryBitTranslationTable(9,1)="CMOS"
MemoryBitTranslationTable(10,1)="EDO"
MemoryBitTranslationTable(11,1)="DRAM"
MemoryBitTranslationTable(12,1)="Cache DRAM"
MemoryBitTranslationTable(13,1)="Non-volatile"

//
// Collect

Memory.Collect.Type="MultiInstance"

// Source(1) = The IBMPSG_Processor WBEM class
Memory.Collect.Source(1).Type="WMI"
Memory.Collect.Source(1).WbemQuery="SELECT HasError,Tag FROM IBMPSG_PhysicalMemory"
Memory.Collect.Source(1).WbemNameSpace="root\ibmsd"

Memory.Collect.Source(1).Compute(1).Type="Translate"
Memory.Collect.Source(1).Compute(1).Column="1"
Memory.Collect.Source(1).Compute(1).TranslationTable="memoryStatusTranslationTable"

Memory.Collect.ValueTable=%Memory.Collect.Source(1)%
Memory.Collect.DeviceID=ValueTable.Column(2)
Memory.Collect.Status=ValueTable.Column(1)

// The memoryStatusTranslationTable
memoryStatusTranslationTable("FALSE")="OK"
memoryStatusTranslationTable("TRUE")="ALARM"
memoryStatusTranslationTable(0)="OK"
memoryStatusTranslationTable(1)="ALARM"
memoryStatusTranslationTable(Default)="UNKNOWN"


//
// Fans
//

//
// Discovery

// Source(1) = the IBMPSG_Tachometer WBEM class
Fan.Discovery.Source(1).Type="WMI"
Fan.Discovery.Source(1).WbemQuery="SELECT DeviceID, FanType, UpperThresholdCritical FROM IBMPSG_Tachometer"
Fan.Discovery.Source(1).WbemNameSpace="root\ibmsd"
Fan.Discovery.Source(1).Compute(1).Type="Translate"
Fan.Discovery.Source(1).Compute(1).Column="2"
Fan.Discovery.Source(1).Compute(1).TranslationTable="FanTypeTranslationTable"

// InstanceTable = Source(1)
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.FanType=InstanceTable.Column(2)
// We got a "warning" threshold
Fan.Discovery.Instance.WarningThreshold=InstanceTable.Column(3)
// We have no "alarm" threshold hence we set it to 0 (zero) ( = stopped)
Fan.Discovery.Instance.AlarmThreshold="0"
// Remark, we won't get any status information, so these thresholds are the only
// way to send alerts about fans
Fan.Discovery.Instance.AttachedToDeviceID="DIR5"
Fan.Discovery.Instance.AttachedToDeviceType="Computer"


// The FanTypeTranslationTable
FanTypeTranslationTable(1)="System"
FanTypeTranslationTable(2)="Power-Supply"
FanTypeTranslationTable(3)="CPU"
FanTypeTranslationTable(default)=""

//
// Collect

// The collect (as all WBEM-based collects) is "MultiInstance"
Fan.Collect.Type="MultiInstance"

// Source(1) = The IBMPSG_Tachometer WBEM class
Fan.Collect.Source(1).Type="WMI"
Fan.Collect.Source(1).WbemQuery="SELECT CurrentReading,DeviceID FROM IBMPSG_Tachometer"
Fan.Collect.Source(1).WbemNameSpace="root\ibmsd"

// ValueTable = Source(1)
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(2)
Fan.Collect.Speed=ValueTable.Column(1)
// No status is collected


//
// Temperatures
//

//
// Discovery

// Source(1) = The IBMPSG_TemperatureSensor WBEM class
Temperature.Discovery.Source(1).Type="WMI"
Temperature.Discovery.Source(1).WbemQuery="SELECT DeviceID, LowerThresholdCritical, LowerThresholdNonCritical, TempLocation FROM IBMPSG_TemperatureSensor"
Temperature.Discovery.Source(1).WbemNameSpace="root\ibmsd"
Temperature.Discovery.Source(1).Compute(1).Type="Translate"
Temperature.Discovery.Source(1).Compute(1).Column="4"
Temperature.Discovery.Source(1).Compute(1).TranslationTable="TemperatureTypeTranslationTable"

// InstanceTable = Source(1)
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Temperature.Discovery.Instance.TemperatureType=InstanceTable.Column(4)
Temperature.Discovery.Instance.WarningThreshold=InstanceTable.Column(3)
Temperature.Discovery.Instance.AlarmThreshold=InstanceTable.Column(2)
Temperature.Discovery.Instance.AttachedToDeviceID="DIR5"
Temperature.Discovery.Instance.AttachedToDeviceType="Computer"

//
// Collect

// Like all WBEM collects, this one is "MultiInstance"
Temperature.Collect.Type="MultiInstance"

// Source(1) = the IBMPSG_TemperatureSensor WBEM class
Temperature.Collect.Source(1).Type="WMI"
Temperature.Collect.Source(1).WbemQuery="SELECT CurrentReading,DeviceID FROM IBMPSG_TemperatureSensor"
Temperature.Collect.Source(1).WbemNameSpace="root\ibmsd"

// ValueTable = Source(1)
Temperature.Collect.ValueTable=%Temperature.Collect.Source(1)%
Temperature.Collect.DeviceID=ValueTable.Column(2)
Temperature.Collect.Temperature=ValueTable.Column(1)

// The TemperatureTypeTranslationTable
TemperatureTypeTranslationTable(1)="Motherboard"
TemperatureTypeTranslationTable(2)="CPU"
TemperatureTypeTranslationTable(3)="Power Supply"
TemperatureTypeTranslationTable(4)="DASD"
TemperatureTypeTranslationTable(default)=""


//
// Voltages
//

//
// Discovery

// Source(1) = all the instances of the IBMPSG_VoltageSensor class
Voltage.Discovery.Source(1).Type="WMI"
Voltage.Discovery.Source(1).WbemQuery="SELECT DeviceID,LowerThresholdNonCritical,UpperThresholdNonCritical,VoltageType FROM IBMPSG_VoltageSensor"
Voltage.Discovery.Source(1).WbemNameSpace="root\ibmsd"

// Translate the voltage type into a more readable string
Voltage.Discovery.Source(1).Compute(1).Type="Translate"
Voltage.Discovery.Source(1).Compute(1).Column="4"
Voltage.Discovery.Source(1).Compute(1).TranslationTable="VoltageTypeTranslationTable"

// Thresholds for voltages are sometimes reported as "0" by the agent.  Replacing these "0" by no value to prevent incorrect thresholds.
// Add a MSHW_ string to our value and then remove MSHW_0. This should remove a 0 value and only that value
Voltage.Discovery.Source(1).Compute(2).Type="LeftConcat"
Voltage.Discovery.Source(1).Compute(2).Column="2"
Voltage.Discovery.Source(1).Compute(2).String="MSHW_"

Voltage.Discovery.Source(1).Compute(3).Type="LeftConcat"
Voltage.Discovery.Source(1).Compute(3).Column="3"
Voltage.Discovery.Source(1).Compute(3).String="MSHW_"

// Remove 0 value
Voltage.Discovery.Source(1).Compute(4).Type="Replace"
Voltage.Discovery.Source(1).Compute(4).Column="2"
Voltage.Discovery.Source(1).Compute(4).Replace="MSHW_0"
Voltage.Discovery.Source(1).Compute(4).ReplaceBy=""

Voltage.Discovery.Source(1).Compute(5).Type="Replace"
Voltage.Discovery.Source(1).Compute(5).Column="3"
Voltage.Discovery.Source(1).Compute(5).Replace="MSHW_0"
Voltage.Discovery.Source(1).Compute(5).ReplaceBy=""

// Remove MSHW_ for non 0 values
Voltage.Discovery.Source(1).Compute(6).Type="Replace"
Voltage.Discovery.Source(1).Compute(6).Column="2"
Voltage.Discovery.Source(1).Compute(6).Replace="MSHW_"
Voltage.Discovery.Source(1).Compute(6).ReplaceBy=""

Voltage.Discovery.Source(1).Compute(7).Type="Replace"
Voltage.Discovery.Source(1).Compute(7).Column="3"
Voltage.Discovery.Source(1).Compute(7).Replace="MSHW_"
Voltage.Discovery.Source(1).Compute(7).ReplaceBy=""

// Here is the instance table = source(1)
Voltage.Discovery.InstanceTable=%Voltage.Discovery.Source(1)%
Voltage.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Voltage.Discovery.Instance.VoltageType=InstanceTable.Column(4)
Voltage.Discovery.Instance.UpperThreshold=InstanceTable.Column(3)
Voltage.Discovery.Instance.LowerThreshold=InstanceTable.Column(2)
Voltage.Discovery.Instance.AttachedToDeviceID="DIR5"
Voltage.Discovery.Instance.AttachedToDeviceType="Computer"

// The VoltageTypeTranslationTable
VoltageTypeTranslationTable(0)=""
VoltageTypeTranslationTable(1)="+2.5a V"
VoltageTypeTranslationTable(2)="+2.5b V"
VoltageTypeTranslationTable(3)="+3.3 V"
VoltageTypeTranslationTable(4)="+5 V"
VoltageTypeTranslationTable(5)="+12 V"
VoltageTypeTranslationTable(6)="-12 V"
VoltageTypeTranslationTable(7)="-5 V"
VoltageTypeTranslationTable(8)="VIO"
VoltageTypeTranslationTable(9)="Vcore"
VoltageTypeTranslationTable(10)="Bus"
VoltageTypeTranslationTable(11)="+1.25 V"
VoltageTypeTranslationTable(12)="+1.5 V"
VoltageTypeTranslationTable(13)="+18 V"
VoltageTypeTranslationTable(14)="+1.8 V"
VoltageTypeTranslationTable(15)="Remote +12 V"
VoltageTypeTranslationTable(16)="Remote -12 V"
VoltageTypeTranslationTable(17)="Remote +5 V"
VoltageTypeTranslationTable(18)="Remote +3.3 V"
VoltageTypeTranslationTable(19)="Remote +2.5 V"
VoltageTypeTranslationTable(20)="Remote +1.25 V"
VoltageTypeTranslationTable(21)="Remote +1.5 V"
VoltageTypeTranslationTable(22)="Remote +18 V"
VoltageTypeTranslationTable(23)="Remote +1.8 V"
VoltageTypeTranslationTable(Default)=""

//
// Collect

// It's a "MultiInstance" collect
Voltage.Collect.Type="MultiInstance"

// Source(1) = the IBMPSG_VoltageSensor class
Voltage.Collect.Source(1).Type="WMI"
Voltage.Collect.Source(1).WbemQuery="SELECT CurrentReading,DeviceID FROM IBMPSG_VoltageSensor"
Voltage.Collect.Source(1).WbemNameSpace="root\ibmsd"

// ValueTable = Source(1)
Voltage.Collect.ValueTable=%Voltage.Collect.Source(1)%
Voltage.Collect.DeviceID=ValueTable.Column(2)
Voltage.Collect.Voltage=ValueTable.Column(1)


//
//  Power supplies
//

//
// Discovery

// Source(1) = The IBMPSG_PowerSupply table
PowerSupply.Discovery.Source(1).Type="WMI"
PowerSupply.Discovery.Source(1).WbemQuery="SELECT DeviceID FROM IBMPSG_PowerSupply"
PowerSupply.Discovery.Source(1).WbemNameSpace="root\ibmsd"

// The instance table:
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.AttachedToDeviceID="DIR5"
PowerSupply.Discovery.Instance.AttachedToDeviceType="Computer"

//
// Collect

// Collect type : multi instance (one source for several instances)
PowerSupply.Collect.Type="MultiInstance"

// Source(1) = the simple IBMPSG_PowerSupply table/class
// DeviceID;WBEMStatus
PowerSupply.Collect.Source(1).Type="WMI"
PowerSupply.Collect.Source(1).WbemQuery="SELECT DeviceID,Status FROM IBMPSG_PowerSupply"
PowerSupply.Collect.Source(1).WbemNameSpace="root\ibmsd"

// Duplicate the status column
// DeviceID;WBEMStatus;WBEMStatus
PowerSupply.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(1).Column="2"

// Translate the first WBEM status column into a PATROL status
// DeviceID;PatrolStatus;WBEMStatus
PowerSupply.Collect.Source(1).Compute(2).Type="Translate"
PowerSupply.Collect.Source(1).Compute(2).Column="2"
PowerSupply.Collect.Source(1).Compute(2).TranslationTable="PowerSupplyStatusTranslationTable"

// The PowerSupplyStatusTranslationTable
PowerSupplyStatusTranslationTable("OK")="OK"
PowerSupplyStatusTranslationTable("Error")="ALARM"
PowerSupplyStatusTranslationTable("Degraded")="WARN"
PowerSupplyStatusTranslationTable("Pred Fail")="WARN"
PowerSupplyStatusTranslationTable("Starting")="WARN"
PowerSupplyStatusTranslationTable("Stopping")="WARN"
PowerSupplyStatusTranslationTable("Service")="WARN"
PowerSupplyStatusTranslationTable("Stressed")="WARN"
PowerSupplyStatusTranslationTable("NonRecover")="ALARM"
PowerSupplyStatusTranslationTable("No Contact")="WARN"
PowerSupplyStatusTranslationTable("Lost Comm")="WARN"
PowerSupplyStatusTranslationTable("Stopped")="OK"
PowerSupplyStatusTranslationTable(Default)="UNKNOWN"

// Translate the second WBEM status column into a PATROL status
// DeviceID;PatrolStatus;StatusInformation
PowerSupply.Collect.Source(1).Compute(3).Type="Translate"
PowerSupply.Collect.Source(1).Compute(3).Column="3"
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="PowerSupplyStatusInformationTranslationTable"

// The PowerSupplyStatusInformationTranslationTable
PowerSupplyStatusInformationTranslationTable("OK")=""
PowerSupplyStatusInformationTranslationTable("Error")="Error"
PowerSupplyStatusInformationTranslationTable("Degraded")="Degraded"
PowerSupplyStatusInformationTranslationTable("Pred Fail")="Predicted Failure"
PowerSupplyStatusInformationTranslationTable("Starting")="Starting"
PowerSupplyStatusInformationTranslationTable("Stopping")="Stopping"
PowerSupplyStatusInformationTranslationTable("Service")="Service"
PowerSupplyStatusInformationTranslationTable("Stressed")="Stressed"
PowerSupplyStatusInformationTranslationTable("NonRecover")="Non Recover"
PowerSupplyStatusInformationTranslationTable("No Contact")="No Contact"
PowerSupplyStatusInformationTranslationTable("Lost Comm")="Lost Communication"
PowerSupplyStatusInformationTranslationTable("Stopped")="Stopped"
PowerSupplyStatusInformationTranslationTable(Default)="Unknown Status"

// The ValueTable = Source(1)
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)

