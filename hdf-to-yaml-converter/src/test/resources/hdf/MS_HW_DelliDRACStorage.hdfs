//
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//                   MS_HW_DelliDRACStorage.hdf
//
//      Connects to: Dell iDRAC Management Card
//
//


// Header

hdf.DisplayName="Dell iDRAC - Storage"
hdf.TypicalPlatform="Dell PowerEdge"
hdf.ReliesOn="Dell iDRAC Management Card (iDRAC7 or Later)"
hdf.Version="1.0"
hdf.Comments="This connector provides server storage monitoring through Dell's iDRAC Management Card for Dell servers with iDRAC7 or later."
hdf.RemoteSupport="true"
hdf.AppliesToOS="OOB"

// Detection
// Ensure that the physicalDiskTable is populated
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.674.10892.5.5.1.20.130.4"

// Get the list of Disk Enclosures
// EnclosureID;Model;ServiceTag;Location;FQDD;
Enclosure.Discovery.Source(1).Type="SnmpTable"
Enclosure.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.3.1"
Enclosure.Discovery.Source(1).SnmpTableSelectColumns="1,2,8,45,47"

// Extract the Raid Controller Name from the FQDD
// EnclosureID;Model;ServiceTag;Location;EnclosureFQDD;
Enclosure.Discovery.Source(1).Compute(1).Type="Extract"
Enclosure.Discovery.Source(1).Compute(1).Column=5
Enclosure.Discovery.Source(1).Compute(1).SubSeparators=":"
Enclosure.Discovery.Source(1).Compute(1).SubColumn=1

// Get a list of server enclosures
// ChassisID;
Enclosure.Discovery.Source(2).Type="SnmpTable"
Enclosure.Discovery.Source(2).SnmpTableOid="1.3.6.1.4.1.674.10892.5.4.300.10.1"
Enclosure.Discovery.Source(2).SnmpTableSelectColumns="1"

// Add "Not Applicable", i.e. internal enclosure to the name
// EnclosureID;ChassisID;
Enclosure.Discovery.Source(2).Compute(1).Type="LeftConcat"
Enclosure.Discovery.Source(2).Compute(1).Column=1
Enclosure.Discovery.Source(2).Compute(1).String="Not Applicable;"

// Join the Storage Enclosures to Chassis (the location of Not Applicable will match the Not Applicable we added to the server chassis table)
// EnclosureID;Model;ServiceTag;Location;EnclosureFQDD;EnclosureID;ChassisID;
Enclosure.Discovery.Source(3).Type="TableJoint"
Enclosure.Discovery.Source(3).LeftTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Source(3).RightTable=%Enclosure.Discovery.Source(2)%
Enclosure.Discovery.Source(3).LeftKeyColumn=4
Enclosure.Discovery.Source(3).RightKeyColumn=1
Enclosure.Discovery.Source(3).DefaultRightLine="Storage;;"

// Replace the enclosure type of "Not Applicable" with "Computer".  For DAS, the default right line above would have filled this in.
// EnclosureID;Model;ServiceTag;Location;EnclosureFQDD;EnclosureType;ChassisID;
Enclosure.Discovery.Source(3).Compute(1).Type="Replace"
Enclosure.Discovery.Source(3).Compute(1).Column=6
Enclosure.Discovery.Source(3).Compute(1).Replace="Not Applicable"
Enclosure.Discovery.Source(3).Compute(1).ReplaceBy="Computer"

// Replace the Enclosure ID of "Not Applicable" with the Chassis ID (applicable for internal disks
// EnclosureID;Model;ServiceTag;Location;EnclosureFQDD;EnclosureType;ChassisID;
Enclosure.Discovery.Source(3).Compute(2).Type="Replace"
Enclosure.Discovery.Source(3).Compute(2).Column=1
Enclosure.Discovery.Source(3).Compute(2).Replace="Not Applicable"
Enclosure.Discovery.Source(3).Compute(2).ReplaceBy=Column(7)

// Copy Source (3) for association purposes (EnclosureID to AssociatedRaidController)
// EnclosureID;Model;ServiceTag;Location;EnclosureFQDD;EnclosureType;ChassisID;
Enclosure.Discovery.Source(4)=%Enclosure.Discovery.Source(3)%

// Keep only the EnclosureID and AssociatedRaidController (becomes RaidControllerFQDD) and EnclosureType
// EnclosureID;EnclosureFQDD;EnclosureType;
Enclosure.Discovery.Source(4).Compute(1).Type="KeepColumns"
Enclosure.Discovery.Source(4).Compute(1).ColumnNumbers="1,5,6"

// Exclude Enclosure types of "Computer" as we can't specify enclosures from another connector, so we want it to use the default allocation system.
// EnclosureID;EnclosureFQDD;EnclosureType;
Enclosure.Discovery.Source(4).Compute(2).Type="ExcludeMatchingLines"
Enclosure.Discovery.Source(4).Compute(2).Column=3
Enclosure.Discovery.Source(4).Compute(2).ValueList="Computer"

// Copy Source (3) to filter out Direct Attached Storage
// EnclosureID;Model;ServiceTag;Location;EnclosureFQDD;EnclosureType;ChassisID;
Enclosure.Discovery.Source(5)=%Enclosure.Discovery.Source(3)%

// Keep only "Direct Attached Storage"
// EnclosureID;Model;ServiceTag;Location;EnclosureFQDD;EnclosureType;ChassisID;
Enclosure.Discovery.Source(5).Compute(1).Type="ExcludeMatchingLines"
Enclosure.Discovery.Source(5).Compute(1).Column=3
Enclosure.Discovery.Source(5).Compute(1).ValueList="Not Applicable"

// The Instance Table
// EnclosureID;Model;ServiceTag;Location;EnclosureFQDD;EnclosureType;ChassisID;
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(5)%
Enclosure.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Enclosure.Discovery.Instance.Vendor="Dell"
Enclosure.Discovery.Instance.Model=InstanceTable.Column(2)
Enclosure.Discovery.Instance.SerialNumber=InstanceTable.Column(3)
Enclosure.Discovery.Instance.Type=InstanceTable.Column(6)

// Enclosure.collect

// Collect type is MultiInstance
Enclosure.Collect.Type="MultiInstance"

// Enclosure Table
// EnclosureID;Status;Position;
Enclosure.Collect.Source(1).Type="SnmpTable"
Enclosure.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.3.1"
Enclosure.Collect.Source(1).SnmpTableSelectColumns="ID,24,45"

// Exclude enclosures that have a position of N/A, i.e. inside the server chassis.
// EnclosureID;Status;Position;
Enclosure.Collect.Source(1).Compute(1).Type="ExcludeMatchingLines"
Enclosure.Collect.Source(1).Compute(1).Column=3
Enclosure.Collect.Source(1).Compute(1).ValueList="Not Applicable"

// Duplicate the Status column
// EnclosureID;Status;Status;Position;
Enclosure.Collect.Source(1).Compute(2).Type="DuplicateColumn"
Enclosure.Collect.Source(1).Compute(2).Column=2

// Translate first Enclosure.robeStatus into a PATROL status
// EnclosureID;PATROLStatus;Status;Position;
Enclosure.Collect.Source(1).Compute(3).Type="Translate"
Enclosure.Collect.Source(1).Compute(3).Column=2
Enclosure.Collect.Source(1).Compute(3).TranslationTable="GenericStatusTranslationTable"

// Translate second Enclosure.robeStatus into a more readable string
// EnclosureID;PATROLStatus;statusInformation;Position;
Enclosure.Collect.Source(1).Compute(4).Type="Translate"
Enclosure.Collect.Source(1).Compute(4).Column=3
Enclosure.Collect.Source(1).Compute(4).TranslationTable="GenericStatusInformationTranslationTable"

// The ValueTable = Source(1)
Enclosure.Collect.ValueTable=%Enclosure.Collect.Source(1)%
Enclosure.Collect.DeviceID=ValueTable.Column(1)
Enclosure.Collect.Status=ValueTable.Column(2)
Enclosure.Collect.StatusInformation=ValueTable.Column(3)

//
// Disk controllers
//

//
// Discovery

// Source(1) = the controllerTable
// ControllerID;Model;FWVersion;DriverVersion;RaidControllerFQDD;Location;
DiskController.Discovery.Source(1).Type="SnmpTable"
DiskController.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.1.1"
DiskController.Discovery.Source(1).SnmpTableSelectColumns="1,2,8,41,78,79"

// The InstanceTable
// ControllerID;Model;FWVersion;DriverVersion;RaidControllerFQDD;Location;
DiskController.Discovery.InstanceTable=%DiskController.Discovery.Source(1)%
DiskController.Discovery.Instance.DeviceID=InstanceTable.Column(1)
DiskController.Discovery.Instance.ControllerNumber=InstanceTable.Column(5)
DiskController.Discovery.Instance.Model=InstanceTable.Column(2)
DiskController.Discovery.Instance.FirmwareVersion=InstanceTable.Column(3)
DiskController.Discovery.Instance.DriverVersion=InstanceTable.Column(4)
// DiskController.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(7)
// DiskController.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(9)

// DiskController.collect

// Collect type is MultiInstance
DiskController.Collect.Type="MultiInstance"

//ControllerID;Status;
DiskController.Collect.Source(1).Type="SnmpTable"
DiskController.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.1.1"
DiskController.Collect.Source(1).SnmpTableSelectColumns="ID,38"

// Duplicate the Status column
// ControllerID;Status;Status;
DiskController.Collect.Source(1).Compute(1).Type="DuplicateColumn"
DiskController.Collect.Source(1).Compute(1).Column=2

// Translate first DiskController.robeStatus into a PATROL status
// ControllerID;PATROLStatus;Status;
DiskController.Collect.Source(1).Compute(2).Type="Translate"
DiskController.Collect.Source(1).Compute(2).Column=2
DiskController.Collect.Source(1).Compute(2).TranslationTable="GenericStatusTranslationTable"

// Translate second DiskController.robeStatus into a more readable string
// ControllerID;PATROLStatus;statusInformation;
DiskController.Collect.Source(1).Compute(3).Type="Translate"
DiskController.Collect.Source(1).Compute(3).Column=3
DiskController.Collect.Source(1).Compute(3).TranslationTable="GenericStatusInformationTranslationTable"

// The ValueTable = Source(1)
DiskController.Collect.ValueTable=%DiskController.Collect.Source(1)%
DiskController.Collect.DeviceID=ValueTable.Column(1)
DiskController.Collect.ControllerStatus=ValueTable.Column(2)
DiskController.Collect.StatusInformation=ValueTable.Column(3)


///////////////////////////////////////////////
///  ***  P H Y S I C A L   D I S K S   *** ///
///////////////////////////////////////////////

//
// Discovery

// Source(1) = the physicalDiskTableEntry snmp table
// DiskID;Manufacturer;Model:SerialNumber;SizeMB;PartNumber;DiskFQDD;Location;physicalDiskName;State;FirmwareVersion
PhysicalDisk.Discovery.Source(1).Type="SnmpTable"
PhysicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1"
PhysicalDisk.Discovery.Source(1).SnmpTableSelectColumns="1,3,6,7,11,27,54,55,2,4,8"

//Remove disks flagged as removed
// DiskID;Manufacturer;Model;SerialNumber;SizeB;PartNumber;EnclosureFQDD;Location;physicalDiskName;State;FirmwareVersion;
PhysicalDisk.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
PhysicalDisk.Discovery.Source(1).Compute(1).Column=10
PhysicalDisk.Discovery.Source(1).Compute(1).ValueList=9

// Extract the Controller Number from the DiskFQDD
// DiskID;Manufacturer;Model:SerialNumber;SizeMB;PartNumber;EnclosureFQDD;Location;physicalDiskName;State;FirmwareVersion;
PhysicalDisk.Discovery.Source(1).Compute(2).Type="Extract"
PhysicalDisk.Discovery.Source(1).Compute(2).Column=7
PhysicalDisk.Discovery.Source(1).Compute(2).SubSeparators=":"
PhysicalDisk.Discovery.Source(1).Compute(2).SubColumn=2

// Convert MB to B
// DiskID;Manufacturer;Model:SerialNumber;SizeB;PartNumber;EnclosureFQDD;Location;physicalDiskName;State;FirmwareVersion;
PhysicalDisk.Discovery.Source(1).Compute(3).Type="Multiply"
PhysicalDisk.Discovery.Source(1).Compute(3).Column=5
PhysicalDisk.Discovery.Source(1).Compute(3).MultiplyBy=1048576

// Add "Part Number"
// DiskID;Manufacturer;Model:SerialNumber;SizeB;PartNumber;EnclosureFQDD;Location;physicalDiskName;State;FirmwareVersion;
PhysicalDisk.Discovery.Source(1).Compute(4).Type="LeftConcat"
PhysicalDisk.Discovery.Source(1).Compute(4).Column=6
PhysicalDisk.Discovery.Source(1).Compute(4).String="Part Number: "

// Add "Location"
// DiskID;Manufacturer;Model:SerialNumber;SizeB;PartNumber;EnclosureFQDD;Location;physicalDiskName;State;FirmwareVersion
PhysicalDisk.Discovery.Source(1).Compute(5).Type="LeftConcat"
PhysicalDisk.Discovery.Source(1).Compute(5).Column=8
PhysicalDisk.Discovery.Source(1).Compute(5).String="Location: "


// Attach the PhysicalDisk. to the Enclosures using Enclosure.Discovery(4)
// Internal Disks are not suppose to match, so will have a blank attach to and will be attached to the default main server enclosure
// DiskID;Manufacturer;Model:SerialNumber;SizeB;PartNumber;EnclosureFQDD;Location;physicalDiskName;State;EnclosureID;EnclosureFQDD;EnclosureType;
PhysicalDisk.Discovery.Source(2).Type="TableJoint"
PhysicalDisk.Discovery.Source(2).LeftTable=%PhysicalDisk.Discovery.Source(1)%
PhysicalDisk.Discovery.Source(2).RightTable=%Enclosure.Discovery.Source(4)%
PhysicalDisk.Discovery.Source(2).LeftKeyColumn=7
PhysicalDisk.Discovery.Source(2).RightKeyColumn=2
PhysicalDisk.Discovery.Source(2).DefaultRightLine=";;;"


// The instance table = Source(1)
// DiskID;Manufacturer;Model;SerialNumber;SizeB;PartNumber;EnclosureFQDD;Location;physicalDiskName;State;FirmwareVersion;EnclosureID;EnclosureFQDD;EnclosureType;
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(2)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(9)
PhysicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(9)
// PhysicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(7)
PhysicalDisk.Discovery.Instance.Vendor=InstanceTable.Column(2)
PhysicalDisk.Discovery.Instance.Size=InstanceTable.Column(5)
PhysicalDisk.Discovery.Instance.SerialNumber=InstanceTable.Column(4)
PhysicalDisk.Discovery.Instance.FirmwareVersion=InstanceTable.Column(11)
PhysicalDisk.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(8)
PhysicalDisk.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(6)
PhysicalDisk.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(12)
// PhysicalDisk.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(11)

// PhysicalDisk.collect

// Collect type is MultiInstance
PhysicalDisk.Collect.Type="MultiInstance"

//PhysicalDiskID;State;Status;
PhysicalDisk.Collect.Source(1).Type="SnmpTable"
PhysicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1"
PhysicalDisk.Collect.Source(1).SnmpTableSelectColumns="2,4,24"

// Translate first PhysicalDisk.robeStatus into a PATROL status
// PhysicalDiskID;State;PATROLStatus;
PhysicalDisk.Collect.Source(1).Compute(1).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(1).Column=3
PhysicalDisk.Collect.Source(1).Compute(1).TranslationTable="GenericStatusTranslationTable"

// Translate PhysicalDisk State into a status information
// PhysicalDiskID;statusInformation;PATROLStatus;
PhysicalDisk.Collect.Source(1).Compute(2).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(2).Column=2
PhysicalDisk.Collect.Source(1).Compute(2).TranslationTable="PhysicalStateInformationTranslationTable"

// The GenericStatusInformationTranslationTable
PhysicalStateInformationTranslationTable(2)="Ready"
PhysicalStateInformationTranslationTable(3)="Online"
PhysicalStateInformationTranslationTable(4)="Foreign"
PhysicalStateInformationTranslationTable(5)="Offline"
PhysicalStateInformationTranslationTable(6)="Blocked"
PhysicalStateInformationTranslationTable(7)="Failed"
PhysicalStateInformationTranslationTable(8)="Non-Raid"
PhysicalStateInformationTranslationTable(9)="Removed"
PhysicalStateInformationTranslationTable(Default)="Unknown Status"

// The ValueTable = Source(1)
// PhysicalDiskID;statusInformation;PATROLStatus;
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(1)
PhysicalDisk.Collect.Status=ValueTable.Column(3)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(2)

///////////////////////////////////////////////
///  ***  L O G I C A L   D I S K S   ***   ///
///////////////////////////////////////////////

//
// Discovery

// Source(1) = the virtualDiskTable snmp table
// LogicalDiskID;Name;SizeMB;RaidLevel;LogicalDiskFDQQ;Location;virtualDiskName
LogicalDisk.Discovery.Source(1).Type="SnmpTable"
LogicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.140.1.1"
LogicalDisk.Discovery.Source(1).SnmpTableSelectColumns="1,2,6,13,35,36,2"

// Extract the Controller Number from the DiskFQDD
// LogicalDiskID;Name;SizeMB;RaidLevel;ControllerNumber;Location;virtualDiskName
LogicalDisk.Discovery.Source(1).Compute(1).Type="Extract"
LogicalDisk.Discovery.Source(1).Compute(1).Column=5
LogicalDisk.Discovery.Source(1).Compute(1).SubSeparators=":"
LogicalDisk.Discovery.Source(1).Compute(1).SubColumn=2

// Convert MB to B
// LogicalDiskID;Name;SizeB;RaidLevel;ControllerNumber;Location;virtualDiskName
LogicalDisk.Discovery.Source(1).Compute(2).Type="Multiply"
LogicalDisk.Discovery.Source(1).Compute(2).Column=3
LogicalDisk.Discovery.Source(1).Compute(2).MultiplyBy=1048576

// Translate the RaidLevel into a more readable string
// LogicalDiskID;Name;SizeB;RaidLevel;ControllerNumber;Location;virtualDiskName
LogicalDisk.Discovery.Source(1).Compute(3).Type="Translate"
LogicalDisk.Discovery.Source(1).Compute(3).Column=4
LogicalDisk.Discovery.Source(1).Compute(3).TranslationTable="RAIDLevelTranslationTable"

// The RAIDLevelTranslationTable
RAIDLevelTranslationTable(1)=""
RAIDLevelTranslationTable(2)="0"
RAIDLevelTranslationTable(3)="1"
RAIDLevelTranslationTable(4)="5"
RAIDLevelTranslationTable(5)="6"
RAIDLevelTranslationTable(6)="10"
RAIDLevelTranslationTable(7)="50"
RAIDLevelTranslationTable(8)="60"
RAIDLevelTranslationTable(9)="Concatenated 1"
RAIDLevelTranslationTable(10)="Concatenated 5"
RAIDLevelTranslationTable(Default)=""

// The InstanceTable
// LogicalDiskID;Name;SizeB;RaidLevel;ControllerNumber;Location;virtualDiskName
LogicalDisk.Discovery.InstanceTable=%LogicalDisk.Discovery.Source(1)%
LogicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
LogicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(7)
LogicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(5)
LogicalDisk.Discovery.Instance.Size=InstanceTable.Column(3)
LogicalDisk.Discovery.Instance.RAIDLevel=InstanceTable.Column(4)
LogicalDisk.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(6)
LogicalDisk.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(2)

// LogicalDisk.collect

// Collect type is MultiInstance
LogicalDisk.Collect.Type="MultiInstance"

// LogicalDiskID;Status;
LogicalDisk.Collect.Source(1).Type="SnmpTable"
LogicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.140.1.1"
LogicalDisk.Collect.Source(1).SnmpTableSelectColumns="ID,20"

// Duplicate the Status column
// LogicalDiskID;Status;Status;
LogicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
LogicalDisk.Collect.Source(1).Compute(1).Column=2

// Translate first LogicalDisk.robeStatus into a PATROL status
// LogicalDiskID;PATROLStatus;Status;
LogicalDisk.Collect.Source(1).Compute(2).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(2).Column=2
LogicalDisk.Collect.Source(1).Compute(2).TranslationTable="GenericStatusTranslationTable"

// Translate second LogicalDisk.robeStatus into a more readable string
// LogicalDiskID;PATROLStatus;statusInformation;
LogicalDisk.Collect.Source(1).Compute(3).Type="Translate"
LogicalDisk.Collect.Source(1).Compute(3).Column=3
LogicalDisk.Collect.Source(1).Compute(3).TranslationTable="GenericStatusInformationTranslationTable"

// The ValueTable = Source(1)
LogicalDisk.Collect.ValueTable=%LogicalDisk.Collect.Source(1)%
LogicalDisk.Collect.DeviceID=ValueTable.Column(1)
LogicalDisk.Collect.Status=ValueTable.Column(2)
LogicalDisk.Collect.StatusInformation=ValueTable.Column(3)

// Fan.

// Fan.discovery
// FanID;FanFQDD;Location;
Fan.Discovery.Source(1).Type="SnmpTable"
Fan.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.7.1"
Fan.Discovery.Source(1).SnmpTableSelectColumns="ID,20,21"

// Extract the Enclosure FQDD from the Fan FQDD
// FanID;EnclosureFQDD;Location;
Fan.Discovery.Source(1).Compute(1).Type="Extract"
Fan.Discovery.Source(1).Compute(1).Column=2
Fan.Discovery.Source(1).Compute(1).SubSeparators=":"
Fan.Discovery.Source(1).Compute(1).SubColumn=2

// Attach the PhysicalDisk. to the Enclosures using Enclosure.Discovery(4)
// FanID;EnclosureFQDD;Location;EnclosureID;EnclosureFQDD;EnclosureType;
Fan.Discovery.Source(2).Type="TableJoint"
Fan.Discovery.Source(2).LeftTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Source(2).RightTable=%Enclosure.Discovery.Source(4)%
Fan.Discovery.Source(2).LeftKeyColumn=2
Fan.Discovery.Source(2).RightKeyColumn=2
// Fan.Discovery.Source(2).DefaultRightLine=";;;"

// Instance Table
// FanID;EnclosureFQDD;Location;EnclosureID;EnclosureFQDD;EnclosureType;
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(2)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(3)
Fan.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
// Fan.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(6)

// Fan.collect

// Collect type is MultiInstance
Fan.Collect.Type="MultiInstance"

// FanID;Status;
Fan.Collect.Source(1).Type="SnmpTable"
Fan.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.7.1"
Fan.Collect.Source(1).SnmpTableSelectColumns="1,15"

// Duplicate the Status column
// FanID;Status;Status;
Fan.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Fan.Collect.Source(1).Compute(1).Column=2

// Translate first Fan.robeStatus into a PATROL status
// FanID;PATROLStatus;Status;
Fan.Collect.Source(1).Compute(2).Type="Translate"
Fan.Collect.Source(1).Compute(2).Column=2
Fan.Collect.Source(1).Compute(2).TranslationTable="GenericStatusTranslationTable"

// Translate second Fan.robeStatus into a more readable string
// FanID;PATROLStatus;statusInformation;
Fan.Collect.Source(1).Compute(3).Type="Translate"
Fan.Collect.Source(1).Compute(3).Column=3
Fan.Collect.Source(1).Compute(3).TranslationTable="GenericStatusInformationTranslationTable"

// The ValueTable = Source(1)
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(2)
Fan.Collect.StatusInformation=ValueTable.Column(3)

// PowerSupply.

// PowerSupply.discovery
// PSUID;PartNumber;FanFQDD;Location;
PowerSupply.Discovery.Source(1).Type="SnmpTable"
PowerSupply.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.9.1"
PowerSupply.Discovery.Source(1).SnmpTableSelectColumns="ID,7,15,16"

// Extract the Enclosure FQDD from the Fan FQDD
// PSUID;PartNumber;EnclosureFQDD;Location;
PowerSupply.Discovery.Source(1).Compute(1).Type="Extract"
PowerSupply.Discovery.Source(1).Compute(1).Column=3
PowerSupply.Discovery.Source(1).Compute(1).SubSeparators=":"
PowerSupply.Discovery.Source(1).Compute(1).SubColumn=2

// Add Part Number Tag
// PSUID;PartNumber;EnclosureFQDD;Location;
PowerSupply.Discovery.Source(1).Compute(2).Type="LeftConcat"
PowerSupply.Discovery.Source(1).Compute(2).Column=2
PowerSupply.Discovery.Source(1).Compute(2).String="Part Number: "

// Attach the PhysicalDisk. to the Enclosures using Enclosure.Discovery(4)
// PSUID;PartNumber;EnclosureFQDD;Location;EnclosureID;EnclosureFQDD;EnclosureType;
PowerSupply.Discovery.Source(2).Type="TableJoint"
PowerSupply.Discovery.Source(2).LeftTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Source(2).RightTable=%Enclosure.Discovery.Source(4)%
PowerSupply.Discovery.Source(2).LeftKeyColumn=3
PowerSupply.Discovery.Source(2).RightKeyColumn=2
// PowerSupply.Discovery.Source(2).DefaultRightLine=";;;"

// Instance Table
// PSUID;PartNumber;EnclosureFQDD;Location;EnclosureID;EnclosureFQDD;EnclosureType;
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(2)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(4)
PowerSupply.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(2)
PowerSupply.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(5)
// PowerSupply.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(7)

// PowerSupply.collect

// Collect type is MultiInstance
PowerSupply.Collect.Type="MultiInstance"

// PSUID;Status;
PowerSupply.Collect.Source(1).Type="SnmpTable"
PowerSupply.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.9.1"
PowerSupply.Collect.Source(1).SnmpTableSelectColumns="1,9"

// Duplicate the Status column
// PSUID;Status;Status;
PowerSupply.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PowerSupply.Collect.Source(1).Compute(1).Column=2

// Translate first PowerSupply.robeStatus into a PATROL status
// PSUID;PATROLStatus;Status;
PowerSupply.Collect.Source(1).Compute(2).Type="Translate"
PowerSupply.Collect.Source(1).Compute(2).Column=2
PowerSupply.Collect.Source(1).Compute(2).TranslationTable="GenericStatusTranslationTable"

// Translate second PowerSupply.robeStatus into a more readable string
// PSUID;PATROLStatus;statusInformation;
PowerSupply.Collect.Source(1).Compute(3).Type="Translate"
PowerSupply.Collect.Source(1).Compute(3).Column=3
PowerSupply.Collect.Source(1).Compute(3).TranslationTable="GenericStatusInformationTranslationTable"

// The ValueTable = Source(1)
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)

// OtherDevice.

// OtherDevice.discovery
// OtherDeviceID;Type;PartNumber;DeviceFQDD;Location;
OtherDevice.Discovery.Source(1).Type="SnmpTable"
OtherDevice.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.13.1"
OtherDevice.Discovery.Source(1).SnmpTableSelectColumns="ID,2,6,15,16"

// Extract the Enclosure FQDD from the Fan FQDD
// OtherDeviceID;Type;PartNumber;EnclosureFQDD;Location;
OtherDevice.Discovery.Source(1).Compute(1).Type="Extract"
OtherDevice.Discovery.Source(1).Compute(1).Column=4
OtherDevice.Discovery.Source(1).Compute(1).SubSeparators=":"
OtherDevice.Discovery.Source(1).Compute(1).SubColumn=2

// Add Part Number Tag
// OtherDeviceID;Type;PartNumber;EnclosureFQDD;Location;
OtherDevice.Discovery.Source(1).Compute(2).Type="LeftConcat"
OtherDevice.Discovery.Source(1).Compute(2).Column=3
OtherDevice.Discovery.Source(1).Compute(2).String="Part Number: "

// Attach the PhysicalDisk. to the Enclosures using Enclosure.Discovery(4)
// OtherDeviceID;Type;PartNumber;EnclosureFQDD;Location;EnclosureID;EnclosureFQDD;EnclosureType;
OtherDevice.Discovery.Source(2).Type="TableJoint"
OtherDevice.Discovery.Source(2).LeftTable=%OtherDevice.Discovery.Source(1)%
OtherDevice.Discovery.Source(2).RightTable=%Enclosure.Discovery.Source(4)%
OtherDevice.Discovery.Source(2).LeftKeyColumn=4
OtherDevice.Discovery.Source(2).RightKeyColumn=2
// OtherDevice.Discovery.Source(2).DefaultRightLine=";;;"

// Instance Table
// OtherDeviceID;Type;PartNumber;EnclosureFQDD;Location;EnclosureID;EnclosureFQDD;EnclosureType;
OtherDevice.Discovery.InstanceTable=%OtherDevice.Discovery.Source(2)%
OtherDevice.Discovery.Instance.DeviceID=InstanceTable.Column(1)
OtherDevice.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(5)
OtherDevice.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(3)
OtherDevice.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(6)
OtherDevice.Discovery.Instance.DeviceType=InstanceTable.Column(2)
// OtherDevice.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(6)

// OtherDevice.collect

// Collect type is MultiInstance
OtherDevice.Collect.Type="MultiInstance"

// OtherDeviceID;Status;
OtherDevice.Collect.Source(1).Type="SnmpTable"
OtherDevice.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.13.1"
OtherDevice.Collect.Source(1).SnmpTableSelectColumns="1,11"

// Duplicate the Status column
// OtherDeviceID;Status;Status;
OtherDevice.Collect.Source(1).Compute(1).Type="DuplicateColumn"
OtherDevice.Collect.Source(1).Compute(1).Column=2

// Translate first OtherDevice.robeStatus into a PATROL status
// OtherDeviceID;PATROLStatus;Status;
OtherDevice.Collect.Source(1).Compute(2).Type="Translate"
OtherDevice.Collect.Source(1).Compute(2).Column=2
OtherDevice.Collect.Source(1).Compute(2).TranslationTable="GenericStatusTranslationTable"

// Translate second OtherDevice.robeStatus into a more readable string
// OtherDeviceID;PATROLStatus;statusInformation;
OtherDevice.Collect.Source(1).Compute(3).Type="Translate"
OtherDevice.Collect.Source(1).Compute(3).Column=3
OtherDevice.Collect.Source(1).Compute(3).TranslationTable="GenericStatusInformationTranslationTable"

// The ValueTable = Source(1)
OtherDevice.Collect.ValueTable=%OtherDevice.Collect.Source(1)%
OtherDevice.Collect.DeviceID=ValueTable.Column(1)
OtherDevice.Collect.Status=ValueTable.Column(2)
OtherDevice.Collect.StatusInformation=ValueTable.Column(3)

// Battery.

// Battery.discovery
// BatteryID;BatteryFQDD;Location;
Battery.Discovery.Source(1).Type="SnmpTable"
Battery.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.15.1"
Battery.Discovery.Source(1).SnmpTableSelectColumns="ID,20,21"

// Extract the Enclosure FQDD from the Fan FQDD
// BatteryID;EnclosureFQDD;Location;
Battery.Discovery.Source(1).Compute(1).Type="Extract"
Battery.Discovery.Source(1).Compute(1).Column=2
Battery.Discovery.Source(1).Compute(1).SubSeparators=":"
Battery.Discovery.Source(1).Compute(1).SubColumn=2

// Attach the PhysicalDisk. to the Enclosures using Enclosure.Discovery(4)
// BatteryID;EnclosureFQDD;Location;EnclosureID;EnclosureFQDD;EnclosureType;
Battery.Discovery.Source(2).Type="TableJoint"
Battery.Discovery.Source(2).LeftTable=%Battery.Discovery.Source(1)%
Battery.Discovery.Source(2).RightTable=%Enclosure.Discovery.Source(4)%
Battery.Discovery.Source(2).LeftKeyColumn=2
Battery.Discovery.Source(2).RightKeyColumn=2
// Battery.Discovery.Source(2).DefaultRightLine=";;;"

// Instance Table
// BatteryID;EnclosureFQDD;Location;EnclosureID;EnclosureFQDD;EnclosureType;
Battery.Discovery.InstanceTable=%Battery.Discovery.Source(2)%
Battery.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Battery.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(3)
Battery.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
// Battery.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(6)

// Battery.collect

// Collect type is MultiInstance
Battery.Collect.Type="MultiInstance"

// BatteryID;Status;
Battery.Collect.Source(1).Type="SnmpTable"
Battery.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.674.10892.5.5.1.20.130.15.1"
Battery.Collect.Source(1).SnmpTableSelectColumns="1,6"

// Duplicate the Status column
// BatteryID;Status;Status;
Battery.Collect.Source(1).Compute(1).Type="DuplicateColumn"
Battery.Collect.Source(1).Compute(1).Column=2

// Translate first Battery.robeStatus into a PATROL status
// BatteryID;PATROLStatus;Status;
Battery.Collect.Source(1).Compute(2).Type="Translate"
Battery.Collect.Source(1).Compute(2).Column=2
Battery.Collect.Source(1).Compute(2).TranslationTable="GenericStatusTranslationTable"

// Translate second Battery.robeStatus into a more readable string
// BatteryID;PATROLStatus;statusInformation;
Battery.Collect.Source(1).Compute(3).Type="Translate"
Battery.Collect.Source(1).Compute(3).Column=3
Battery.Collect.Source(1).Compute(3).TranslationTable="GenericStatusInformationTranslationTable"

// The ValueTable = Source(1)
Battery.Collect.ValueTable=%Battery.Collect.Source(1)%
Battery.Collect.DeviceID=ValueTable.Column(1)
Battery.Collect.Status=ValueTable.Column(2)
Battery.Collect.StatusInformation=ValueTable.Column(3)

// The GenericStatusTranslationTable
GenericStatusTranslationTable(3)="OK"
GenericStatusTranslationTable(4)="WARN"
GenericStatusTranslationTable(5)="ALARM"
GenericStatusTranslationTable(6)="ALARM"
GenericStatusTranslationTable(Default)="UNKNOWN"

// The GenericStatusInformationTranslationTable
GenericStatusInformationTranslationTable(3)=""
GenericStatusInformationTranslationTable(4)="Non Critical"
GenericStatusInformationTranslationTable(5)="Critical"
GenericStatusInformationTranslationTable(6)="Unrecoverable"
GenericStatusInformationTranslationTable(Default)="Unknown Status"
