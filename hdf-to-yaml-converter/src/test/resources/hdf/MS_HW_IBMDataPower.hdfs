////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//               by Sentry Software (c)
//
//
//      Supports: IBM DataPower
//                Connects to the IBM DataPower SNMP Agent
//


//
// Header
//

hdf.DisplayName="IBM DataPower (SNMP)"
hdf.TypicalPlatform="IBM DataPower"
hdf.ReliesOn="IBM DataPower SNMP Agent"
hdf.Version="1.0"
hdf.Comments="This connector discovers the enclosure and the disks of IBM DataPower Appliances as well as the various environment sensors (temperatures, fans, power supplies). It relies on the SNMP protocol."
hdf.RemoteSupport="true"
hdf.LocalSupport="false"
hdf.AppliesToOS="OOB"

//
// Detection
//

// Verify that there is a Data Power Firmware
Detection.Criteria(1).Type="SNMP"
Detection.Criteria(1).SnmpGetNext="1.3.6.1.4.1.14685.3.1.100.1"

//
// Enclosure
//

// Source(1) = 	System SNMP table
// Description;Name;
Enclosure.Discovery.Source(1).Type="SnmpTable"
Enclosure.Discovery.Source(1).SnmpTableOid="1.3.6.1.2.1.1"
Enclosure.Discovery.Source(1).SnmpTableSelectColumns="1,5"

// Keep Only Descriptions that Contain DataPower
// Description;Name;
Enclosure.Discovery.Source(1).Compute(1).Type="KeepOnlyMatchingLines"
Enclosure.Discovery.Source(1).Compute(1).Column=1
Enclosure.Discovery.Source(1).Compute(1).RegExp="DataPower"

// Add the default manufacturer
// Manufacturer;Description;Name;
Enclosure.Discovery.Source(1).Compute(2).Type="LeftConcat"
Enclosure.Discovery.Source(1).Compute(2).Column=1
Enclosure.Discovery.Source(1).Compute(2).String="IBM;"

// Create an Instance Table (in case there is no useful info from Source(1)
// Manufacturer;
Enclosure.Discovery.Source(2)="IBM;"

// Manufacturer;Manufacturer;Description;Name;
Enclosure.Discovery.Source(3).Type="TableJoint"
Enclosure.Discovery.Source(3).LeftTable=%Enclosure.Discovery.Source(2)%
Enclosure.Discovery.Source(3).RightTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Source(3).LeftKeyColumn=1
Enclosure.Discovery.Source(3).RightKeyColumn=1
Enclosure.Discovery.Source(3).DefaultRightLine="IBM;DataPower;Appliance;"


// Instance Table
// Manufacturer;Manufacturer;Description;Name;
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(3)%
Enclosure.Discovery.Instance.DeviceID="DataPowerAppliance"
Enclosure.Discovery.Instance.Vendor=InstanceTable.Column(1)
Enclosure.Discovery.Instance.Model=InstanceTable.Column(3)
Enclosure.Discovery.Instance.DisplayID=InstanceTable.Column(4)
Enclosure.Discovery.Instance.Type="Computer"

// Collect

// No Collect for Enclosure



//
// Temperature
//

//
// Discovery

// Source(1) = dpStatusTemperatureSensorsTable
// ID;UpperNC;UpperC;
Temperature.Discovery.Source(1).Type="SnmpTable"
Temperature.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.14685.3.1.141.1"
Temperature.Discovery.Source(1).SnmpTableSelectColumns="1,3,6"

// Remove "Temperature " from the ID
// ID;UpperNC;UpperC;
Temperature.Discovery.Source(1).Compute(1).Type="Replace"
Temperature.Discovery.Source(1).Compute(1).Column=1
Temperature.Discovery.Source(1).Compute(1).Replace="Temperature "
Temperature.Discovery.Source(1).Compute(1).ReplaceBy=""

// InstanceTable = Source(1)
// ID;UpperNC;UpperC;
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Temperature.Discovery.Instance.DisplayID=InstanceTable.Column(1)
Temperature.Discovery.Instance.WarningThreshold=InstanceTable.Column(2)
Temperature.Discovery.Instance.AlarmThreshold=InstanceTable.Column(3)

//
// Collect

// Collect type = multi-instance
Temperature.Collect.Type="MultiInstance"

// Source(1) = connUnitSensorTable SNMP Table
// ID;Value;
Temperature.Collect.Source(1).Type="SnmpTable"
Temperature.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.14685.3.1.141.1"
Temperature.Collect.Source(1).SnmpTableSelectColumns="1,2"

// Remove "Temperature " from the ID
// ID;Value;
Temperature.Collect.Source(1).Compute(1).Type="Replace"
Temperature.Collect.Source(1).Compute(1).Column=1
Temperature.Collect.Source(1).Compute(1).Replace="Temperature "
Temperature.Collect.Source(1).Compute(1).ReplaceBy=""

// ValueTable = Source(1)
// ID;Value;
Temperature.Collect.ValueTable=%Temperature.Collect.Source(1)%
Temperature.Collect.DeviceID=ValueTable.Column(1)
Temperature.Collect.Temperature=ValueTable.Column(2)


//
// Voltage
//

//
// Discovery

// Source(1) = dpStatusVoltageSensorsTable
// ID;LowerC;UpperC;
Voltage.Discovery.Source(1).Type="SnmpTable"
Voltage.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.14685.3.1.140.1"
Voltage.Discovery.Source(1).SnmpTableSelectColumns="1,3,4"

// Remove "Voltage " from the ID
// ID;LowerC;UpperC;
Voltage.Discovery.Source(1).Compute(1).Type="Replace"
Voltage.Discovery.Source(1).Compute(1).Column=1
Voltage.Discovery.Source(1).Compute(1).Replace="Voltage "
Voltage.Discovery.Source(1).Compute(1).ReplaceBy=""

// InstanceTable = Source(1)
// ID;LowerC;UpperC;
Voltage.Discovery.InstanceTable=%Voltage.Discovery.Source(1)%
Voltage.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Voltage.Discovery.Instance.DisplayID=InstanceTable.Column(1)
Voltage.Discovery.Instance.UpperThreshold=InstanceTable.Column(3)
Voltage.Discovery.Instance.LowerThreshold=InstanceTable.Column(2)

//
// Collect

// Collect type = multi-instance
Voltage.Collect.Type="MultiInstance"

// Source(1) = connUnitSensorTable SNMP Table
// ID;Value;
Voltage.Collect.Source(1).Type="SnmpTable"
Voltage.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.14685.3.1.140.1"
Voltage.Collect.Source(1).SnmpTableSelectColumns="1,2"

// Remove "Voltage " from the ID
// ID;Value;
Voltage.Collect.Source(1).Compute(1).Type="Replace"
Voltage.Collect.Source(1).Compute(1).Column=1
Voltage.Collect.Source(1).Compute(1).Replace="Voltage "
Voltage.Collect.Source(1).Compute(1).ReplaceBy=""

// ValueTable = Source(1)
// ID;Value;
Voltage.Collect.ValueTable=%Voltage.Collect.Source(1)%
Voltage.Collect.DeviceID=ValueTable.Column(1)
Voltage.Collect.Voltage=ValueTable.Column(2)


//
// Fan
//

//
// Discovery

// Source(1) = dpStatusFanSensorsTable
// ID;LowerC;FanStatus;
Fan.Discovery.Source(1).Type="SnmpTable"
Fan.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.14685.3.1.97.1"
Fan.Discovery.Source(1).SnmpTableSelectColumns="1,3,4"

// Exclude Instances where FanStatus=0 (Fan not present)
// ID;LowerC;FanStatus;
Fan.Discovery.Source(1).Compute(1).Type="ExcludeMatchingLines"
Fan.Discovery.Source(1).Compute(1).Column=3
Fan.Discovery.Source(1).Compute(1).ValueList="0"

// Translate the Fan Location
// ID;LowerC;FanStatus;
Fan.Discovery.Source(1).Compute(2).Type="Translate"
Fan.Discovery.Source(1).Compute(2).Column=1
Fan.Discovery.Source(1).Compute(2).TranslationTable="fanLocationTranslationTable"

// The diskStatusTranslationTable
fanLocationTranslationTable(1)="CPU-1"
fanLocationTranslationTable(2)="CPU-2"
fanLocationTranslationTable(3)="Chassis-1"
fanLocationTranslationTable(4)="Chassis-2"
fanLocationTranslationTable(5)="Chassis-3"
fanLocationTranslationTable(6)="Chassis-4"
fanLocationTranslationTable(7)="Chassis-5"
fanLocationTranslationTable(8)="Chassis-6"
fanLocationTranslationTable(9)="Chassis-7"
fanLocationTranslationTable(10)="Chassis-8"
fanLocationTranslationTable(11)="Fan-Tray-1-Fan-1"
fanLocationTranslationTable(12)="Fan-Tray-1-Fan-2"
fanLocationTranslationTable(13)="Fan-Tray-1-Fan-3"
fanLocationTranslationTable(14)="Fan-Tray-1-Fan-4"
fanLocationTranslationTable(15)="Fan-Tray-2-Fan-1"
fanLocationTranslationTable(16)="Fan-Tray-2-Fan-2"
fanLocationTranslationTable(17)="Fan-Tray-2-Fan-3"
fanLocationTranslationTable(18)="Fan-Tray-2-Fan-4"
fanLocationTranslationTable(19)="Fan-Tray-3-Fan-1"
fanLocationTranslationTable(20)="Fan-Tray-3-Fan-2"
fanLocationTranslationTable(21)="Fan-Tray-3-Fan-3"
fanLocationTranslationTable(22)="Fan-Tray-3-Fan-4"
fanLocationTranslationTable(23)="Hard-Disk-Tray-Fan-1"
fanLocationTranslationTable(24)="Hard-Disk-Tray-Fan-2"

// InstanceTable = Source(1)
// ID;LowerC;FanStatus;
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(1)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(1)
Fan.Discovery.Instance.AlarmThreshold=InstanceTable.Column(2)

//
// Collect

// Collect type = multi-instance
Fan.Collect.Type="MultiInstance"

// Source(1) = connUnitSensorTable SNMP Table
// ID;Value;
Fan.Collect.Source(1).Type="SnmpTable"
Fan.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.14685.3.1.97.1"
Fan.Collect.Source(1).SnmpTableSelectColumns="1,2"

// Translate the Fan Location
// ID;Value;
Fan.Collect.Source(1).Compute(1).Type="Translate"
Fan.Collect.Source(1).Compute(1).Column=1
Fan.Collect.Source(1).Compute(1).TranslationTable="fanLocationTranslationTable"

// ValueTable = Source(1)
// ID;Value;
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Speed=ValueTable.Column(2)


//
// PhysicalDisk
//

//
// Discovery

// Source(1) = dpStatusPhysicalDiskSensorsTable
// ID;Vendor;ProductID;
PhysicalDisk.Discovery.Source(1).Type="SnmpTable"
PhysicalDisk.Discovery.Source(1).SnmpTableOid="1.3.6.1.4.1.14685.3.1.260.1"
PhysicalDisk.Discovery.Source(1).SnmpTableSelectColumns="6,12,13"

// Translate the Disk Location
// Location;Vendor;ProductID;
PhysicalDisk.Discovery.Source(1).Compute(1).Type="Translate"
PhysicalDisk.Discovery.Source(1).Compute(1).Column=1
PhysicalDisk.Discovery.Source(1).Compute(1).TranslationTable="diskLocationTranslationTable"

// The diskStatusTranslationTable
diskLocationTranslationTable(1)="HDD0"
diskLocationTranslationTable(2)="HDD1"
diskLocationTranslationTable(3)="HDD2"
diskLocationTranslationTable(4)="HDD3"
diskLocationTranslationTable(5)="Undefined"


// InstanceTable = Source(1)
// ID;Vendor;ProductID;
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(1)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PhysicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(1)
PhysicalDisk.Discovery.Instance.Model=InstanceTable.Column(3)
PhysicalDisk.Discovery.Instance.Vendor=InstanceTable.Column(2)

//
// Collect

// Collect type = multi-instance
PhysicalDisk.Collect.Type="MultiInstance"

// Source(1) = connUnitSensorTable SNMP Table
// DiskID;Status;
PhysicalDisk.Collect.Source(1).Type="SnmpTable"
PhysicalDisk.Collect.Source(1).SnmpTableOid="1.3.6.1.4.1.14685.3.1.260.1"
PhysicalDisk.Collect.Source(1).SnmpTableSelectColumns="6,7"

// Duplicate the Status column
// DiskID;Status;Status;
PhysicalDisk.Collect.Source(1).Compute(1).Type="DuplicateColumn"
PhysicalDisk.Collect.Source(1).Compute(1).Column=2

// Translate the first status column into a PATROLStatus
// DiskID;PATROLStatus;Status;
PhysicalDisk.Collect.Source(1).Compute(2).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(2).Column=2
PhysicalDisk.Collect.Source(1).Compute(2).TranslationTable="diskStatusTranslationTable"

// The diskStatusTranslationTable
diskStatusTranslationTable(1)="OK"
diskStatusTranslationTable(2)="WARN"
diskStatusTranslationTable(3)="ALARM"
diskStatusTranslationTable(4)="ALARM"
diskStatusTranslationTable(5)="OK"
diskStatusTranslationTable(6)="WARN"
diskStatusTranslationTable(7)="ALARM"
diskStatusTranslationTable(8)="WARN"
diskStatusTranslationTable(9)="OK"
diskStatusTranslationTable(10)="WARN"
diskStatusTranslationTable(11)="OK"
diskStatusTranslationTable(12)="ALARM"
diskStatusTranslationTable(Default)="UNKNOWN"

// Translate the second status column into a more readable string
// DiskID;PATROLStatus;StatusInformation;
PhysicalDisk.Collect.Source(1).Compute(3).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(3).Column=3
PhysicalDisk.Collect.Source(1).Compute(3).TranslationTable="diskStatusInformationTranslationTable"

// The diskStatusInformationTranslationTable
diskStatusInformationTranslationTable(1)="Unconfigured Good"
diskStatusInformationTranslationTable(2)="Unconfigured Good Foreign"
diskStatusInformationTranslationTable(3)="Unconfigured Bad"
diskStatusInformationTranslationTable(4)="Unconfigured Bad Foreign"
diskStatusInformationTranslationTable(5)="Hot Spare"
diskStatusInformationTranslationTable(6)="Offline"
diskStatusInformationTranslationTable(7)="Failed"
diskStatusInformationTranslationTable(8)="Rebuild"
diskStatusInformationTranslationTable(9)="Online"
diskStatusInformationTranslationTable(10)="Copy Back"
diskStatusInformationTranslationTable(11)="System"
diskStatusInformationTranslationTable(12)="Undefined Status"

diskStatusInformationTranslationTable(Default)="Unknown Status"

// Translate the ID to Location
// Location;PATROLStatus;StatusInformation;
PhysicalDisk.Collect.Source(1).Compute(4).Type="Translate"
PhysicalDisk.Collect.Source(1).Compute(4).Column=1
PhysicalDisk.Collect.Source(1).Compute(4).TranslationTable="diskLocationTranslationTable"

// ValueTable = Source(1)
// Location;PATROLStatus;StatusInformation;
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(1)
PhysicalDisk.Collect.Status=ValueTable.Column(2)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(3)

//
// Powersupply
//

//
// Discovery

// Source(1) =  dpStatusEnvironmentalSensorspowersupply
// status

PowerSupply.Discovery.Source(1).Type="SnmpGet"
PowerSupply.Discovery.Source(1).SnmpOid="1.3.6.1.4.1.14685.3.1.55.13.0"

// powersupply,Status,Status Information
PowerSupply.Discovery.Source(1).Compute(1).Type="Awk"
PowerSupply.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(1)



// InstanceTable = Source(1)
// powersupply,Status,Status Information
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(1)
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(1)

//Collect
PowerSupply.Collect.Type="MultiInstance"

PowerSupply.Collect.Source(1).Type="SnmpGet"
PowerSupply.Collect.Source(1).SnmpOid="1.3.6.1.4.1.14685.3.1.55.13.0"

// powersupply,Status,Status Information
PowerSupply.Collect.Source(1).Compute(1).Type="Awk"
PowerSupply.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(1)

// ValueTable = Source(1)
// Location;PATROLStatus;StatusInformation;
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.StatusInformation=ValueTable.Column(3)


/////////////////////////////////////////////////////////
///
///    E M B E D D E D   F I L E ! ! !
///
///    EmbeddedFile(1) = awk script that deduct the status
///   by power supplies 1 and 2 from the global status returned
//// Input: INTEGER {ok(1), power-1-failure(2), power-2-failure(3), power-1-ac-lost(4), power-2-ac-lost(5) }
/// Output: powersupply,Status,Status Information
/////////////////////////////////////////////////////////
EmbeddedFile(1):
BEGIN {FS=";";}
{
  Status = $1;
  Found = "nok";
  if (Status == 1)
    {
      print "PowerSupply1;OK;OK"
      print "PowerSupply2;OK;OK"
      Found = "ok";
    }
  if (Status == 2)
    {
      print "PowerSupply1;ALARM;power-1-failure"
      print "PowerSupply2;OK;OK"
      Found = "ok";
    }
  if (Status == 3)
    {
      print "PowerSupply1;OK;OK"
      print "PowerSupply2;ALARM;power-2-failure"
      Found = "ok";
    }
  if (Status == 4)
    {
      print "PowerSupply1;ALARM;power-1-ac-lost"
      print "PowerSupply2;OK;OK"
      Found = "ok";
    }
  if (Status == 5)
    {
      print "PowerSupply1;OK;OK"
      print "PowerSupply2;ALARM;power-2-ac-lost"
      Found = "ok";
    }
if (Found == "nok")
    {
      print "PowerSupply1;UNKNOWN;UNKNOWN"
      print "PowerSupply2;UNKNOWN;UNKNOWN"
    }

}
EmbeddedFile(1).End
/////////////////////////////////////////////////////////////////////
