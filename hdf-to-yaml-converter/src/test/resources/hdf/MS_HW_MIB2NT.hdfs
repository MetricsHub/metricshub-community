////////////////////////////////////////////////////////////////
//
//    H a r d w a r e   D e f i n i t i o n   F i l e
//
//                       f o r
//
//                 Hardware Sentry
//
//                 by Sentry Software (c)
//
//
//      Supports: Windows systems with SNMP.EXE running
//                Connects to a SNMP agent
//
//

// Include the MIB-2 HDF header
#include MS_HW_MIB2.hhdf

//
// Header
//

hdf.DisplayName="MIB-2 Standard SNMP Agent - Network Interfaces - Windows"
hdf.TypicalPlatform="Any system with SNMP"
hdf.AppliesToOS="NT"
hdf.Supersedes="MS_HW_WBEMGenNetwork.hdf"


// Small trick: make a bitwise _and_ on the portID to remove the
// weird bits that the Windows SNMP agent puts in the network interface ID
// PortID;Description;PortType;MacAddress;AdminStatus;
NetworkCard.Discovery.Source(1).Compute(4).Type="And"
NetworkCard.Discovery.Source(1).Compute(4).Column=1
NetworkCard.Discovery.Source(1).Compute(4).And=1023

// Exclude network cards that are not actual physical cards (while still declared as "Ethernet" stuff by the Windows SNMP stack, I tell you... )
// 57 41 43 20 is "WAN " in HEX.   4D 69 63 72 6F 73 6F 66 74 is Microsoft.
// PortID;Description;PortType;MacAddress;AdminStatus;
NetworkCard.Discovery.Source(1).Compute(5).Type="ExcludeMatchingLines"
NetworkCard.Discovery.Source(1).Compute(5).Column=2
NetworkCard.Discovery.Source(1).Compute(5).RegExp="\(WAN\)\|\(QoS\)\|\([Ff]ilter\)\|\([Ss]witch\)\|\(57 41 4E 20\)\|\(4D 69 63 72 6F 73 6F 66 74\)"

// Keep only network cards that have a description
// PortID;Description;PortType;MacAddress;AdminStatus;
NetworkCard.Discovery.Source(1).Compute(6).Type="KeeponlyMatchingLines"
NetworkCard.Discovery.Source(1).Compute(6).Column=2
NetworkCard.Discovery.Source(1).Compute(6).RegExp="."



// InstanceTable = Source(1)
// PortID;Description;PortType;MacAddress;AdminStatus;ID;Name;Alias;
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(3)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(1)
NetworkCard.Discovery.Instance.DisplayID=InstanceTable.Column(8)
NetworkCard.Discovery.Instance.Vendor=InstanceTable.Column(2)
NetworkCard.Discovery.Instance.PhysicalAddress=InstanceTable.Column(4)
NetworkCard.Discovery.Instance.PhysicalAddressType="MAC"
NetworkCard.Discovery.Instance.DeviceType=InstanceTable.Column(3)



// Same as in the discovery, remove the weird high-level bits
// that mean nothing
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;TotalErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;
NetworkCard.Collect.Source(1).Compute(10).Type="And"
NetworkCard.Collect.Source(1).Compute(10).Column=1
NetworkCard.Collect.Source(1).Compute(10).And=1023

// Replace 4294967295 with zero
// PortID;Description;SpeedMBps;PATROLStatus;StatusInformation;LinkStatus;ReceivedBytes;ReceivedPackets;ReceivedNonUnicastPackets;TotalErrors;TransmittedBytes;TransmittedPackets;TransmittedNonUnicastPackets;TransmittedErrors;
NetworkCard.Collect.Source(1).Compute(11).Type="Replace"
NetworkCard.Collect.Source(1).Compute(11).Column=3
NetworkCard.Collect.Source(1).Compute(11).Replace="4294967295"
NetworkCard.Collect.Source(1).Compute(11).ReplaceBy="0"

