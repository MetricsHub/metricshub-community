//
// Enclosure
// Discovery

// AWK it
//DISCOVERY;EnclosureID;EnclosureDisplayID;EnclosureVendor;EnclosureModel;EnclosureType;AdditionalInformation
Enclosure.Discovery.Source(1).Compute(1).Type="Awk"
Enclosure.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(8)
Enclosure.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
Enclosure.Discovery.Source(1).Compute(1).Separators=";"

// InstanceTable = Source(1)
// DISCOVERY;EnclosureID;EnclosureDisplayID;EnclosureVendor;EnclosureModel;EnclosureType;AdditionalInformation
Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(1)%
Enclosure.Discovery.Instance.DeviceID=InstanceTable.Column(2)
Enclosure.Discovery.Instance.DisplayID=InstanceTable.Column(3)
Enclosure.Discovery.Instance.Vendor=InstanceTable.Column(4)
Enclosure.Discovery.Instance.Model=InstanceTable.Column(5)
Enclosure.Discovery.Instance.Type=InstanceTable.Column(6)
Enclosure.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(7)

//Collect

// Collect type is multi-instance
Enclosure.Collect.Type="MultiInstance"

// AWK it
// COLLECT;EnclosureeID;EnclosureStatus;EnclosureConsumption;EnergyUsage;IntrusionStatus
Enclosure.Collect.Source(1).Compute(1).Type="Awk"
Enclosure.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(8)
Enclosure.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
Enclosure.Collect.Source(1).Compute(1).Separators=";"
Enclosure.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5,6"

// ValueTable = Source(1)
// COLLECT;EnclosureeID;EnclosureStatus;EnclosureConsumption;EnergyUsage;IntrusionStatus
Enclosure.Collect.ValueTable=%Enclosure.Collect.Source(1)%
Enclosure.Collect.DeviceID=ValueTable.Column(1)
Enclosure.Collect.Status=ValueTable.Column(2)
Enclosure.Collect.PowerConsumption=ValueTable.Column(3)
Enclosure.Collect.EnergyUsage=ValueTable.Column(4)
Enclosure.Collect.IntrusionStatus=ValueTable.Column(5)

//
// LUN
// DISCOVERY

// AWK it
// DISCOVERY,lunname;manufacturerID;logicalDeviceID;deviceWWN;state;policy;alivePathCount;LocalDeviceName;RemoteDeviceName
LUN.Discovery.Source(1).Compute(1).Type="Awk"
LUN.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(1)
LUN.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
LUN.Discovery.Source(1).Compute(1).Separators=";"

// Add some text to each additional information
// DISCOVERY,lunname;manufacturerID;logicalDeviceID;deviceWWN;state;policy;alivePathCount;LocalDeviceName;RemoteDeviceName
LUN.Discovery.Source(1).Compute(2).Type="LeftConcat"
LUN.Discovery.Source(1).Compute(2).Column=5
LUN.Discovery.Source(1).Compute(2).String="WWN="

// InstanceTable = Source(1)
// DISCOVERY,lunname;manufacturerID;logicalDeviceID;deviceWWN;state;policy;alivePathCount;LocalDeviceName;RemoteDeviceName
LUN.Discovery.InstanceTable=%LUN.Discovery.Source(1)%
LUN.Discovery.Instance.DeviceID=InstanceTable.Column(4)
LUN.Discovery.Instance.DisplayID=InstanceTable.Column(2)
LUN.Discovery.Instance.DeviceType="LUN"
LUN.Discovery.Instance.ArrayName=InstanceTable.Column(3)
LUN.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(7)
LUN.Discovery.Instance.AttachedToDeviceID="1"
LUN.Discovery.Instance.AttachedToDeviceType="Enclosure"
LUN.Discovery.Instance.LocalDeviceName=InstanceTable.Column(9)
LUN.Discovery.Instance.RemoteDeviceName=InstanceTable.Column(10)
LUN.Discovery.Instance.WWN=InstanceTable.Column(5)
LUN.Discovery.Instance.ExpectedPathCount="5"

//
// COLLECT

// Collect type is multi-instance
LUN.Collect.Type="MultiInstance"

// AWK it
// COLLECT;logicalDeviceID;state;alivePathCount;
LUN.Collect.Source(1).Compute(1).Type="Awk"
LUN.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(1)
LUN.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
LUN.Collect.Source(1).Compute(1).Separators=";"
LUN.Collect.Source(1).Compute(1).SelectColumns="2,3,4"

// Duplicate State
// logicalDeviceID;state;state;alivePathCount;
LUN.Collect.Source(1).Compute(2).Type="DuplicateColumn"
LUN.Collect.Source(1).Compute(2).Column="2"

// The LUNStatusTranslationTable --> PatrolStatus
// logicalDeviceID;PatrolStatus;state;alivePathCount;
LUN.Collect.Source(1).Compute(3).Type="Translate"
LUN.Collect.Source(1).Compute(3).Column="2"
LUN.Collect.Source(1).Compute(3).TranslationTable="LUNStatusTranslationTable"

LUNStatusTranslationTable("alive")="OK"
LUNStatusTranslationTable("dead")="ALARM"
LUNStatusTranslationTable("unlic")="WARN"
LUNStatusTranslationTable(Default)="UNKNOWN"

// The LUNStatusTranslationTable --> PatrolStatus
// logicalDeviceID;PatrolStatus;StatusInformation;alivePathCount;
LUN.Collect.Source(1).Compute(4).Type="Translate"
LUN.Collect.Source(1).Compute(4).Column="3"
LUN.Collect.Source(1).Compute(4).TranslationTable="LUNStatusInformationTranslationTable"

// The LUNStatusInformationTranslationTable --> StatusInformation
LUNStatusInformationTranslationTable("alive")=""
LUNStatusInformationTranslationTable("dead")="Dead"
LUNStatusInformationTranslationTable("unlic")="One or more paths are unlicensed"
LUNStatusInformationTranslationTable(Default)="UNKNOWN"

// ValueTable = Source(1)
// logicalDeviceID;PatrolStatus;StatusInformation;alivePathCount;
LUN.Collect.ValueTable=%LUN.Collect.Source(1)%
LUN.Collect.DeviceID=ValueTable.Column(1)
LUN.Collect.AvailablePathCount=ValueTable.Column(4)
LUN.Collect.Status=ValueTable.Column(2)
LUN.Collect.StatusInformation=ValueTable.Column(3)
//Lun.Collect.AvailablePathInformation

//
// Battery
// DISCOVERY

// AWK it
//DISCOVERY;BatteryDeviceID;BatteryModel;BatteryVendor;BatterieDisplayID
Battery.Discovery.Source(1).Compute(1).Type="Awk"
Battery.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
Battery.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
Battery.Discovery.Source(1).Compute(1).Separators=";"

// ExcludeMatchingLines , Remove lines where Batt Id = 0

Battery.Discovery.Source(1).Compute(2).Type="ExcludeMatchingLines"
Battery.Discovery.Source(1).Compute(2).Column=2
Battery.Discovery.Source(1).Compute(2).ValueList=0

// InstanceTable = Source(1)
// DISCOVERY;BatteryDeviceID;BatteryModel;BatteryVendor;BatterieDisplayID;AttachedToDeviceID;AttachedToDeviceType
Battery.Discovery.InstanceTable=%BATTERY.Discovery.Source(1)%
Battery.Discovery.Instance.DeviceID=InstanceTable.Column(2)
Battery.Discovery.Instance.Model=InstanceTable.Column(3)
Battery.Discovery.Instance.Vendor=InstanceTable.Column(4)
Battery.Discovery.Instance.DisplayID=InstanceTable.Column(5)
Battery.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(6)
Battery.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(7)
Battery.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(8)
Battery.Discovery.Instance.Chemistry="Lithium-ion"

//Collect

// Collect type is multi-instance
Battery.Collect.Type="MultiInstance"

// AWK it
// COLLECT;BatteryDeviceID
Battery.Collect.Source(1).Compute(1).Type="Awk"
Battery.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(2)
Battery.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
Battery.Collect.Source(1).Compute(1).Separators=";"
Battery.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5"

// The BatterytatusTranslationTable --> PatrolStatus
// COLLECT;BatteryDeviceID
Battery.Collect.Source(1).Compute(2).Type="Translate"
Battery.Collect.Source(1).Compute(2).Column="2"
Battery.Collect.Source(1).Compute(2).TranslationTable="BatterytatusTranslationTable"

BatterytatusTranslationTable("up")="OK"
BatterytatusTranslationTable("down")="ALARM"
BatterytatusTranslationTable("mid")="WARN"
BatterytatusTranslationTable(Default)="UNKNOWN"

// ValueTable = Source(1)
// COLLECT;BatteryDeviceID;BatteryStatus;BatteryCharge;TimeLeft
Battery.Collect.ValueTable=%Battery.Collect.Source(1)%
Battery.Collect.DeviceID=ValueTable.Column(1)
Battery.Collect.Status=ValueTable.Column(2)
Battery.Collect.Charge=ValueTable.Column(3)
Battery.Collect.TimeLeft=ValueTable.Column(4)

//
// Blades
// Discovery

// AWK it
//DISCOVERY;BaldeID;BladeDisplayID;BladeSerial;AttachedToDeviceID;AttachedToDeviceType
Blade.Discovery.Source(1).Compute(1).Type="Awk"
Blade.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(3)
Blade.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
Blade.Discovery.Source(1).Compute(1).Separators=";"

// KeepOnlyMatchingLines , Keep Only lines Whith "Blade1" or Blade2" in DisplayID

Blade.Discovery.Source(1).Compute(2).Type="KeepOnlyMatchingLines"
Blade.Discovery.Source(1).Compute(2).Column=3
Blade.Discovery.Source(1).Compute(2).ValueList="Blade1,Blade2"

// LefttConcat Concatenate S* on the SerialNumber to the left

Blade.Discovery.Source(1).Compute(3).Type="LeftConcat"
Blade.Discovery.Source(1).Compute(3).Column=4
Blade.Discovery.Source(1).Compute(3).String="S*"

// RightConcat Concatenate *N on the SerialNumber to the right

Blade.Discovery.Source(1).Compute(4).Type="RightConcat"
Blade.Discovery.Source(1).Compute(4).Column=4
Blade.Discovery.Source(1).Compute(4).String="*N"

// InstanceTable = Source(1)
// DISCOVERY;BaldeID;BladeDisplayID;BladeSerial;AttachedToDeviceID;AttachedToDeviceType
Blade.Discovery.InstanceTable=%Blade.Discovery.Source(1)%
Blade.Discovery.Instance.DeviceID=InstanceTable.Column(2)
Blade.Discovery.Instance.DisplayID=InstanceTable.Column(3)
Blade.Discovery.Instance.SerialNumber=InstanceTable.Column(4)
Blade.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(5)
Blade.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(6)
Blade.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(7)

//Collect

// Collect type is multi-instance
Blade.Collect.Type="MultiInstance"

// AWK it
// COLLECT;BladeID;BladeStatus
Blade.Collect.Source(1).Compute(1).Type="Awk"
Blade.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(3)
Blade.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
Blade.Collect.Source(1).Compute(1).Separators=";"
Blade.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5"

// ValueTable = Source(1)
// COLLECT;BladeID;BladeStatus;PowerState
Blade.Collect.ValueTable=%Blade.Collect.Source(1)%
Blade.Collect.DeviceID=ValueTable.Column(1)
Blade.Collect.Status=ValueTable.Column(2)
Blade.Collect.PowerState=ValueTable.Column(3)

//
// CPU
// Discovery

// AWK it
//DISCOVERY;CPUid;CPUdisplayID;CPUvendor;CPUmodel;CPUconso;CPUmaxSpeed;AttachedToDeviceID;AttachedToDeviceType
CPU.Discovery.Source(1).Compute(1).Type="Awk"
CPU.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(4)
CPU.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
CPU.Discovery.Source(1).Compute(1).Separators=";"

// Replace In the DisplayID PROC by CPU

CPU.Discovery.Source(1).Compute(2).Type="Replace"
CPU.Discovery.Source(1).Compute(2).Column=3
CPU.Discovery.Source(1).Compute(2).Replace="PROC"
CPU.Discovery.Source(1).Compute(2).ReplaceBy="CPU"

// InstanceTable = Source(1)
//DISCOVERY;CPUid;CPUdisplayID;CPUvendor;CPUmodel;CPUconso;CPUmaxSpeed;AttachedToDeviceID;AttachedToDeviceType
CPU.Discovery.InstanceTable=%CPU.Discovery.Source(1)%
CPU.Discovery.Instance.DeviceID=InstanceTable.Column(2)
CPU.Discovery.Instance.DisplayID=InstanceTable.Column(3)
CPU.Discovery.Instance.Vendor=InstanceTable.Column(4)
CPU.Discovery.Instance.Model=InstanceTable.Column(5)
CPU.Discovery.Instance.PowerConsumption=InstanceTable.Column(6)
CPU.Discovery.Instance.MaximumSpeed=InstanceTable.Column(7)
CPU.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(8)
CPU.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(9)
CPU.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(10)

//Collect

// Collect type is multi-instance
CPU.Collect.Type="MultiInstance"

// AWK it
// COLLECT;CPUid;CPUstatus;CPUcurrSpeed
CPU.Collect.Source(1).Compute(1).Type="Awk"
CPU.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(4)
CPU.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
CPU.Collect.Source(1).Compute(1).Separators=";"
CPU.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5,6"

// ValueTable = Source(1)
// COLLECT;CPUid;CPUstatus;CPUcurrSpeed;CorrectedErrorCount;PredictedFailure
CPU.Collect.ValueTable=%cpu.Collect.Source(1)%
CPU.Collect.DeviceID=ValueTable.Column(1)
CPU.Collect.Status=ValueTable.Column(2)
CPU.Collect.CurrentSpeed=ValueTable.Column(3)
CPU.Collect.CorrectedErrorCount=ValueTable.Column(4)
CPU.Collect.PredictedFailure=ValueTable.Column(5)

//
// CPUCORE
// Discovery

// AWK it
//DISCOVERY;CupCoreID;CupCoreDisplayID;CpuID
CpuCore.Discovery.Source(1).Compute(1).Type="Awk"
CpuCore.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(5)
CpuCore.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
CpuCore.Discovery.Source(1).Compute(1).Separators=";"

// InstanceTable = Source(1)
//DISCOVERY;CupCoreID;CupCoreDisplayID;CpuID
CpuCore.Discovery.InstanceTable=%CpuCore.Discovery.Source(1)%
CpuCore.Discovery.Instance.DeviceID=InstanceTable.Column(2)
CpuCore.Discovery.Instance.DisplayID=InstanceTable.Column(3)
CpuCore.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
CpuCore.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(5)

//Collect

// Collect type is multi-instance
CpuCore.Collect.Type="MultiInstance"

// AWK it
// COLLECT;
CpuCore.Collect.Source(1).Compute(1).Type="Awk"
CpuCore.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(5)
CpuCore.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
CpuCore.Collect.Source(1).Compute(1).Separators=";"
CpuCore.Collect.Source(1).Compute(1).SelectColumns="2,3,4"

// ValueTable = Source(1)
// COLLECT;CupCoreID;CupCoreStatus;CupCurrentSpeed;CorrectedErrorCount
CpuCore.Collect.ValueTable=%CpuCore.Collect.Source(1)%
CpuCore.Collect.DeviceID=ValueTable.Column(1)
CpuCore.Collect.Status=ValueTable.Column(2)
CpuCore.Collect.CurrentSpeed=ValueTable.Column(3)

//
// DiskController
// Discovery

// AWK it
//DISCOVERY;BaldeID;BladeDisplayID;BladeSerial
DiskController.Discovery.Source(1).Compute(1).Type="Awk"
DiskController.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(6)
DiskController.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
DiskController.Discovery.Source(1).Compute(1).Separators=";"

// Extract the Vendor name

DiskController.Discovery.Source(1).Compute(2).Type="Extract"
DiskController.Discovery.Source(1).Compute(2).Column=5
DiskController.Discovery.Source(1).Compute(2).SubColumn=1
DiskController.Discovery.Source(1).Compute(2).SubSeparators="."

// InstanceTable = Source(1)
// DISCOVERY;DiskControllerID;DiskControllerDisplayID;AttachedTodeviceID;Vendor;Model;ControllerNumber
DiskController.Discovery.InstanceTable=%DiskController.Discovery.Source(1)%
DiskController.Discovery.Instance.DeviceID=InstanceTable.Column(2)
DiskController.Discovery.Instance.DisplayID=InstanceTable.Column(3)
DiskController.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
DiskController.Discovery.Instance.Vendor=InstanceTable.Column(5)
DiskController.Discovery.Instance.Model=InstanceTable.Column(6)
DiskController.Discovery.Instance.ControllerNumber=InstanceTable.Column(7)
DiskController.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(8)

//Collect

// Collect type is multi-instance
DiskController.Collect.Type="MultiInstance"

// AWK it
// COLLECT;DiskControllerID;DiskControllerStatus;BatteryStatus
DiskController.Collect.Source(1).Compute(1).Type="Awk"
DiskController.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(6)
DiskController.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
DiskController.Collect.Source(1).Compute(1).Separators=";"
DiskController.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5"

// ValueTable = Source(1)
// DiskControllerID;DiskControllerStatus;BatteryStatus
DiskController.Collect.ValueTable=%DiskController.Collect.Source(1)%
DiskController.Collect.DeviceID=ValueTable.Column(1)
DiskController.Collect.ControllerStatus=ValueTable.Column(2)
DiskController.Collect.BatteryStatus=ValueTable.Column(3)

//
// FAN
// Discovery

// AWK it
//DISCOVERY;FanID;FanDisplayID;FanType;PercentWarningThreshold;PercentAlarmThreshold;AttachedToDeviceID;AttachedToDeviceTyp;AdditionalInformation
Fan.Discovery.Source(1).Compute(1).Type="Awk"
Fan.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(9)
Fan.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(9)
Fan.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
Fan.Discovery.Source(1).Compute(1).Separators=";"

// InstanceTable = Source(1)
// DISCOVERY;FanID;FanDisplayID;FanType;PercentWarningThreshold;PercentAlarmThreshold;AttachedToDeviceID;AttachedToDeviceTyp;AdditionalInformation
Fan.Discovery.InstanceTable=%Fan.Discovery.Source(1)%
Fan.Discovery.Instance.DeviceID=InstanceTable.Column(2)
Fan.Discovery.Instance.DisplayID=InstanceTable.Column(3)
Fan.Discovery.Instance.FanType=InstanceTable.Column(4)
Fan.Discovery.Instance.PercentWarningThreshold=InstanceTable.Column(5)
Fan.Discovery.Instance.PercentAlarmThreshold=InstanceTable.Column(6)
Fan.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(7)
Fan.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(8)
Fan.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(9)

//Collect

// Collect type is multi-instance
Fan.Collect.Type="MultiInstance"

// AWK it
// COLLECT;FanID;FanStatus;FanSpeed;SpeedPercent
Fan.Collect.Source(1).Compute(1).Type="Awk"
Fan.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(9)
Fan.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
Fan.Collect.Source(1).Compute(1).Separators=";"
Fan.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5"

// ValueTable = Source(1)
// COLLECT;FanID;FanStatus;FanSpeed;SpeedPercent
Fan.Collect.ValueTable=%Fan.Collect.Source(1)%
Fan.Collect.DeviceID=ValueTable.Column(1)
Fan.Collect.Status=ValueTable.Column(2)
Fan.Collect.Speed=ValueTable.Column(3)
Fan.Collect.SpeedPercent=ValueTable.Column(4)

//
// LED
// Discovery

// AWK it
//DISCOVERY;LedID;LedDisplayId;AttachedToDeviceID;AttachedToDeviceType;Name;OnStatus;OffStatus;BlinkingStatus;AlarmOnColor;WarningOnColor;AdditionalInformation
LED.Discovery.Source(1).Compute(1).Type="Awk"
LED.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(10)
LED.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
LED.Discovery.Source(1).Compute(1).Separators=";"

// InstanceTable = Source(1)
// DISCOVERY;LedID;LedDisplayId;AttachedToDeviceID;AttachedToDeviceType;Name;OnStatus;OffStatus;BlinkingStatus;AlarmOnColor;WarningOnColor;AdditionalInformation
LED.Discovery.InstanceTable=%LED.Discovery.Source(1)%
LED.Discovery.Instance.DeviceID=InstanceTable.Column(2)
LED.Discovery.Instance.DisplayID=InstanceTable.Column(3)
LED.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
LED.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(5)
LED.Discovery.Instance.Name=InstanceTable.Column(6)
LED.Discovery.Instance.OnStatus=InstanceTable.Column(7)
LED.Discovery.Instance.OffStatus=InstanceTable.Column(8)
LED.Discovery.Instance.BlinkingStatus=InstanceTable.Column(9)
LED.Discovery.Instance.AlarmOnColor=InstanceTable.Column(10)
LED.Discovery.Instance.WarningOnColor=InstanceTable.Column(11)
LED.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(12)

//Collect

// Collect type is multi-instance
LED.Collect.Type="MultiInstance"

// AWK it
//COLLECT;LedID;LedStatus;LedColor
LED.Collect.Source(1).Compute(1).Type="Awk"
LED.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(10)
LED.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
LED.Collect.Source(1).Compute(1).Separators=";"
LED.Collect.Source(1).Compute(1).SelectColumns="2,3,4"

// ValueTable = Source(1)
// COLLECT;LedID;LedStatus;LedColor
LED.Collect.ValueTable=%LED.Collect.Source(1)%
LED.Collect.DeviceID=ValueTable.Column(1)
LED.Collect.Status=ValueTable.Column(2)
LED.Collect.Color=ValueTable.Column(3)

//
// LogicalDisk
// Discovery

// AWK it
//DISCOVERY;
LogicalDisk.Discovery.Source(1).Compute(1).Type="Awk"
LogicalDisk.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(11)
LogicalDisk.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
LogicalDisk.Discovery.Source(1).Compute(1).Separators=";"

// Multiply byte -> Gigabyt
LogicalDisk.Discovery.Source(1).Compute(2).Type="Multiply"
LogicalDisk.Discovery.Source(1).Compute(2).Column=7
LogicalDisk.Discovery.Source(1).Compute(2).MultiplyBy=1000000000

// InstanceTable = Source(1)
// DISCOVERY;LDid;LDdisplayid;LDAttachedToDeviceID;LDAttachedToDeviceType;LDControllerNumber;LDSsize;RaidLevel;LDtype
LogicalDisk.Discovery.InstanceTable=%LogicalDisk.Discovery.Source(1)%
LogicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(2)
LogicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(3)
LogicalDisk.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
LogicalDisk.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(5)
LogicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(6)
LogicalDisk.Discovery.Instance.Size=InstanceTable.Column(7)
LogicalDisk.Discovery.Instance.RaidLevel=InstanceTable.Column(8)
LogicalDisk.Discovery.Instance.LogicalDiskType=InstanceTable.Column(9)
LogicalDisk.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(10)

//Collect

// Collect type is multi-instance
LogicalDisk.Collect.Type="MultiInstance"

// AWK it
// COLLECT;FanID;FanStatus;FanSpeed;SpeedPercent
LogicalDisk.Collect.Source(1).Compute(1).Type="Awk"
LogicalDisk.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(11)
LogicalDisk.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
LogicalDisk.Collect.Source(1).Compute(1).Separators=";"
LogicalDisk.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5"

// Devide
LogicalDisk.Collect.Source(1).Compute(2).Type="Divide"
LogicalDisk.Collect.Source(1).Compute(2).Column=3
LogicalDisk.Collect.Source(1).Compute(2).DivideBy=10000000


// ValueTable = Source(1)
// COLLECT;LDid;LDstatus;UnallocatedSpace;ErrorCount
LogicalDisk.Collect.ValueTable=%LogicalDisk.Collect.Source(1)%
LogicalDisk.Collect.DeviceID=ValueTable.Column(1)
LogicalDisk.Collect.Status=ValueTable.Column(2)
LogicalDisk.Collect.UnallocatedSpace=ValueTable.Column(3)
LogicalDisk.Collect.ErrorCount=ValueTable.Column(4)


//
// Memory
// Discovery

// AWK it
//DISCOVERY;MemoryID;MemoryDisplayID;AttachedToDeviceID;AttachedToDeviceType;Vendor;Model;SerialNumber;Type;Size
Memory.Discovery.Source(1).Compute(1).Type="Awk"
Memory.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(12)
Memory.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
Memory.Discovery.Source(1).Compute(1).Separators=";"

// Add
Memory.Discovery.Source(1).Compute(2).Type="Add"
Memory.Discovery.Source(1).Compute(2).Column=10
Memory.Discovery.Source(1).Compute(2).Add=24

// InstanceTable = Source(1)
// DISCOVERY;MemoryID;MemoryDisplayID;AttachedToDeviceID;AttachedToDeviceType;Vendor;Model;SerialNumber;Type;Size
Memory.Discovery.InstanceTable=%Memory.Discovery.Source(1)%
Memory.Discovery.Instance.DeviceID=InstanceTable.Column(2)
Memory.Discovery.Instance.DisplayID=InstanceTable.Column(3)
Memory.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
Memory.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(5)
Memory.Discovery.Instance.Vendor=InstanceTable.Column(6)
Memory.Discovery.Instance.Model=InstanceTable.Column(7)
Memory.Discovery.Instance.SerialNumber=InstanceTable.Column(8)
Memory.Discovery.Instance.Type=InstanceTable.Column(9)
Memory.Discovery.Instance.Size=InstanceTable.Column(10)
Memory.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(11)

//Collect

// Collect type is multi-instance
Memory.Collect.Type="MultiInstance"

// AWK it
// COLLECT;MemoryID;MemStatus;
Memory.Collect.Source(1).Compute(1).Type="Awk"
Memory.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(12)
Memory.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
Memory.Collect.Source(1).Compute(1).Separators=";"
Memory.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5,6,7"

// ValueTable = Source(1)
// COLLECT;MemoryID;MemStatus;PredictedFailure;ErrorStatus;LastError;ErrorCount
Memory.Collect.ValueTable=%Memory.Collect.Source(1)%
Memory.Collect.DeviceID=ValueTable.Column(1)
Memory.Collect.Status=ValueTable.Column(2)
Memory.Collect.PredictedFailure=ValueTable.Column(3)
Memory.Collect.ErrorCount=ValueTable.Column(6)

//
// NetworkCard
// Discovery

// AWK it
//DISCOVERY;NCid;NCdisplatId;AttachedToDeviceID;Vendor;Model;NCtype;PhysicalAddress;LogicalAddress;LogicalAddressType;SN;AdditionalInformation
NetworkCard.Discovery.Source(1).Compute(1).Type="Awk"
NetworkCard.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(13)
NetworkCard.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
NetworkCard.Discovery.Source(1).Compute(1).Separators=";"

// InstanceTable = Source(1)
// DISCOVERY;NCid;NCdisplatId;AttachedToDeviceID;Vendor;Model;NCtype;PhysicalAddress;LogicalAddress;LogicalAddressType;SN;AdditionalInformation
NetworkCard.Discovery.InstanceTable=%NetworkCard.Discovery.Source(1)%
NetworkCard.Discovery.Instance.DeviceID=InstanceTable.Column(2)
NetworkCard.Discovery.Instance.DisplayID=InstanceTable.Column(3)
NetworkCard.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
NetworkCard.Discovery.Instance.Vendor=InstanceTable.Column(5)
NetworkCard.Discovery.Instance.Model=InstanceTable.Column(6)
NetworkCard.Discovery.Instance.DeviceType=InstanceTable.Column(7)
NetworkCard.Discovery.Instance.PhysicalAddress=InstanceTable.Column(8)
NetworkCard.Discovery.Instance.LogicalAddress=InstanceTable.Column(9)
NetworkCard.Discovery.Instance.LogicalAddressType=InstanceTable.Column(10)
NetworkCard.Discovery.Instance.SerialNumber=InstanceTable.Column(11)
NetworkCard.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(12)

//Collect

// Collect type is multi-instance
NetworkCard.Collect.Type="MultiInstance"

// AWK it
// COLLECT;NCid;NCstatus;NSlinkStatus;NClinkSpeed;DuplexMode;ErrorCount;ReceivedBytes;TransmittedBytes;ReceivedPackets;TransmittedPackets;ZeroBufferCreditCount
NetworkCard.Collect.Source(1).Compute(1).Type="Awk"
NetworkCard.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(13)
NetworkCard.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
NetworkCard.Collect.Source(1).Compute(1).Separators=";"
NetworkCard.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5,6,7,8,9,10,11,12"

// ValueTable = Source(1)
// NCid;NCstatus;NSlinkStatus;NClinkSpeed;DuplexMode;ErrorCount;ReceivedBytes;TransmittedBytes;ReceivedPackets;TransmittedPackets;ZeroBufferCreditCount
NetworkCard.Collect.ValueTable=%NetworkCard.Collect.Source(1)%
NetworkCard.Collect.DeviceID=ValueTable.Column(1)
NetworkCard.Collect.Status=ValueTable.Column(2)
NetworkCard.Collect.LinkStatus=ValueTable.Column(3)
NetworkCard.Collect.LinkSpeed=ValueTable.Column(4)
NetworkCard.Collect.DuplexMode=ValueTable.Column(5)
NetworkCard.Collect.ErrorCount=ValueTable.Column(6)
NetworkCard.Collect.ReceivedBytes=ValueTable.Column(7)
NetworkCard.Collect.TransmittedBytes=ValueTable.Column(8)
NetworkCard.Collect.ReceivedPackets=ValueTable.Column(9)
NetworkCard.Collect.TransmittedPackets=ValueTable.Column(10)
NetworkCard.Collect.ZeroBufferCreditCount=ValueTable.Column(11)
//
// OtherDevice
// Discovery

// AWK it
//DISCOVERY;OdId;OdDisplayId;AttachedToDeviceID;AttachedToDeviceType;AdditionalInformation
OtherDevice.Discovery.Source(1).Compute(1).Type="Awk"
OtherDevice.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(14)
OtherDevice.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
OtherDevice.Discovery.Source(1).Compute(1).Separators=";"

// Substring

OtherDevice.Discovery.Source(1).Compute(2).Type="Substring"
OtherDevice.Discovery.Source(1).Compute(2).Column=3
OtherDevice.Discovery.Source(1).Compute(2).Start=5
OtherDevice.Discovery.Source(1).Compute(2).Length=16

// InstanceTable = Source(1)
// DISCOVERY;OdId;OdDisplayId;AttachedToDeviceID;AttachedToDeviceType;AdditionalInformation
OtherDevice.Discovery.InstanceTable=%OtherDevice.Discovery.Source(1)%
OtherDevice.Discovery.Instance.DeviceID=InstanceTable.Column(2)
OtherDevice.Discovery.Instance.DisplayID=InstanceTable.Column(3)
OtherDevice.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
OtherDevice.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(5)
OtherDevice.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(6)

//Collect

// Collect type is multi-instance
OtherDevice.Collect.Type="MultiInstance"

// AWK it
// COLLECT;OdId;OdStatus;OdStatusInformation;OdUsageCount;OdPowerConsumption,Value
OtherDevice.Collect.Source(1).Compute(1).Type="Awk"
OtherDevice.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(14)
OtherDevice.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
OtherDevice.Collect.Source(1).Compute(1).Separators=";"
OtherDevice.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5,6,7"

// ValueTable = Source(1)
// OdId;OdStatus;OdStatusInformation;OdUsageCount;OdPowerConsumption,Value
OtherDevice.Collect.ValueTable=%OtherDevice.Collect.Source(1)%
OtherDevice.Collect.DeviceID=ValueTable.Column(1)
OtherDevice.Collect.Status=ValueTable.Column(2)
OtherDevice.Collect.StatusInformation=ValueTable.Column(3)
OtherDevice.Collect.UsageCount=ValueTable.Column(4)
OtherDevice.Collect.PowerConsumption=ValueTable.Column(5)
OtherDevice.Collect.Value=ValueTable.Column(6)

//
// PhysicalDisk
// Discovery

// AWK it
//JOIN1;PdID
PhysicalDisk.Discovery.Source(1).Compute(1).Type="Awk"
PhysicalDisk.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(21)
PhysicalDisk.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^JOIN1;"
PhysicalDisk.Discovery.Source(1).Compute(1).Separators=";"

//JOIN2;PdID;PdDisplayId;AttachedToDeviceID;AttachedToDeviceType;ControllerNumber;Vendor;Model;FirmwareVersion;Size;SerialNumber;AdditionalInformation
PhysicalDisk.Discovery.Source(2).Compute(1).Type="Awk"
PhysicalDisk.Discovery.Source(2).Compute(1).AwkScript=EmbeddedFile(21)
PhysicalDisk.Discovery.Source(2).Compute(1).KeepOnlyRegExp="^JOIN2;"
PhysicalDisk.Discovery.Source(2).Compute(1).Separators=";"

//JOIN1;PdID;JOIN2;PdID;PdDisplayId;AttachedToDeviceID;AttachedToDeviceType;ControllerNumber;Vendor;Model;FirmwareVersion;Size;SerialNumber;AdditionalInformation
PhysicalDisk.Discovery.Source(3).Type="TableJoint"
PhysicalDisk.Discovery.Source(3).LeftTable=%PhysicalDisk.Discovery.Source(1)%
PhysicalDisk.Discovery.Source(3).RightTable=%PhysicalDisk.Discovery.Source(2)%
PhysicalDisk.Discovery.Source(3).LeftKeyColumn=2
PhysicalDisk.Discovery.Source(3).RightKeyColumn=2
PhysicalDisk.Discovery.Source(3).DefaultRightLine=";"

// InstanceTable = Source(1)
//JOIN1;PdID;JOIN2;PdID;PdDisplayId;AttachedToDeviceID;AttachedToDeviceType;ControllerNumber;Vendor;Model;FirmwareVersion;Size;SerialNumber;AdditionalInformation
PhysicalDisk.Discovery.InstanceTable=%PhysicalDisk.Discovery.Source(3)%
PhysicalDisk.Discovery.Instance.DeviceID=InstanceTable.Column(4)
PhysicalDisk.Discovery.Instance.DisplayID=InstanceTable.Column(5)
PhysicalDisk.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(6)
PhysicalDisk.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(7)
PhysicalDisk.Discovery.Instance.ControllerNumber=InstanceTable.Column(8)
PhysicalDisk.Discovery.Instance.Vendor=InstanceTable.Column(9)
PhysicalDisk.Discovery.Instance.Model=InstanceTable.Column(10)
PhysicalDisk.Discovery.Instance.FirmwareVersion=InstanceTable.Column(11)
PhysicalDisk.Discovery.Instance.Size=InstanceTable.Column(12)
PhysicalDisk.Discovery.Instance.SerialNumber=InstanceTable.Column(13)
PhysicalDisk.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(14)

//Collect
// Collect type is multi-instance
PhysicalDisk.Collect.Type="MultiInstance"

// AWK it
// COLLECT;PdID;PdStatus;StatusInformation;PredictedFailure;ErrorCount;DeviceNotReadyErrorCount;MediaErrorCount;NoDeviceErrorCount;HardErrorCount;IllegalRequestErrorCount;RecoverableErrorCount;TransportErrorCount;EnduranceRemaining
PhysicalDisk.Collect.Source(1).Compute(1).Type="Awk"
PhysicalDisk.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(21)
PhysicalDisk.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
PhysicalDisk.Collect.Source(1).Compute(1).Separators=";"
PhysicalDisk.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5,6,7,8,9,10,11,12,13,14"

// ValueTable = Source(1)
// PdID;PdStatus;StatusInformation;PredictedFailure;ErrorCount;DeviceNotReadyErrorCount;MediaErrorCount;NoDeviceErrorCount;HardErrorCount;IllegalRequestErrorCount;RecoverableErrorCount;TransportErrorCount;EnduranceRemaining
PhysicalDisk.Collect.ValueTable=%PhysicalDisk.Collect.Source(1)%
PhysicalDisk.Collect.DeviceID=ValueTable.Column(1)
PhysicalDisk.Collect.Status=ValueTable.Column(2)
PhysicalDisk.Collect.StatusInformation=ValueTable.Column(3)
PhysicalDisk.Collect.PredictedFailure=ValueTable.Column(4)
PhysicalDisk.Collect.ErrorCount=ValueTable.Column(5)
PhysicalDisk.Collect.DeviceNotReadyErrorCount=ValueTable.Column(6)
PhysicalDisk.Collect.MediaErrorCount=ValueTable.Column(7)
PhysicalDisk.Collect.NoDeviceErrorCount=ValueTable.Column(8)
PhysicalDisk.Collect.HardErrorCount=ValueTable.Column(9)
PhysicalDisk.Collect.IllegalRequestErrorCount=ValueTable.Column(10)
PhysicalDisk.Collect.RecoverableErrorCount=ValueTable.Column(11)
PhysicalDisk.Collect.TransportErrorCount=ValueTable.Column(12)
PhysicalDisk.Collect.EnduranceRemaining=ValueTable.Column(13)

//
// PowerSupply
// Discovery

// AWK it
//DISCOVERY;PsId;PsDeviceId;AttachedToDeviceID;AttachedToDeviceType;PowerSupplyType;PowerSupplyPower
PowerSupply.Discovery.Source(1).Compute(1).Type="Awk"
PowerSupply.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(16)
PowerSupply.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
PowerSupply.Discovery.Source(1).Compute(1).Separators=";"

// Convert PowerSupplyPower form Hex to Dec
PowerSupply.Discovery.Source(1).Compute(2).Type="Convert"
PowerSupply.Discovery.Source(1).Compute(2).Column=7
PowerSupply.Discovery.Source(1).Compute(2).ConversionType="hex2dec"

// InstanceTable = Source(1)
// DISCOVERY;PsId;PsDeviceId;AttachedToDeviceID;AttachedToDeviceType;PowerSupplyType;PowerSupplyPower
PowerSupply.Discovery.InstanceTable=%PowerSupply.Discovery.Source(1)%
PowerSupply.Discovery.Instance.DeviceID=InstanceTable.Column(2)
PowerSupply.Discovery.Instance.DisplayID=InstanceTable.Column(3)
PowerSupply.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
PowerSupply.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(5)
PowerSupply.Discovery.Instance.PowerSupplyType=InstanceTable.Column(6)
PowerSupply.Discovery.Instance.PowerSupplyPower=InstanceTable.Column(7)
PowerSupply.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(8)

//Collect

// Collect type is multi-instance
PowerSupply.Collect.Type="MultiInstance"

// AWK it
// COLLECT;PsId;PsStatus;UsedWatts;
PowerSupply.Collect.Source(1).Compute(1).Type="Awk"
PowerSupply.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(16)
PowerSupply.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
PowerSupply.Collect.Source(1).Compute(1).Separators=";"
PowerSupply.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5"

// ValueTable = Source(1)
// COLLECT;PsId;PsStatus;UsedWatts
PowerSupply.Collect.ValueTable=%PowerSupply.Collect.Source(1)%
PowerSupply.Collect.DeviceID=ValueTable.Column(1)
PowerSupply.Collect.Status=ValueTable.Column(2)
PowerSupply.Collect.UsedWatts=ValueTable.Column(3)
PowerSupply.Collect.UsedPercent=ValueTable.Column(4)

//
// Robotic
// Discovery

// AWK it
//DISCOVERY;RoboId;RoboDisplayID;AttachedToDeviceID;AttachedToDeviceType;RoboticType;Vendor;Model;SerialNumber;AdditionalInformation
Robotic.Discovery.Source(1).Compute(1).Type="Awk"
Robotic.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(17)
Robotic.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
Robotic.Discovery.Source(1).Compute(1).Separators=";"

// InstanceTable = Source(1)
// DISCOVERY;RoboId;RoboDisplayID;AttachedToDeviceID;AttachedToDeviceType;RoboticType;Vendor;Model;SerialNumber;AdditionalInformation
Robotic.Discovery.InstanceTable=%Robotic.Discovery.Source(1)%
Robotic.Discovery.Instance.DeviceID=InstanceTable.Column(2)
Robotic.Discovery.Instance.DisplayID=InstanceTable.Column(3)
Robotic.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
Robotic.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(5)
Robotic.Discovery.Instance.RoboticType=InstanceTable.Column(6)
Robotic.Discovery.Instance.Vendor=InstanceTable.Column(7)
Robotic.Discovery.Instance.Model=InstanceTable.Column(8)
Robotic.Discovery.Instance.SerialNumber=InstanceTable.Column(9)
Robotic.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(10)

//Robotic

// Collect type is multi-instance
Robotic.Collect.Type="MultiInstance"

// AWK it
// COLLECT
Robotic.Collect.Source(1).Compute(1).Type="Awk"
Robotic.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(17)
Robotic.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
Robotic.Collect.Source(1).Compute(1).Separators=";"
Robotic.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5,6"

// ValueTable = Source(1)
// COLLECT;RoboId;RoboStatus;RobotStatusInformation;MoveCount;ErrorCount
Robotic.Collect.ValueTable=%Robotic.Collect.Source(1)%
Robotic.Collect.DeviceID=ValueTable.Column(1)
Robotic.Collect.Status=ValueTable.Column(2)
Robotic.Collect.StatusInformation=ValueTable.Column(3)
Robotic.Collect.MoveCount=ValueTable.Column(4)
Robotic.Collect.ErrorCount=ValueTable.Column(5)

//
// TapeDrive
// Discovery

// AWK it
//DISCOVERY;TdId;TdDisplayId;AttachedToDeviceID;AttachedToDeviceType;Vendor;Model;SerialNumber;ControllerNumber;AdditionalInformation
TapeDrive.Discovery.Source(1).Compute(1).Type="Awk"
TapeDrive.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(18)
TapeDrive.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
TapeDrive.Discovery.Source(1).Compute(1).Separators=";"

// InstanceTable = Source(1)
// DISCOVERY;TdId;TdDisplayId;AttachedToDeviceID;AttachedToDeviceType;Vendor;Model;SerialNumber;ControllerNumber;AdditionalInformation
TapeDrive.Discovery.InstanceTable=%TapeDrive.Discovery.Source(1)%
TapeDrive.Discovery.Instance.DeviceID=InstanceTable.Column(2)
TapeDrive.Discovery.Instance.DisplayID=InstanceTable.Column(3)
TapeDrive.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
TapeDrive.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(5)
TapeDrive.Discovery.Instance.Vendor=InstanceTable.Column(6)
TapeDrive.Discovery.Instance.Model=InstanceTable.Column(7)
TapeDrive.Discovery.Instance.SerialNumber=InstanceTable.Column(8)
TapeDrive.Discovery.Instance.ControllerNumber=InstanceTable.Column(9)
TapeDrive.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(10)

//Collect

// Collect type is multi-instance
TapeDrive.Collect.Type="MultiInstance"

// AWK it
// COLLECT;TdId;TdStatus;StatusInformation;MountCount;UnmountCount;ErrorCount;NeedsCleaning
TapeDrive.Collect.Source(1).Compute(1).Type="Awk"
TapeDrive.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(18)
TapeDrive.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
TapeDrive.Collect.Source(1).Compute(1).Separators=";"
TapeDrive.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5,6,7,8"

// ValueTable = Source(1)
// COLLECT;TdId;TdStatus;StatusInformation;MountCount;UnmountCount;ErrorCount;NeedsCleaning
TapeDrive.Collect.ValueTable=%TapeDrive.Collect.Source(1)%
TapeDrive.Collect.DeviceID=ValueTable.Column(1)
TapeDrive.Collect.Status=ValueTable.Column(2)
TapeDrive.Collect.StatusInformation=ValueTable.Column(3)
TapeDrive.Collect.MountCount=ValueTable.Column(4)
TapeDrive.Collect.UnmountCount=ValueTable.Column(5)
TapeDrive.Collect.ErrorCount=ValueTable.Column(6)
TapeDrive.Collect.NeedsCleaning=ValueTable.Column(7)


//
// Temperature
// Discovery

// AWK it
//DISCOVERY;TempId;TempDisplayId;AttachedToDeviceID;AttachedToDeviceType;TemperatureType;WarningThreshold;AlarmThreshold;AdditionalInformation
Temperature.Discovery.Source(1).Compute(1).Type="Awk"
Temperature.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(19)
Temperature.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
Temperature.Discovery.Source(1).Compute(1).Separators=";"

// InstanceTable = Source(1)
// DISCOVERY;TempId;TempDisplayId;AttachedToDeviceID;AttachedToDeviceType;TemperatureType;WarningThreshold;AlarmThreshold;AdditionalInformation
Temperature.Discovery.InstanceTable=%Temperature.Discovery.Source(1)%
Temperature.Discovery.Instance.DeviceID=InstanceTable.Column(2)
Temperature.Discovery.Instance.DisplayID=InstanceTable.Column(3)
Temperature.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
Temperature.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(5)
Temperature.Discovery.Instance.TemperatureType=InstanceTable.Column(6)
Temperature.Discovery.Instance.WarningThreshold=InstanceTable.Column(7)
Temperature.Discovery.Instance.AlarmThreshold=InstanceTable.Column(8)
Temperature.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(9)

//Collect

// Collect type is multi-instance
Temperature.Collect.Type="MultiInstance"

// AWK it
// COLLECT;TempId;TempStatus;TempStatusInformation;Temperature
Temperature.Collect.Source(1).Compute(1).Type="Awk"
Temperature.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(19)
Temperature.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
Temperature.Collect.Source(1).Compute(1).Separators=";"
Temperature.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5"

// ValueTable = Source(1)
// COLLECT;TempId;TempStatus;TempStatusInformation;Temperature
Temperature.Collect.ValueTable=%Temperature.Collect.Source(1)%
Temperature.Collect.DeviceID=ValueTable.Column(1)
Temperature.Collect.Status=ValueTable.Column(2)
Temperature.Collect.StatusInformation=ValueTable.Column(3)
Temperature.Collect.Temperature=ValueTable.Column(4)

//
// Voltage
// Discovery

// AWK it
//DISCOVERY;VoltId;VoltDisplayId;AttachedToDeviceID;AttachedToDeviceType;VoltageType;AdditionalInformation
Voltage.Discovery.Source(1).Compute(1).Type="Awk"
Voltage.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(20)
Voltage.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
Voltage.Discovery.Source(1).Compute(1).Separators=";"

// InstanceTable = Source(1)
// DISCOVERY;VoltId;VoltDisplayId;AttachedToDeviceID;AttachedToDeviceType;VoltageType;AdditionalInformation
Voltage.Discovery.InstanceTable=%Voltage.Discovery.Source(1)%
Voltage.Discovery.Instance.DeviceID=InstanceTable.Column(2)
Voltage.Discovery.Instance.DisplayID=InstanceTable.Column(3)
Voltage.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
Voltage.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(5)
Voltage.Discovery.Instance.VoltageType=InstanceTable.Column(6)
Voltage.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(7)

//Collect

// Collect type is multi-instance
Voltage.Collect.Type="MultiInstance"

// AWK it
// COLLECT;VoltId;VoltStatus;VoltStatusInformation;Voltage
Voltage.Collect.Source(1).Compute(1).Type="Awk"
Voltage.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(20)
Voltage.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
Voltage.Collect.Source(1).Compute(1).Separators=";"
Voltage.Collect.Source(1).Compute(1).SelectColumns="2,3,4,5"

// ValueTable = Source(1)
// COLLECT;VoltId;VoltStatus;VoltStatusInformation;Voltage
Voltage.Collect.ValueTable=%Voltage.Collect.Source(1)%
Voltage.Collect.DeviceID=ValueTable.Column(1)
Voltage.Collect.Status=ValueTable.Column(2)
Voltage.Collect.StatusInformation=ValueTable.Column(3)
Voltage.Collect.Voltage=ValueTable.Column(4)

//
// GPU
// Discovery

// AWK it
// DISCOVERY;DeviceID;DisplayID;Vendor;Model;DriverVersion;FirmwareVersion;SerialNumber;Size;Location
GPU.Discovery.Source(1).Compute(1).Type="Awk"
GPU.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(22)
GPU.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
GPU.Discovery.Source(1).Compute(1).Separators=";"

// InstanceTable = Source(1)
// DISCOVERY;DeviceID;DisplayID;Vendor;Model;DriverVersion;FirmwareVersion;SerialNumber;Size;Location
GPU.Discovery.InstanceTable=%GPU.Discovery.Source(1)%
GPU.Discovery.Instance.DeviceID=InstanceTable.Column(2)
GPU.Discovery.Instance.DisplayID=InstanceTable.Column(3)
GPU.Discovery.Instance.Vendor=InstanceTable.Column(4)
GPU.Discovery.Instance.Model=InstanceTable.Column(5)
GPU.Discovery.Instance.DriverVersion=InstanceTable.Column(6)
GPU.Discovery.Instance.FirmwareVersion=InstanceTable.Column(7)
GPU.Discovery.Instance.SerialNumber=InstanceTable.Column(8)
GPU.Discovery.Instance.Size=InstanceTable.Column(9)
GPU.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(10)
GPU.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(11)
GPU.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(12)

//Collect

// Collect type is multi-instance
GPU.Collect.Type="MultiInstance"

// AWK it
// COLLECT;DeviceID;Status;StatusInformation;PredictedFailure;CorrectedErrorCount;ErrorCount;UsedTime;DecoderUsedTime;EncoderUsedTime;MemoryUtilization;ReceivedBytesRate;TransmittedBytesRate;PowerConsumption;GPU.Collect.Source(1).Compute(1).Type="Awk"
GPU.Collect.Source(1).Compute(1).Type="Awk"
GPU.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(22)
GPU.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
GPU.Collect.Source(1).Compute(1).Separators=";"

// ValueTable = Source(1)
// COLLECT;DeviceID;Status;StatusInformation;PredictedFailure;CorrectedErrorCount;ErrorCount;UsedTime;DecoderUsedTime;
// EncoderUsedTime;MemoryUtilization;ReceivedBytesRate;TransmittedBytesRate;PowerConsumption;
// UsedTime;DecoderUsedTime;EncoderUsedTime;ReceivedBytes;TransmittedBytes
GPU.Collect.ValueTable=%GPU.Collect.Source(1)%
GPU.Collect.DeviceID=ValueTable.Column(2)
GPU.Collect.Status=ValueTable.Column(3)
GPU.Collect.StatusInformation=ValueTable.Column(4)
GPU.Collect.PredictedFailure=ValueTable.Column(5)
GPU.Collect.CorrectedErrorCount=ValueTable.Column(6)
GPU.Collect.ErrorCount=ValueTable.Column(7)
GPU.Collect.UsedTimePercent=ValueTable.Column(8)
GPU.Collect.DecoderUsedTimePercent=ValueTable.Column(9)
GPU.Collect.EncoderUsedTimePercent=ValueTable.Column(10)
GPU.Collect.MemoryUtilization=ValueTable.Column(11)
GPU.Collect.ReceivedBytesRate=ValueTable.Column(12)
GPU.Collect.TransmittedBytesRate=ValueTable.Column(13)
GPU.Collect.PowerConsumption=ValueTable.Column(14)
GPU.Collect.UsedTime=ValueTable.Column(15)
GPU.Collect.DecoderUsedTime=ValueTable.Column(16)
GPU.Collect.EncoderUsedTime=ValueTable.Column(17)
GPU.Collect.ReceivedBytes=ValueTable.Column(18)
GPU.Collect.TransmittedBytes=ValueTable.Column(19)

//
// VM
// Discovery

// AWK it
// DISCOVERY;DeviceID;DisplayID;AttachedToDeviceID;AttachedToDeviceType;Hostname;AdditionalInformation1
VM.Discovery.Source(1).Compute(1).Type="Awk"
VM.Discovery.Source(1).Compute(1).AwkScript=EmbeddedFile(23)
VM.Discovery.Source(1).Compute(1).KeepOnlyRegExp="^DISCOVERY;"
VM.Discovery.Source(1).Compute(1).Separators=";"

// DISCOVERY;DeviceID;DisplayID;AttachedToDeviceID;AttachedToDeviceType;Hostname;AdditionalInformation1
VM.Discovery.InstanceTable=%VM.Discovery.Source(1)%
VM.Discovery.Instance.DeviceID=InstanceTable.Column(2)
VM.Discovery.Instance.DisplayID=InstanceTable.Column(3)
VM.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(4)
VM.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(5)
VM.Discovery.Instance.Hostname=InstanceTable.Column(6)
VM.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(7)

//Collect

// Collect type is multi-instance
VM.Collect.Type="MultiInstance"

// AWK it
// COLLECT;DeviceID;PowerShare;PowerState
VM.Collect.Source(1).Compute(1).Type="Awk"
VM.Collect.Source(1).Compute(1).AwkScript=EmbeddedFile(23)
VM.Collect.Source(1).Compute(1).KeepOnlyRegExp="^COLLECT;"
VM.Collect.Source(1).Compute(1).Separators=";"

// ValueTable = Source(1)
// COLLECT;DeviceID;PowerShare;PowerState
VM.Collect.ValueTable=%VM.Collect.Source(1)%
VM.Collect.DeviceID=ValueTable.Column(2)
VM.Collect.PowerShare=ValueTable.Column(3)
VM.Collect.PowerState=ValueTable.Column(4)


///////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 1 : Luns
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY,lunname;manufacturerID;logicalDeviceID;deviceWWN;state;AdditionalInformation;alivePathCount
///	   COLLECT;logicalDeviceID;state;alivePathCount;
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(1):
BEGIN {

############################################### Value to be set manually ###############################################
	# LUN Discovery
	# LUN DISCOVERY,lunname;manufacturerID;logicalDeviceID;deviceWWN;state;AdditionalInformation;alivePathCount;LocalDeviceName;RemoteDeviceName
	print "DISCOVERY;LunOnline;Dell;1;WWN1;Online;Hardware Location Code: U78AB.001.WZSGGSC-P1-C5-T2-W5006016408E03079-L07;1;localhost;remotehost"
	print "DISCOVERY;LunUnknown;Intel;2;WWN2;Unknown;Hardware Location Code: U78AB.001.WZSGGSC-P1-C5-T2-W500601693EA04D2B-L0;2;bacon"
	print "DISCOVERY;LunOffline;Hitachi;3;WWN3;Offline;Hardware Location Code: U78AB.001.WZSGGSC-P1-C5-T2-W500601603CE010D5-L0;3;pc-hds;"
	print "DISCOVERY;LunNoPath;Dell;4;WWN4;Offline;Hardware Location Code: U78AB.001.WZSGGSC-P1-C5-T2-W500601603CE010D5-L0;0;;"

	# Collect
	# COLLECT;logicalDeviceID;state;alivePathCount;
	print "COLLECT;1;alive;1"
	print "COLLECT;2;Unknown;2"
	print "COLLECT;3;dead;3"
	print "COLLECT;4;alive;0"
}
EmbeddedFile(1).End


/////////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 2 : Batterys
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   // DISCOVERY;BatteryDeviceID;BatteryModel;BatteryVendor;BatterieDisplayID;AttachedToDeviceID;AttachedToDeviceType;AdditionalInformation
///	   COLLECT;logicalDeviceID;state;alivePathCount;
///
/////////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(2):
BEGIN {

############################################### Value to be set manually ###############################################
	# BATTERY Discovery
	# BATTERY DISCOVERY;BatteryDeviceID;BatteryModel;BatteryVendor;BatterieDisplayID;AttachedToDeviceID;AttachedToDeviceType;AdditionalInformation
	print "DISCOVERY;1;MegaPack800;Tesla;Battery1;1;Enclosure;Location: Rack1"
	print "DISCOVERY;2;Power1000;Panasonic;Battery2;1;Enclosure;Location: Rack2"
	print "DISCOVERY;3;Power3000;Panasonic;Battery3;1;Enclosure;Location: "

	# BATTERY Collect
	# BATTERY COLLECT;BatteryDeviceID;BatteryStatus;BatteryCharge
	print "COLLECT;1;up;95;5"
	print "COLLECT;2;down;5;120"
	print "COLLECT;3;mid;50;60"
}
EmbeddedFile(2).End

/////////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 3 : Blades
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   // DISCOVERY;BaldeID;BladeDisplayID;BladeSerial;AttachedToDeviceID;AttachedToDeviceType;AdditionalInformation
///	      COLLECT;BladeID;BladeStatus;
///
/////////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(3):
BEGIN {

############################################### Value to be set manually ###############################################
	# BLADE Discovery
	# BLADE DISCOVERY;BaldeID;BladeDisplayID;BladeSerial;AttachedToDeviceID;AttachedToDeviceType;AdditionalInformation
	print "DISCOVERY;1;Blade1;15E4582A;1;Enclosure;Model Number: GVAX57A1-BNNX14X Partition: 0"
	print "DISCOVERY;2;Blade2;15A4586Z;1;Enclosure;Model Number: GVAX57A1-CNNX14Y Partition: 4"
	print "DISCOVERY;3;Blade3;17B4533A;1;Enclosure;Model Number: GVAX57A1-CNNX14Y Partition: 4"

	# BLADE Collect
	# BLADE COLLECT;BladeID;BladeStatus;PowerState
	print "COLLECT;1;OK;ON;"
	print "COLLECT;2;ALARM;SUSPENDED;"
	print "COLLECT;3;WARN;OFF;"
}
EmbeddedFile(3).End


/////////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 4 : CPU
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   // DISCOVERY;CPUid;CPUdisplayID;CPUvendor;CPUmodel;CPUconso;CPUmaxSpeed;AdditionalInformation
///	      COLLECT;CPUid;CPUstatus;CPUcurrSpeed
///
/////////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(4):
BEGIN {

############################################### Value to be set manually ###############################################
	# CPU Discovery
	# CPU DISCOVERY;CPUid;CPUdisplayID;CPUvendor;CPUmodel;CPUconso;CPUmaxSpeed;AdditionalInformation
	print "DISCOVERY;1;PROC_1;INTEL;Xeon E7;200;3000;1;Enclosure;Model: 45 (Intel Xeon CPU E5-2428L 0 @ 1.80GHz) "
	print "DISCOVERY;2;PROC_2;INTEL;Xeon E5;220;2800;1;Enclosure;Model: 45 (Intel Xeon CPU E5-2428L 0 @ 1.80GHz) "
	print "DISCOVERY;3;PROC_3;AMD;EPYC 7601;180;3200;1;Enclosure;Model: 45 (Intel Xeon CPU E5-2428L 0 @ 1.80GHz) "

	# CPU Collect
	# CPU COLLECT;CPUid;CPUstatus;CPUcurrSpeed;CorrectedErrorCount;PredictedFailure
	print "COLLECT;1;OK;1800;5;0"
	print "COLLECT;2;ALARM;3000;10;1"
	print "COLLECT;3;WARN;2200;15;"
}
EmbeddedFile(4).End



/////////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 5 : CPUCORE
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   // DISCOVERY;CupCoreID;CupCoreDisplayID;CpuID;AdditionalInformation
///	      COLLECT;CupCoreID;CupCoreStatus;CupCoreUsed
///
/////////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(5):
BEGIN {

############################################### Value to be set manually ###############################################
	# CPUCORE Discovery
	# CPUCORE DISCOVERY;CupCoreID;CupCoreDisplayID;CpuID;AdditionalInformation
	print "DISCOVERY;1;CORE #1;1;Location: a"
	print "DISCOVERY;2;CORE #2;1;Location: b"
	print "DISCOVERY;3;CORE #3;1;Location: c"
	print "DISCOVERY;4;CORE #4;1;Location: d"
	print "DISCOVERY;5;CORE #1;2;Location: e"
	print "DISCOVERY;6;CORE #2;2;Location: f"
	print "DISCOVERY;7;CORE #1;3;Location: 1"
	print "DISCOVERY;8;CORE #2;3;Location: 2"
	print "DISCOVERY;9;CORE #3;3;Location: 3"
	print "DISCOVERY;10;CORE #4;3;Location: 4"
	print "DISCOVERY;11;CORE #5;3;Location: 5"
	print "DISCOVERY;12;CORE #6;3;Location: 6"

	# CPUCORE Collect
	# CPUCORE COLLECT;CupCoreID;CupCoreStatus;CupCoreUsed
	print "COLLECT;1;OK;16000"
	print "COLLECT;2;WARN;1554"
	print "COLLECT;3;OK;2034"
	print "COLLECT;4;ALARM;354"
	print "COLLECT;5;OK;5497"
	print "COLLECT;6;ALARM;2382"
	print "COLLECT;7;OK;1222"
	print "COLLECT;8;OK;1134"
	print "COLLECT;9;WARN;3445"
	print "COLLECT;10;OK;8518"
	print "COLLECT;11;OK;9474"
	print "COLLECT;12;OK;10023"
}
EmbeddedFile(5).End

/////////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 6 : DiskController
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   // DISCOVERY;DiskControllerID;DiskControllerDisplayID;AttachedTodeviceID;Vendor;Model;ControllerNumber;AdditionalInformation
///	      COLLECT;DiskControllerID;DiskControllerStatus;BatteryStatus
///
/////////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(6):
BEGIN {

############################################### Value to be set manually ###############################################

	# DiskController DISCOVERY
	# DiskController DISCOVERY DISCOVERY;DiskControllerID;DiskControllerDisplayID;AttachedTodeviceID;Vendor;Model;ControllerNumber;AdditionalInformation
	print "DISCOVERY;1;Disk Controller 1;1;EMC .Company;Model 15;1;Manufacturer: FXN - Spare Part Number: 683245-001 - Product Number: QR482A - Alternative Serial Number: 0000000000 Bios: 4.7.8 - Kernel: 3.1.3"
	print "DISCOVERY;2;Disk Controller 2;1;EMC .Company;Model 15;2;Manufacturer: FXN - Spare Part Number: 683245-001 - Product Number: QR482A - Alternative Serial Number: CZ33169605 Bios: 4.7.8 - Kernel: 3.1.3"
	print "DISCOVERY;3;F5 Big;1;F5-BigIP;D106;;Manufacturer: BIG - Spare Part Number: F5-D106 - Product Number: D106 - Alternative Serial Number: f5-iryj-vgrt"

	# DiskController Collect
	# COLLECT;DiskControllerID;DiskControllerStatus;BatteryStatus
	print "COLLECT;1;OK;OK"
	print "COLLECT;2;ALARM;WARN"
	print "COLLECT;3;WARN;ALARM"
}
EmbeddedFile(6).End

/////////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 8 : Enclosure
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   // DISCOVERY;EnclosureID;EnclosureDisplayID;EnclosureVendor;EnclosureModel;EnclosureType;AdditionalInformation
///	      COLLECT;EnclosureeID;EnclosureStatus;EnclosureConsumption;EnergyUsage
///
/////////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(8):
BEGIN {

############################################### Value to be set manually ###############################################

	# Enclosure DISCOVERY
	# Enclosure DISCOVERY;EnclosureID;EnclosureDisplayID;EnclosureVendor;EnclosureModel;EnclosureType;AdditionalInformation
	print "DISCOVERY;1;Enclosure 1;EMC;ZED;Storage;Machine ID: 00F6BA5A4C00 System ID: 8000121245100000 LPAR System ID: 8000121245100002"
	print "DISCOVERY;2;000297800620 1;EMC;VMAX250F;Storage;Serial number : 297800620"

	# Enclosure Collect
	# Enclosure COLLECT;EnclosureeID;EnclosureStatus;EnclosureConsumption;EnergyUsage;IntrusionStatus
	print "COLLECT;1;OK;210;;OK"
	print "COLLECT;2;WARN;9999;;ALARM"
}
EmbeddedFile(8).End

/////////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 9 : FAN
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   // DISCOVERY;FanID;FanDisplayID;FanType;PercentWarningThreshold;PercentAlarmThreshold;AttachedToDeviceID;AttachedToDeviceTyp;AdditionalInformation
///	      COLLECT;FanID;FanStatus;FanSpeed;SpeedPercent
///
/////////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(9):
BEGIN {

############################################### Value to be set manually ###############################################

	# FAN DISCOVERY
	# FAN DISCOVERY;FanID;FanDisplayID;FanType;PercentWarningThreshold;PercentAlarmThreshold;AttachedToDeviceID;AttachedToDeviceTyp;AdditionalInformation
	print "DISCOVERY;1;FAN 1;CPU;;;1;Enclosure;Fan Module: A Slot: 0"
	print "DISCOVERY;2;FAN 2;Front;;;1;Enclosure;Fan Module: B Slot: 1"

	# FAN Collect
	# FAN COLLECT;FanID;FanStatus;FanSpeed;SpeedPercent
	print "COLLECT;1;OK;15000;5;"
	print "COLLECT;2;OK;5411;98;"
}
EmbeddedFile(9).End

///////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 10 : LED
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY;LedID;LedDisplayId;AttachedToDeviceID;AttachedToDeviceType;Name;OnStatus;OffStatus;BlinkingStatus;AlarmOnColor;WarningOnColor;AdditionalInformation
///	   COLLECT;LedID;LedStatus;LedColor
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(10):
BEGIN {

############################################### Value to be set manually ###############################################
	# LED Discovery
	# LED DISCOVERY;LedID;LedDisplayId;AttachedToDeviceID;AttachedToDeviceType;Name;OnStatus;OffStatus;BlinkingStatus;AlarmOnColor;WarningOnColor;AdditionalInformation
	print "DISCOVERY;1;LED1;1;Enclosure;Enclosure 1 Indicator 1;ALARM;WARN;WARN;RED;GREEN;Color: RED and YELLOW"
	print "DISCOVERY;2;LED2;1;Enclosure;Enclosure 1 Indicator 2;ALARM;WARN;WARN;RED;YELLOW;Color: RED and YELLOW"

	# Collect
	# COLLECT;LedID;LedStatus;LedColor
	print "COLLECT;1;ON;GREEN"
	print "COLLECT;2;OFF;PURPLE"
}
EmbeddedFile(10).End

///////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 11 : LogicalDisk
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY;LDid;LDdisplayid;LDAttachedToDeviceID;LDAttachedToDeviceType;LDControllerNumber;LDSsize;RaidLevel;LDtype;AdditionalInformation
///	   COLLECT;LDid;LDstatus;UnallocatedSpace
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(11):
BEGIN {

############################################### Value to be set manually ###############################################
	# LogicalDisk  Discovery
	# LogicalDisk  DISCOVERY;LDid;LDdisplayid;LDAttachedToDeviceID;LDAttachedToDeviceType;LDControllerNumber;LDSsize;RaidLevel;LDtyper;AdditionalInformation
	print "DISCOVERY;1;Pool 1;1;Enclosure;1;5;5;pool;Protection Policy: HDD+2d:1n1-4:bay2-6"
	print "DISCOVERY;2;Pool 2;1;Enclosure;1;2;5;pool;Protection Policy: HDD+2d:1n1-4:bay7-12"
	print "DISCOVERY;3;volume 1;2;Enclosure;1;15;5;volume;Protection Policy: "
	print "DISCOVERY;4;volume 1;1;Enclosure;1;30;5;volume;Protection Policy: "

	# LogicalDisk  Collect
	# LogicalDisk  COLLECT;LDid;LDstatus;UnallocatedSpace;ErrorCount
	print "COLLECT;1;OK;30000000000000000"
	print "COLLECT;2;OK;5000000000000000"
	print "COLLECT;3;OK;20000000000000000"
    print "COLLECT;4;OK;20000000000000000;5"

}
EmbeddedFile(11).End


///////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 12 : Memory
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY;MemoryID;MemoryDisplayID;AttachedToDeviceID;AttachedToDeviceType;Vendor;Model;SerialNumber;Type;Size;AdditionalInformation
///	   COLLECT;MemoryID;MemStatus;
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(12):
BEGIN {

############################################### Value to be set manually ###############################################
	# Memory  Discovery
	# Memory  DISCOVERY;MemoryID;MemoryDisplayID;AttachedToDeviceID;AttachedToDeviceType;Vendor;Model;SerialNumber;Type;Size;AdditionalInformation
	print "DISCOVERY;1;Memory 1;1;Enclosure;DELL;MEM44;ER4521DFE;DDR4;32000;Slot: J0155"
	print "DISCOVERY;2;Memory 2;1;Enclosure;DELL;MEM44;ER4521DFE;DDR4;16000;Slot: J0300"
	print "DISCOVERY;3;Memory 3;1;Enclosure;DELL;MEM44;ER4521DFE;DDR4;16000;Slot: J0301"

	# Memory  Collect
	# Memory  COLLECT;MemoryID;MemStatus;PredictedFailure;ErrorStatus;LastError;ErrorCount
  print "COLLECT;1;OK;0;OK;Memory OK;0;"
  print "COLLECT;2;WARN;0;WARN;;;"
  print "COLLECT;3;ALARM;1;ALARM;Memory fail to retrieve status;5;"
}
EmbeddedFile(12).End


///////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 13 : NetworkCard
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DDISCOVERY;NCid;NCdisplatId;AttachedToDeviceID;Vendor;Model;NCtype;PhysicalAddress;LogicalAddress;LogicalAddressType;SN;AdditionalInformation
///	   COLLECT;NCid;NCstatus;NSlinkStatus;NClinkSpeed;DuplexMode;ErrorCount;ReceivedBytes;TransmittedBytes
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(13):
BEGIN {

############################################### Value to be set manually ###############################################
	# NetworkCard  Discovery
	# NetworkCard  DISCOVERY;NCid;NCdisplatId;AttachedToDeviceID;Vendor;Model;NCtype;PhysicalAddress;LogicalAddress;LogicalAddressType;SN;AdditionalInformation
	print "DISCOVERY;1;Network Card 1;1;Gigabyt;RG1G;ETHERNET;00:0a:95:9d:68:16;192.168.5.24;IP;D4566ES45;Location: IO Module 2 Port ID 0 Part Number: 019-078-041 - Serial Number: 00000000000 - Alternative Part Number: AFBR-703ASDZ-E2 - Alternative Serial Number: AGL1403D1000664"
	print "DISCOVERY;2;Network Card 2;1;HP;GigaHP;FC Port;00:0a:95:9d:68:16;192.168.5.25;IP;D4566ES46;Location: IO Module 2 Port ID 0 Part Number: 019-078-041 - Serial Number: 00000000000 - Alternative Part Number: AFBR-703ASDZ-E2 - Alternative Serial Number: AGL1403D1000687"
	print "DISCOVERY;3;Network Card 3;1;AZUS;AZ100G;FC Port G;00:0a:95:9d:68:16;192.168.5.26;IP;D4566ES47;Location: IO Module 2 Port ID 1 Part Number: 019-078-041 - Serial Number: 00000000000 - Alternative Part Number: AFBR-703ASDZ-E2 - Alternative Serial Number: AGL1403D1000657 "
	print "DISCOVERY;4;MSHW-4791;1;AZUS;AZ100G;FC Port G;00:0a:95:9d:68:16;192.168.5.26;IP;D4566ES48;Location: IO Module 2 Port ID 1 Part Number: 019-078-041 - Serial Number: 00000000000 - Alternative Part Number: AFBR-703ASDZ-E2 - Alternative Serial Number: AGL1403D1001186 "

	# NetworkCard  Collect
	# NetworkCard  COLLECT;NCid;NCstatus;NSlinkStatus;NClinkSpeed;DuplexMode;ErrorCount;ReceivedBytes;TransmittedBytes;ReceivedPackets;TransmittedPackets;ZeroBufferCreditCount
	print "COLLECT;1;OK;OK;1000;1000;5;5222;4111"
	print "COLLECT;2;OK;OK;1000;1000;5;5222;4111"
	print "COLLECT;3;OK;OK;1000;1000;5;5222;4111;0;0;0;"
  	print "COLLECT;4;OK;OK;56000;1;10;10000000;40000000;10;40;95"
}
EmbeddedFile(13).End

///////////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 14 : OtherDevice
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY;OdId;OdDisplayId;AttachedToDeviceID;AttachedToDeviceType;AdditionalInformation
///	   COLLECT;OdId;OdStatus;OdStatusInformation;OdUsageCount;OdPowerConsumption
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(14):
BEGIN {

############################################### Value to be set manually ###############################################
	# OtherDevice  Discovery
	# OtherDevice  DISCOVERY;OdId;OdDisplayId;AttachedToDeviceID;AttachedToDeviceType;AdditionalInformation
	print "DISCOVERY;1;erssOtherDevices1887;1;Enclosure;Manufacturer:LSI - Model:9205-8e Serial Number:Onboard Firmware Version: 17.11.00.00"
	print "DISCOVERY;2;azzeOtherDevices2887;1;Enclosure;Part Number: GV-BE2LSW1X1-Y Serial Number: 002212 Model Number: "
	print "DISCOVERY;3;zereOtherDevices3887;1;Enclosure;Part Number: GVX-BE2MNG1X1 Serial Number: H9900652C04 Model Number: HBS03-BC"

	# OtherDevice  Collect
	# OtherDevice  COLLECT;OdId;OdStatus;OdStatusInformation;OdUsageCount;OdPowerConsumption;Value
	print "COLLECT;1;OK;Working fine;2300;15;99999;"
	print "COLLECT;2;WARN;Atention ralentissements;50;10;777;"
	print "COLLECT;3;ALARM;Les commandes ne repondent plus;120;50;;"
}
EmbeddedFile(14).End



///////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 15 : PhysicalDisk
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY;PdID;PdDisplayId;AttachedToDeviceID;AttachedToDeviceType;ControllerNumber;Vendor;Model;FirmwareVersion;Size;SerialNumber
///	   COLLECT;PdID;PdStatus;StatusInformation;PredictedFailure;ErrorCount;DeviceNotReadyErrorCount;MediaErrorCount;NoDeviceErrorCount;HardErrorCount;IllegalRequestErrorCount;RecoverableErrorCount;TransportErrorCount
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(15):
BEGIN {

############################################### Value to be set manually ###############################################
	#PhysicalDisk  Discovery
	#PhysicalDisk  DISCOVERY;PdID;PdDisplayId;AttachedToDeviceID;AttachedToDeviceType;ControllerNumber;Vendor;Model;FirmwareVersion;Size;SerialNumber
	print "DISCOVERY;1;Disk 01;1;Enclosure;1;Western Digital;666;12E;300000000000;154ERFD455"
	print "DISCOVERY;2;Disk 02;1;Enclosure;1;Western Digital;784.1;12E;1000000000000;154ERFD455"
	print "DISCOVERY;3;Disk 03;1;Enclosure;1;Wester Digital;784.2;12E;200000000000;154ERFD455"

	#PhysicalDisk  Collect
	#PhysicalDisk  COLLECT;PdID;PdStatus;StatusInformation;PredictedFailure;ErrorCount;DeviceNotReadyErrorCount;MediaErrorCount;NoDeviceErrorCount;HardErrorCount;IllegalRequestErrorCount;RecoverableErrorCount;TransportErrorCount
	print "COLLECT;1;OK;Disk OK;True;1;1;1;41;1;1;1;1"
	print "COLLECT;2;OK;Disk OK;True;1;1;1;41;1;1;1;1"
	print "COLLECT;3;OK;Disk OK;True;1;1;1;41;1;1;1;1"
}
EmbeddedFile(15).End



///////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 16 : PowerSupply
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY;PsId;PsDeviceId;AttachedToDeviceID;AttachedToDeviceType;PowerSupplyType;PowerSupplyPower;AdditionalInformation
///	   COLLECT;PsId;PsStatus;UsedWatt
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(16):
BEGIN {

############################################### Value to be set manually ###############################################
	# PowerSupply  Discovery
	# PowerSupply  DISCOVERY;PsId;PsDeviceId;AttachedToDeviceID;AttachedToDeviceType;PowerSupplyType;PowerSupplyPower;AdditionalInformation
	print "DISCOVERY;1;Power Supply 1;1;Enclosure;AC;1F4;Serial Number: 100350353 Part Number: 357+KPA0018540-1"
	print "DISCOVERY;2;Power Supply 2;1;Enclosure;AC;258;Serial Number: 100350347 Part Number: 357+KPA0018540-1"
	print "DISCOVERY;3;Power Supply 3;1;Enclosure;AC;2BC;Serial Number: Part Number:"

	# PowerSupply  Collect
	# PowerSupply  COLLECT;PsId;PsStatus;UsedWatt;UsedPercent
	print "COLLECT;1;OK;300;20;"
	print "COLLECT;2;WARN;400;30;"
	print "COLLECT;3;ALARM;450;;" #checks that engine will calculate if not specified
}
EmbeddedFile(16).End

///////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 17 : Robotic
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY;RoboId;RoboDisplayID;AttachedToDeviceID;AttachedToDeviceType;RoboticType;Vendor;Model;SerialNumber;AdditionalInformation
///	   COLLECT;RoboId;RoboStatus;RobotStatusInformation;MoveCount;ErrorCount
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(17):
BEGIN {

############################################### Value to be set manually ###############################################
	# Robotic  Discovery
	# Robotic  DISCOVERY;RoboId;RoboDisplayID;AttachedToDeviceID;AttachedToDeviceType;RoboticType;Vendor;Model;SerialNumber;AdditionalInformation
	print "DISCOVERY;1;Robot 1;1;Enclosure;Cassette Robot;DELL;Robot Rock 5;SN12454EE;Firmware Version: 10024114"
	print "DISCOVERY;2;Robot 2;1;Enclosure;Cassette Robot;DELL;Robot Rock 5;SN12454EE;Firmware Version: 10024114_0"
	print "DISCOVERY;3;Robot 3;1;Enclosure;Cassette Robot;DELL;Robot Rock 5;SN12454EE;Firmware Version: 10024114-1"

	# Robotic  Collect
	# Robotic  COLLECT;RoboId;RoboStatus;RobotStatusInformation;MoveCount;ErrorCount
	print "COLLECT;1;OK;;50;2"
	print "COLLECT;2;ALARM;Cassette blocked;250;30"
    print "COLLECT;3;OK;;1;10;"
}
EmbeddedFile(17).End

///////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 18 : TapeDrive
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY;TdId;TdDisplayId;AttachedToDeviceID;AttachedToDeviceType;Vendor;Model;SerialNumber;ControllerNumber;AdditionalInformation
///	   COLLECT;TdId;TdStatus;StatusInformation;PredictedFailure;ErrorCount
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(18):
BEGIN {

############################################### Value to be set manually ###############################################
	# TapeDrive  Discovery
	# TapeDrive  DISCOVERY;TdId;TdDisplayId;AttachedToDeviceID;AttachedToDeviceType;Vendor;Model;SerialNumber;ControllerNumber;AdditionalInformation
	print "DISCOVERY;1;Tape Drive 1;1;Enclosure;Sony;S40;154ERD;1;Element ID: 500 Fibre Node Name: 500104f00094c3c4 Hardware Version: L29S"
	print "DISCOVERY;2;Tape Drive 2;1;Enclosure;IBM;TS2270;IBMTS2270TapeDrive;1;Element ID: 2270 Hardware Version: TS2270"
	print "DISCOVERY;3;Tape Drive 3;1;Enclosure;IBM;TS2280;IBMTS2280TapeDrive;1;Element ID: 500 Fibre Node Name: 500104f00094c3c4 Hardware Version: TS2280"

	# TapeDrive  Collect
	# TapeDrive  COLLECT;TdId;TdStatus;StatusInformation;MountCount;UnmountCount;ErrorCount;NeedsCleaning
	print "COLLECT;1;OK;All good;2;2;2;1;"
    print "COLLECT;2;ALARM;Critical failure;0;0;0;0;"
    print "COLLECT;3;UNKNOWN;;5;10;15;2;"
}
EmbeddedFile(18).End

///////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 19 : Temperature
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY;TempId;TempDisplayId;AttachedToDeviceID;AttachedToDeviceType;TemperatureType;WarningThreshold;AlarmThreshold;AdditionalInformation
///	   COLLECT;TempId;TempStatus;TempStatusInformation;Temperature
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(19):
BEGIN {

############################################### Value to be set manually ###############################################
	# Temperature  Discovery
	# Temperature  DISCOVERY;TempId;TempDisplayId;AttachedToDeviceID;AttachedToDeviceType;TemperatureType;WarningThreshold;AlarmThreshold;AdditionalInformation
	print "DISCOVERY;1;TEMP 1;1;Enclosure;CPU;60;80;Ambient: PSU-1"
	print "DISCOVERY;2;TEMP 2;1;Enclosure;CPU;60;80;Ambient: PSU-2"

	# Temperature  Collect
	# Temperature  COLLECT;TempId;TempStatus;TempStatusInformation;Temperature
	print "COLLECT;1;OK;Temp ok;38"
	print "COLLECT;2;OK;Temp ok;98"
}
EmbeddedFile(19).End

///////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 20 : Voltage
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY;VoltId;VoltDisplayId;AttachedToDeviceID;AttachedToDeviceType;VoltageType;AdditionalInformation
///	   COLLECT;VoltId;VoltStatus;VoltStatusInformation;Voltage
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(20):
BEGIN {

############################################### Value to be set manually ###############################################
	# Voltage  Discovery
	# Voltage  DISCOVERY;VoltId;VoltDisplayId;AttachedToDeviceID;AttachedToDeviceType;VoltageType;AdditionalInformation
	print "DISCOVERY;1;Voltage1;1;Enclosure;CPU;Location: Bay-2"
	print "DISCOVERY;2;Voltage2;1;Enclosure;GPU;Location: PCI-E"

	# Voltage  Collect
	# Voltage  COLLECT;VoltId;VoltStatus;VoltStatusInformation;Voltage
	print "COLLECT;1;OK;;2100"
	print "COLLECT;2;OK;;54841"
}
EmbeddedFile(20).End

///////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 21 : PhysicalDisk with a loop to test tablejoint
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY;PdID;PdDisplayId;AttachedToDeviceID;AttachedToDeviceType;ControllerNumber;Vendor;Model;FirmwareVersion;Size;SerialNumber
///	   COLLECT;PdID;PdStatus;StatusInformation;PredictedFailure;ErrorCount;DeviceNotReadyErrorCount;MediaErrorCount;NoDeviceErrorCount;HardErrorCount;IllegalRequestErrorCount;RecoverableErrorCount;TransportErrorCount;EnduranceRemaining
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(21):
BEGIN {

############################################### Value to be set manually ###############################################

	maxdisk=250;
	maxsize=300000000000;
	i=1;
	# DISCOVERY WITH TABLEJOINT
	# JOIN1;PdID
	while (i<=maxdisk) {
		physicaldisks[$i]="JOIN1;"i";";
		print physicaldisks[$i]
		i=i+1;
	}
	print "JOIN1;"500";";
	print "JOIN1;"501";";
    print "JOIN1;"502";";
    print "JOIN1;"503";";

	i=1;
	# DISCOVERY WITH TABLEJOINT
	# JOIN2;PdID;PdDisplayId;AttachedToDeviceID;AttachedToDeviceType;ControllerNumber;Vendor;Model;FirmwareVersion;Size;SerialNumber;AdditionalInformation
	while (i<=maxdisk) {
		disksizefunction = int(i * (maxsize/maxdisk));
		physicaldisks[$i]="JOIN2;"i";Disk "i";1;Enclosure;1;Western Digital;Modeltest;12E;"disksizefunction";154ERFD455;Slot : B"i
		print physicaldisks[$i]
		i=i+1;
	}
	# FOR UNIT TEST
	# COLLECT;PdID;PdStatus;StatusInformation;PredictedFailure;ErrorCount;DeviceNotReadyErrorCount;MediaErrorCount;NoDeviceErrorCount;HardErrorCount;IllegalRequestErrorCount;RecoverableErrorCount;TransportErrorCount

	print "JOIN2;"500";Disk "500";1;Enclosure;1;SEAGATE;H101860SFSUN600G;12E;5001514;D3006RGL;Slot : B"500
	print "JOIN2;"501";Disk "501";1;Enclosure;1;IBM-ESXS;ST2000NXCLAR2000;13E;10000000;6SE40JGC;Slot : B"501
    print "JOIN2;"502";Disk "502";1;Enclosure;1;Western Digital;Modeltest;14E;999999999999;H101860;Slot : B"502
    print "JOIN2;"503";Disk "503";1;Enclosure;1;Crucial;MX500;MX500v2;545154;LEC88FOL;Slot : B"503

	i=1;
	## COLLECT
	while (i<=maxdisk) {
		diskendurancefunction = int(i * (100 / maxdisk));
		if ( i > (maxdisk/2) )
		{
			physicaldisks[$i]="COLLECT;"i";OK;Disk OK;True;1;1;1;41;1;1;1;1;"diskendurancefunction
		}
		else
		{
			physicaldisks[$i]="COLLECT;"i";OK;Disk OK;False;1;1;1;41;1;1;1;1;"diskendurancefunction
		}

		print physicaldisks[$i]
		i=i+1;
	}
	# FOR UNIT TEST
	print "COLLECT;"500";OK;Disk OK;False;1;1;1;41;1;1;1;1;"1
	print "COLLECT;"501";OK;Disk OK;False;1;1;1;41;1;1;1;1;"5
	print "COLLECT;"502";OK;Disk OK;False;1;1;1;41;1;1;1;1;"10
  	print "COLLECT;"503";OK;Disk OK;False;15;20;30;40;50;60;70;80;"1

}
EmbeddedFile(21).End

///////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 22 : GPU
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///	   DISCOVERY;DeviceID;DisplayID;Vendor;Model;DriverVersion;FirmwareVersion;SerialNumber;Size;Location
///    COLLECT;DeviceID;Status;StatusInformation;PredictedFailure;CorrectedErrorCount;ErrorCount;UsedTime;DecoderUsedTime;EncoderUsedTime;MemoryUtilization;ReceivedBytesRate;TransmittedBytesRate;PowerConsumption;
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(22):
BEGIN {

  # GPU  Discovery
  # GPU  DISCOVERY;DeviceID;DisplayID;Vendor;Model;DriverVersion;FirmwareVersion;SerialNumber;Size;Location
  print "DISCOVERY;GPUNvidia;Nvidia 3080ti rtx;Nvidia;3080 ti;458.52635;35135131;AZEAX12454;16384;Location: Computer;1;Enclosure"
  print "DISCOVERY;GPUAMD150;Amd 6800 xt;Amd;6800 xt;1q25q;1111;SER14L;8192;Location: PCI Express;1;Enclosure"
  print "DISCOVERY;GPUINTEL;Intel Xe HPG;Intel;Xe;Xe-HPG 96EU;128EU;DG2;8192;Location: PCI Express;1;Enclosure"

  # GPU  COLLECT
  # UsedTime;DecoderUsedTime;EncoderUsedTime;ReceivedBytes;TransmittedBytes
  print "COLLECT;GPUNvidia;OK;Normal;0;10;122;10;60;50;55;15000;37500;800;"
  print "COLLECT;GPUAMD150;ALARM;Overheat;1;13;154;150;150;150;18;"";"";654;"
  print "COLLECT;GPUINTEL;WARN;Idle;;1;1;;;;1000;;;0;15;20;25;30000000;40000000"

}
EmbeddedFile(22).End

///////////////////////////////////////////////////////////////////////////////////////////////
///
///    Embedded File 23 : VM
///
///    AWK script that takes the wonderful array of objects and returns them in column form
///    DISCOVERY;DeviceID;DisplayID;AttachedToDeviceID;AttachedToDeviceType;Hostname;AdditionalInformation1
///    COLLECT;DeviceID;PowerShare;PowerState
///
////////////////////////////////////////////////////////////////////////////////////////////////////
EmbeddedFile(23):
BEGIN {
############################################### Value to be set manually ###############################################
    # VM  Discovery
	# VM  DISCOVERY;DeviceID;DisplayID;AttachedToDeviceID;AttachedToDeviceType;Hostname;AdditionalInformation1
	print "DISCOVERY;weil;weil-09;1;Enclosure;localname;Bay1"
	print "DISCOVERY;weil2;weil-05;1;Enclosure;127.0.0.1;Bay2"
	print "DISCOVERY;weil3;weil;1;Enclosure;thehostname;Bay2"

	# VM  Collect
	# VM  COLLECT;DeviceID;PowerShare;PowerState
	print "COLLECT;weil;7;SUSPENDED;"
	print "COLLECT;weil2;70;ON;"
	print "COLLECT;weil3;10;OFF;"
}
EmbeddedFile(23).End
