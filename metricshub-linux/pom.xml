<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.sentrysoftware</groupId>
		<artifactId>metricshub-parent</artifactId>
		<version>0.9.01-SNAPSHOT</version>
	</parent>

	<artifactId>metricshub-linux</artifactId>
	<packaging>pom</packaging>

	<name>MetricsHub for Linux</name>
	<description>MetricsHub Package for Linux</description>
	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>metricshub-agent</artifactId>
			<version>${project.version}</version>
			<classifier>dist</classifier>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>org.sentrysoftware</groupId>
			<artifactId>metricshub-jre-linux</artifactId>
			<version>${metricshub-jre.version}</version>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>metricshub-doc</artifactId>
			<version>${project.version}</version>
			<classifier>site</classifier>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<!-- Unpack metricshub-agent -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-metricshub-agent</id>
						<phase>process-resources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/jpackage/metricshub</outputDirectory>
							<includeArtifactIds>metricshub-agent</includeArtifactIds>
						</configuration>
					</execution>
					<execution>
						<id>unpack-jre</id>
						<phase>process-resources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/jpackage/jre</outputDirectory>
							<includeArtifactIds>metricshub-jre-linux</includeArtifactIds>
						</configuration>
					</execution>
					<execution>
						<id>unpack-metricshub-doc</id>
						<phase>process-resources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/jpackage/metricshub/site</outputDirectory>
							<includeArtifactIds>metricshub-doc</includeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- JPackage resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Run jpackage command to generate MetricsHub app-image -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>package-app-image</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${env.JAVA_HOME}/bin/jpackage</executable>
							<arguments>
								<argument>--add-launcher</argument>
								<argument>metricshub-encrypt=metricshub-encrypt.properties</argument>
								<argument>--add-launcher</argument>
								<argument>service=metricshub-agent.properties</argument>
								<argument>@jpackage.txt</argument>
							</arguments>
							<workingDirectory>${project.build.directory}/jpackage</workingDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Assembly for linux package and docker classifier -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>linux-package</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/linux-descriptor.xml</descriptor>
							</descriptors>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
					<execution>
						<id>docker-package</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/docker.xml</descriptor>
							</descriptors>
							<appendAssemblyId>true</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Attach artifacts -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>attach-artifact-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>${project.build.directory}/${project.artifactId}-${project.version}.tar.gz</file>
									<type>tar.gz</type>
									<artifactId>${project.artifactId}</artifactId>
								</artifact>
								<artifact>
									<file>${project.build.directory}/${project.artifactId}-${project.version}-docker.tar.gz</file>
									<type>tar.gz</type>
									<artifactId>${project.artifactId}</artifactId>
									<classifier>docker</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>